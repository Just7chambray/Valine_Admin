<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Just7chambray.github.io</id>
    <title>Techaholic</title>
    <updated>2020-09-29T15:37:48.987Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Just7chambray.github.io"/>
    <link rel="self" href="https://Just7chambray.github.io/atom.xml"/>
    <subtitle>栖迟於一丘，则天下不易其乐。</subtitle>
    <logo>https://Just7chambray.github.io/images/avatar.png</logo>
    <icon>https://Just7chambray.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Techaholic</rights>
    <entry>
        <title type="html"><![CDATA[实训日记0929]]></title>
        <id>https://Just7chambray.github.io/post/20200929prodairy</id>
        <link href="https://Just7chambray.github.io/post/20200929prodairy">
        </link>
        <updated>2020-09-29T13:14:30.000Z</updated>
        <summary type="html"><![CDATA[<p>done!!!<br>
实训结束，普天同庆！</p>
]]></summary>
        <content type="html"><![CDATA[<p>done!!!<br>
实训结束，普天同庆！</p>
<!-- more -->
<p>终于迎来了实训的最后一天，虽然还面临着最后一项挑战也是实训成果的检验—-答辩，有点紧张却又有点兴奋。<br>
小组成员各自忙碌，昨晚才把整个报告完成得差不多样子，可能也是最近事情太多，情绪精力方面都欠佳，早上起来做准备检查文档时才发现有好几处的错误，匆匆忙忙一通修改之后去打印上课，真的，感觉要被掏空。</p>
<hr>
<h2 id="答辩报告">答辩报告</h2>
<p>老师给了两个课题供我们选择，我们小组选了第一题，大致是这样的：<br>
甲方集团为厦门市某集团，现从原公司旧址，搬迁到软件园3期新建的写字楼中，现需要建立新的网络以应对新的发展。<br>
新写字楼楼层为30层，每层估计能容纳工作人员100人左右，数据中心机房位于10楼，1楼为大厅，2--9,11--20楼，每2层楼划分给一个部门，每个部门管理层人员为5人左右。21楼为展厅，22楼为分为3间小会议室和2间大会议室。23--29楼留待后用。30楼为董事会成员所在楼层。<br>
由于部门过多、每层人数数量也比较庞大，在设计拓扑时做了简化，在层次化设计思想的指导下，按照功能划分为交换区块和核心区块。再按照目前流行的层次化的设计思想，划分为接入层、汇聚层和核心层。大致设计如下：<br>
<img src="https://Just7chambray.github.io/post-images/1601387715823.png" alt=""><br>
vlan与IP子网设计如下：</p>
<table>
<thead>
<tr>
<th>VLAN</th>
<th>部门</th>
<th>楼层</th>
<th>IP子网</th>
<th>网关</th>
</tr>
</thead>
<tbody>
<tr>
<td>vlan 10</td>
<td>大厅</td>
<td>1</td>
<td>192.168.1.0</td>
<td>192.168.1.254</td>
</tr>
<tr>
<td>vlan 20</td>
<td>部门1</td>
<td>2、3</td>
<td>192.168.2.0</td>
<td>192.168.2.254</td>
</tr>
<tr>
<td>vlan 30</td>
<td>展厅</td>
<td>21</td>
<td>192.168.11.0</td>
<td>192.168.11.254</td>
</tr>
<tr>
<td>vlan 40</td>
<td>董事会</td>
<td>30</td>
<td>192.168.13.0</td>
<td>192.168.13.254</td>
</tr>
<tr>
<td>vlan 50......</td>
<td>部门2~9</td>
<td>4-9、11-20</td>
<td>192.168.3.0—192.168.10.0</td>
<td>192.168.3.254—192.168.10.254</td>
</tr>
</tbody>
</table>
<p>其他还配置了DHCP、NAT、Telnet、STP等等，整个配置下来的具体过程就不再具体记录了，最后自己感觉整体文档和答辩都还可以，除了老师的提问环节没太把握好情绪节奏，其他都还可。同时最近的学生工作大部分也完成了，推免申请也在审核之中，生活又将开启新的阶段！</p>
<hr>
<p>今天的快乐源泉下👇👇真的超级好喝！！<br>
<img src="https://Just7chambray.github.io/post-images/1601392922562.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-09-25随笔]]></title>
        <id>https://Just7chambray.github.io/post/20200925</id>
        <link href="https://Just7chambray.github.io/post/20200925">
        </link>
        <updated>2020-09-26T01:14:20.000Z</updated>
        <summary type="html"><![CDATA[<p>不知道起什么名字，因为没有主题，写得也比较乱，主要是以记录为主嘛，记录一下疫情在家这段期间的特殊感受，就凑合看看吧!😁😁</p>
]]></summary>
        <content type="html"><![CDATA[<p>不知道起什么名字，因为没有主题，写得也比较乱，主要是以记录为主嘛，记录一下疫情在家这段期间的特殊感受，就凑合看看吧!😁😁</p>
<!-- more -->
<hr>
<p>虽然返校已经一月有余，似乎一切都回到了正轨，该考试考试，该上课上课，除了出校门有些繁琐的手续，出入口只剩下南大门，外卖不再能送进校门，快递倒是方便许多，可以送到校内了，其他好像还是没有太大变化，不过好像变化也挺大？！<br>
然而最近不知是学业上的焦虑还是人际关系的处理不当，总是有股无形的压力笼罩着自己，似乎又回到了疫情在家的那段期间的感觉。<br>
今天朋友给推荐了一个博客「失眠海峡」，看完《当一个小镇青年》一文就想着记录下自己疫情在家的感受。</p>
<hr>
<p>我从来没有像今年这样待在家里这么久，也是记事以来从来没有像今年这样和父母待在一起这么久。曾在大二的时候感悟以后升学就业就不再有充足时间陪陪父母，而今却意外将未来可能的遗憾弥补。寒假回家过年，过完春节过元宵，然后返校，一切都按部就班。<br>
而当日子一天天过去，返校时间也迟迟不定，疫情感染人数不断上升，焦虑、迷茫、恐惧的情绪逐渐发酵。直到疫情得到了较为稳定的控制，出门限制稍稍放松，我邀请朋友来家做饭聚餐，算是生活有了一丝生气。但很快，无法返校让迫切回到正轨生活、迫切想返校的我有点崩溃，在家上网课已有一月有余，但仍然无法进入学习状态，感觉每次认真听讲完毕，下课把书一合，就瞬间忘记刚刚老师讲的内容。day++ &amp; good_mood--</p>
<p>四月了，觉得自己再也撑不下去了，正好看到杭市各大景点门票免费，想着去一趟散散心，然而在杭市的某位朋友为工作所困，一推再推就推到了五一假期。不过一趟游玩之后，情绪确实得到了较大安抚与解脱，整个人也不再丧丧的，就这样一直撑到六月初，我的情绪像是气球似的，很快就被负能量填满，又急需清理。然而当时的我已经无法自我消化，心慌、头疼的感受占据着我的大脑，无力感充斥着我的全身，我，去寻求了心理医生的帮助。情况似乎稍稍好转，但情绪气球不久又被填满，又被清理，一月一月周期性得，不断反复折腾。</p>
<hr>
<p>可能有些人会奇怪为啥我会如此脆弱，情绪如此反复。忘记说了我在家的特殊情况。<br>
自从父母上班之后，白天家里就是我一个人的天下，刚开始几天还是非常舒服的，想吃啥吃啥，想买啥就买啥，自己做饭，自给自足，晚上等父母回来一起吃饭，有时是我筹备晚饭，等待他们下班回来一起。但，好景不长，自己做饭的乐趣随着逐渐上升的气温而慢慢减弱，天气一热，人就是不想动，更别说厨房把火一开的那种炙热，好多时候也是因为懒惰，就依靠着冰箱里的速食草草解决。<br>
虽然偶尔也会有朋友同学在线聊天、打打电话什么的，但现在回想起来，大部分时间在家就是处于沉默状态，没什么好说的，也没有人跟你说，最多是呼唤一下天猫精灵和siri无聊打趣，或是父母突然一个电话你就得忙这忙那……六七月份可能是我最难熬的一段时间吧，不仅是一直持续的不良情绪，还有对保研各种操作的陌生无力、各种夏令营的拒绝，着实筋疲力尽。甚至一度想出去租房过独居生活，虽然在家也和独居生活差不多，但可能就是想换个环境，每天都对着窗前书桌的那一亩三分地，如果不是迫于经济压力，我可能就真的那么做了。</p>
<hr>
<p>渐渐地，时间也不知不觉的来到了八月份，返校的票已经买好了，然而在家依然麻木了，没有了当初想返校的急切心情，没有了在家的痛苦难忍，一切都无所谓了……偶尔晚饭过后，一个人漫无目的地在街上游走，看着车来车往，看着行人匆匆，再仰望天空，放空思绪……</p>
<p>「当一个小镇青年」一文里提到这样一点：</p>
<blockquote>
<p>仅当理想、见识、能力三折不匹配时，这种苦恼尤为严重。</p>
</blockquote>
<p>作者在Twitter上说道：&quot;……不过我最近的感受是，相比起整天把正义、理想、社会秩序挂在嘴边的人，喜欢吃、关注自身、关注身边事物的人宜人度显著更高。&quot;想想当时自己焦虑不安的苦恼，或许就是这三者的不匹配吧。</p>
<p>晚上有个朋友说道：&quot;人生的三个阶段：接受自己父母的平凡，接受自己的平凡，接受自己孩子的平凡。&quot;自己应该是过了第一个阶段，但是要是想我完完全全地接受自己的平凡，可能还要再经受些社会的毒打吧，哈哈哈！许多人到最后接受了自己的平凡，可能往往就伴随着理想的埋葬，那同时也是对自己期望的破灭。不可否认，认识自己，往往伴随着失望和痛苦。但是，不去思考理想，那就活得不明不白。人生，还是要有理想的，实现与否，也许都会有另一种可能的人生。</p>
<p>现在回看这过去的这几个月，后几个月的盼头竟然都是和朋友的相聚重逢，还是挺有意思的。想到昨天看到的这样一句话，真的太贴切了!</p>
<blockquote>
<p>「和任何人走得太近，都是一种灾难。人生如尺，必须有度。最好的关系是：亲属有度，相看不厌，久处不累。」</p>
</blockquote>
<p>哇！真的有戳中我的点！相处舒服，是多么难得！不用刻意寻找话题就有许多可聊，不说话的时候也不会尴尬，发消息不需要秒回只要有空再回就行……</p>
<p>好像越长大越会隐藏自己的情绪，越长大越会容易忘记曾经的感受，才会想着要及时记录，就像以前去吃好吃的，总是要拍不同角度的美食照，而现在拍照就是为了记录，用数据记录曾经的过往和值得纪念的回忆。啊啊啊，我已经不知道自己在说什么了，辛苦看到这里的朋友们！❤️❤️</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[实训日记0909]]></title>
        <id>https://Just7chambray.github.io/post/20200909prodairy</id>
        <link href="https://Just7chambray.github.io/post/20200909prodairy">
        </link>
        <updated>2020-09-09T13:14:17.000Z</updated>
        <summary type="html"><![CDATA[<p>实训第三天</p>
]]></summary>
        <content type="html"><![CDATA[<p>实训第三天</p>
<!-- more -->
<p>今天简单学习了一下交换机、ARP等基础知识，然后学习重点放在DHCP上。</p>
<h2 id="arp">ARP</h2>
<p>ARP（Address Resolution Protocol），中文译为「地址解析协议」。<br>
ARP原理：</p>
<ol>
<li>IP地址已确定，确定自身源地址和目标地址</li>
<li>自身MAC地址已知，求下一个站点的MAC地址</li>
<li>自身产生ARP请求，发送广播</li>
<li>接收者给出响应，带回MAC地址</li>
</ol>
<h2 id="dhcp概述">DHCP概述</h2>
<p>DHCP（Dynamic Host Configuration Protocol），中文译为「动态主机配置协议」。DHCP是在IP网络上使用的网络管理协议，主要用于给网络上的设备动态分配IP地址以及其他网络配置参数，从而减少互联网访问成本、减轻网络管理员或用户的配置任务和成本，从而更好地进行集中管理。<br>
<img src="https://upload.wikimedia.org/wikipedia/commons/e/e4/DHCP_session.svg" alt="DHCP session"><br>
DHCP是基于客户端服务器模式运行的。当某一需要IP地址的设备接入该网，如果客户端和服务器不在同一个子网中，则需要借助DHCP帮助器或DHCP中继代理。设备启动时DHCP客户端软件就会发送一个DHCP发现报文，以发现DHCP服务器的IP地址。网络中的任意一台DHCP服务器都有可能受到该报文，但基本上是最近的那台服务器最先收到并作出响应。DHCP服务器先在其数据库中查找该计算机的配置信息。若找到返回找到的信息。若找不到,则从服务器的IP地址池pool中取一个地址分配给该计算机。</p>
<h2 id="dhcp配置">DHCP配置</h2>
<figure data-type="image" tabindex="1"><img src="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/0909tuopu.png" alt="0909tuopu"></figure>
<p>在该拓扑中，R1-R3 R5-R7是交换机（路由器伪装），R4是DHCP服务器，PC-1~PC-10是主机。</p>
<h3 id="配置交换机">配置交换机</h3>
<ol>
<li>声明vlan</li>
</ol>
<pre><code>SW1#vlan database
SW1(vlan)#vlan 10
SW1(vlan)#vlan 20
</code></pre>
<p>2.配置静态vlan</p>
<ul>
<li>交换机和交换机之间配trunk模式</li>
<li>交换机和路由器之间配trunk模式</li>
<li>交换机和主机之间配access模式</li>
</ul>
<pre><code>SW1#conf t
SW1(config)#int f0/0
SW1(config-if)#switchport mode access
SW1(config-if)#switchport access vlan 10
SW1(config-if)#exit
SW1(config)#int f0/2
SW1(config-if)#switchport mode access
SW1(config-if)#switchport access vlan 20
SW1(config-if)#exit
SW1(config)#int f0/1
SW1(config-if)#switchport mode trunk
SW1(config-if)#switchport trunk encapsulation dot1q
SW1(config-if)#no shut
SW1(config-if)#exit
</code></pre>
<h3 id="配置dhcp服务器">配置DHCP服务器</h3>
<pre><code>//开启DHCP服务
R4(config)#service dhcp
//分配地址池
R4(config)#ip dhcp pool 1
//分配网段
R4(dhcp-config)#network 10.10.10.0 255.255.255.0
//配置默认网关
R4(dhcp-config)#default-router 10.10.10.254
//配置DNS
R4(dhcp-config)#dns-server 8.8.8.8
R4(dhcp-config)#exit
//配置保留地址（在此地址范围内不予分配）
R4(config)#ip dhcp excluded-address 10.10.10.250 10.10.10.254
</code></pre>
<h3 id="配置主机">配置主机</h3>
<p>由于此次实验中是由路由器来伪装主机，因此需要关闭路由功能。</p>
<pre><code>PC-9#conf t
PC-9(config)#no ip routing
PC-9(config)#ip default-gateway 50.50.50.254
PC-9(config)#int e0/1
PC-9(config-if)#no shut
PC-9(config-if)#ip add dhcp
PC-9(config-if)#exit
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[实训日记0907-0908]]></title>
        <id>https://Just7chambray.github.io/post/20200907-08prodairy</id>
        <link href="https://Just7chambray.github.io/post/20200907-08prodairy">
        </link>
        <updated>2020-09-08T15:05:03.000Z</updated>
        <summary type="html"><![CDATA[<p>记录我的实训头两天</p>
]]></summary>
        <content type="html"><![CDATA[<p>记录我的实训头两天</p>
<!-- more -->
<p>第一天和第二天学习的内容都相对简单一些，主要是一些网络基础知识的回顾，静态路由和动态路由的学习实践。</p>
<h2 id="静态路由static-route">静态路由(Static Route)</h2>
<h3 id="概念">概念</h3>
<p>由网络管理人员手工添加到路由表上的路由</p>
<h3 id="基本思想">基本思想</h3>
<p>如果想要路由器知道某个网络，就手工输入这些路径。</p>
<h3 id="适用范围">适用范围</h3>
<p>一般用于网络规模不大、拓扑结构固定的网络中。</p>
<h3 id="特点">特点</h3>
<ul>
<li>简单、高效、可靠</li>
<li>优先级最高，当动态路由与静态路由发生冲突时，以静态路由为准</li>
</ul>
<h3 id="配置">配置</h3>
<pre><code>#######先完成接口的基础配置###########
RouterX# configure terminal
RouterX(config)# interface 接口名
RouterX(config)# ip address IP地址 子网掩码
#######配置静态路由###########
RouterX(config)# ip route 目标网段 子网掩码 下一跳IP地址/本地路由器的出站接口 可选项参数
</code></pre>
<h2 id="默认路由default-route">默认路由(Default Route)</h2>
<h3 id="概念-2">概念</h3>
<p>对IP数据包中的目的地址找不到存在的其他路由时，路由器所选择的路由</p>
<h3 id="配置-2">配置</h3>
<pre><code>######路由器禁用路由功能时设置默认路由#####
RouterX(config)# ip default-gateway IP地址
######路由器启用路由功能时设置默认路由#####
RouterX(config)# ip default-network 网段
######创建到0.0.0.0 0.0.0.0的默认路由#####
RouterX(config)# ip route0.0.0.0 0.0.0.0
</code></pre>
<h2 id="动态路由dynamic-route">动态路由(Dynamic Route)</h2>
<h3 id="概念-3">概念</h3>
<p>使用网络路由协议自动调整拓扑或流量变化的路由</p>
<h3 id="适用范围-2">适用范围</h3>
<p>适用于网络规模大、网络拓扑复杂的结构网络中。</p>
<h3 id="特点-2">特点</h3>
<ul>
<li>实时的适应网络结构的变化</li>
<li>通常作为静态路由的补充</li>
</ul>
<h3 id="动态路由协议">动态路由协议</h3>
<h4 id="概念-4">概念</h4>
<p>在路由器之间使用路由协议来确定远程网络的路径，并在路由表中维护这些网络；确定路径后，路由器可以通过路由协议学习网络条目</p>
<h4 id="协议">协议</h4>
<ul>
<li>OSPF</li>
<li>RIP</li>
<li>EIGRP</li>
<li>BGP</li>
<li>···</li>
</ul>
<h4 id="配置eigrp">配置EIGRP</h4>
<pre><code>RouterX(config)#router eigrp 自治系统编号
RouterX(config-router)#network 直连网段 子网掩码的反码
RouterX(config)#no auto-summary

########信息查看#######
RouterX# show ip eigrp interface  显示EIGRP协议的接口
RouterX# show ip eigrp traffic  检测hello、update这些报文收发情况
RouterX# show ip eigrp neighbor  检测邻居
RouterX# show ip eigrp topology  检测拓扑表的条目
RouterX# show ip route eigrp
RouterX# traceroute IP地址  检测经过的路径
</code></pre>
<h4 id="qa-eigrp邻居起不来">Q&amp;A: EIGRP邻居起不来？</h4>
<ol>
<li>看路由器能否通信</li>
<li>AS是否一致</li>
<li>K值（权重）是否一致</li>
<li>认证PASSWORD</li>
<li>DUAL算法的Query包（用于查询路由信息）发送超过15次</li>
</ol>
<h4 id="配置rip">配置RIP</h4>
<pre><code>RouterX(config)#router rip
RouterX(config-router)#version 2
RouterX(config-router)#no auto-summary
RouterX(config-router)#network 直连网段

########信息查看#######
RouterX# show ip route
RouterX# show ip route rip
RouterX# show ip protocol
RouterX# show ip rip database
RouterX# show running-confiig
RouterX# clear ip route *  刷新路由表
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[操作系统复习]]></title>
        <id>https://Just7chambray.github.io/post/os_review</id>
        <link href="https://Just7chambray.github.io/post/os_review">
        </link>
        <updated>2020-05-29T09:24:05.000Z</updated>
        <summary type="html"><![CDATA[<p>名词解释、简答题、计算题</p>
]]></summary>
        <content type="html"><![CDATA[<p>名词解释、简答题、计算题</p>
<!-- more -->
<h1 id="名词解释">名词解释</h1>
<h2 id="1操作系统ppt5">1.操作系统(ppt5)</h2>
<p>操作系统：一组控制和管理计算机硬件和软件资源、合理地对各类作业进行调度，以及方便用户使用的程序的集合。</p>
<h2 id="2分时系统book9">2.分时系统（book9）</h2>
<p>分时系统：在一台主机上连接了多个配有显示器和键盘的终端并由此所组成的系统，该系统允许多个用户同时通过自己的终端，以交互方式使用计算机，共享主机中的资源。</p>
<h2 id="3实时系统ppt44book11">3.实时系统(ppt44，book11)</h2>
<p>实时系统：系统能及时(或即时)响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。</p>
<h2 id="4进程ppt19book39">4.进程（ppt19，book39）</h2>
<p>进程：进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。</p>
<h2 id="5原语ppt46book47">5.原语（ppt46，book47）</h2>
<p>原语:由若干条指令组成的，用于完成一定功能的一个过程。</p>
<h2 id="6临界资源ppt68book53">6.临界资源（ppt68，book53）</h2>
<p>临界资源：一段时间内只允许一个进程访问的资源，如打印机，扫描仪等，诸进程间应采取互斥方式，实现对这种资源的共享。</p>
<h2 id="7临界区ppt68book55">7.临界区（ppt68,book55）</h2>
<p>临界区：在每个进程中访问临界资源的那段代码。</p>
<h2 id="8管程ppt89book63">8.管程（ppt89，book63）</h2>
<p>管程：一个管程定义了一个数据结构和能为并发进程所执行(在该数据结构上)的一组操作，这组操作能同步进程和改变管程中的数据。</p>
<h2 id="9管道ppt124book74">9.管道（ppt124，book74）</h2>
<p>管道：用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件，又名pipe文件。</p>
<h2 id="10周转时间ppt30book93">10.周转时间（ppt30，book93）</h2>
<p>周转时间：是指从作业被提交给系统开始，到作业完成为止的这段时间间隔。</p>
<h2 id="11响应时间ppt33book94">11.响应时间（ppt33，book94）</h2>
<p>响应时间：是从用户通过键盘提交一个请求开始，直至系统首次产生响应为止的时间，或者说，直到屏幕上显示出结果为止的一段时间间隔。</p>
<h2 id="12死锁ppt88">12.死锁（ppt88）</h2>
<p>死锁：是指多个进程在运行过程中因争夺资源而造成的一种僵局，当进程出于这种僵持状态时，若无外力作用，它们将无法再向前推进。</p>
<h2 id="13安全状态ppt109book119">13.安全状态（ppt109，book119）</h2>
<p>安全状态：是指系统能按某种进程顺序(P1，P2，…，Pn)(称〈P1，P2，…，Pn〉序列为安全序列)，来为每个进程Pi分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。如果系统无法找到这样一个安全序列，则称系统处于不安全状态。</p>
<h2 id="14拼接紧凑ppt57book143">14.拼接/紧凑（ppt57，book143）</h2>
<p>拼接/紧凑：通过移动内存中作业的位置，以把原来多个分散的小分区拼接成一个大分区的方法。</p>
<h2 id="15对换ppt61book145">15.对换（ppt61，book145）</h2>
<p>对换：是指把内存中暂时不能运行的进程或者暂时不用的程序和数据调出到外存上，以便腾出足够的内存空间，再把已具备运行条件的进程或进程所需要的程序和数据调入内存。</p>
<h2 id="16页面页ppt66book148">16.页面/页（ppt66，book148）</h2>
<p>页面/页：一个进程的逻辑地址空间分成若干个大小相等的片。</p>
<h2 id="17快表联想寄存器ppt77book151">17.快表/联想寄存器（ppt77，book151）</h2>
<p>快表/联想寄存器：为了提高地址变换速度，可在地址变换机构中增设一个具有并行查寻能力的特殊高速缓冲寄存器。</p>
<h2 id="18虚拟存储器new">18.虚拟存储器（new）</h2>
<p>虚拟存储器 ：具有请求调入功能和置换功能，从逻辑上对内存容量加以扩充的一种存储器系统。</p>
<h2 id="19最小物理块数ppt25book171">19.最小物理块数（ppt25，book171）</h2>
<p>最小物理块数：是指能保证进程正常运行所需的最小物理块数。当系统为进程分配的物理块数少于此值时，进程将无法运行。</p>
<h2 id="20设备独立性ppt102book213">20.设备独立性（ppt102，book213)</h2>
<p>设备独立性/设备无关性: 应用程序独立于具体使用的物理设备。</p>
<h2 id="21设备的安全分配方式和不安全分配方式ppt121-122book217">21.设备的安全分配方式和不安全分配方式（ppt121-122，book217）</h2>
<ol>
<li>安全分配方式<br>
在这种分配方式中，每当进程发出I/O请求后，便进入阻塞状态，直到其I/O操作完成时才被唤醒。在采用这种分配策略时，一旦进程已经获得某种设备(资源)后便阻塞，使该进程不可能再请求任何资源，而在它运行时又不保持任何资源。</li>
<li>不安全分配方式<br>
在这种分配方式中，进程在发出I/O请求后仍继续运行，需要时又发出第二个I/O请求、 第三个I/O请求等。仅当进程所请求的设备已被另一进程占用时，请求进程才进入阻塞状态。</li>
</ol>
<h2 id="22spoolingppt127book220">22.SPOOLing（ppt127，book220）</h2>
<p>SPOOLING/假脱机操作：为了缓和CPU的高速性与I/O设备的低速性间的矛盾引入的脱机输入、脱机输出技术。该技术利用专门的外围控制机，实现数据在低速I/O设备和高速磁盘之间的数据传送，此时外围操作可以与CPU对数据的处理同时进行，这种联机情况下的同时外围操作称作SPOOLING，或称为假脱机操作。</p>
<h2 id="23记录ppt7book238">23.记录（ppt7，book238）</h2>
<p>记录：是一组相关数据项的集合，用于描述一个对象在某方面的属性。</p>
<h2 id="24文件ppt9book238">24.文件（ppt9，book238）</h2>
<p>文件：是指由创建者所定义的、具有文件名的一组相关元素的集合，可分为有结构文件和无结构文件两种。</p>
<h2 id="25索引结点i结点ppt52book251">25.索引结点/i结点（ppt52，book251）</h2>
<p>在有的系统中，如UNIX系统，便采用了把文件名与文件描述信息分开的办法，亦即，使文件描述信息单独形成一个称为索引结点的数据结构，简称为i结点。</p>
<h2 id="26位示图ppt13book280">26.位示图（ppt13，book280）</h2>
<p>位示图：利用二进制的一位来表示磁盘中一个盘块的使用情况，“0”表示对应的盘块空闲，“1”表示已分配。</p>
<h2 id="27事务ppt31book292">27.事务（ppt31，book292）</h2>
<p>事务：是用于访问和修改各种数据项的一个程序单位，它可以被看做是一系列相关的读和写操作。</p>
<h2 id="28磁盘高速缓存book283">28.磁盘高速缓存（book283）</h2>
<p>磁盘高速缓存：是指在内存中为磁盘盘块设置的一个缓冲区，在缓冲区中保存了某些盘块的副本。</p>
<hr>
<h1 id="简答题">简答题</h1>
<h2 id="1实时系统和分时系统的比较ppt50-51book12">1.实时系统和分时系统的比较（ppt50-51，book12）</h2>
<ol>
<li>多路性
<ul>
<li>实时信息处理系统也按分时原则为多个终端用户服务。</li>
<li>实时控制系统的多路性则主要表现在系统周期性地对多路现场信息进行采集，以及对多个对象或多个执行机构进行控制。</li>
<li>分时系统中的多路性则与用户情况有关，时多时少。</li>
</ul>
</li>
<li>独立性
<ul>
<li>实时信息处理系统中的每个终端用户在向实时系统提出服务请求时，是彼此独立地操作，互不干扰；</li>
<li>而实时控制系统中，对信息的采集和对对象的控制也都是彼此互不干扰。</li>
</ul>
</li>
<li>及时性
<ul>
<li>实时信息处理系统对实时性的要求与分时系统类似，都是以人所能接受的等待时间来确定的；</li>
<li>实时控制系统的及时性，则是以控制对象所要求的开始截止时间或完成截止时间来确定的，一般为秒级到毫秒级，甚至有的要低于100微秒。</li>
</ul>
</li>
<li>交互性
<ul>
<li>实时信息处理系统虽然也具有交互性，但这里人与系统的交互仅限于访问系统中某些特定的专用服务程序。</li>
<li>分时系统能向终端用户提供数据处理和资源共享等服务。</li>
</ul>
</li>
</ol>
<h2 id="2操作系统的基本特征ppt72-80book14-17">2.操作系统的基本特征（ppt72-80，book14-17）</h2>
<ol>
<li>并发性
<ul>
<li>并行与并发</li>
<li>引入进程</li>
<li>引入线程</li>
</ul>
</li>
<li>共享性
<ul>
<li>互斥共享方式</li>
<li>同时访问方式</li>
</ul>
</li>
<li>虚拟性
<ul>
<li>时分复用技术</li>
<li>空分复用技术</li>
</ul>
</li>
<li>异步性</li>
</ol>
<h2 id="3操作系统的主要功能ppt81-105book17-22">3.操作系统的主要功能（ppt81-105，book17-22）</h2>
<ol>
<li>处理机管理
<ul>
<li>进程控制</li>
<li>进程同步</li>
<li>进程通信</li>
<li>调度</li>
</ul>
</li>
<li>存储器管理
<ul>
<li>内存分配</li>
<li>内存保护</li>
<li>地址映射</li>
<li>内存扩充</li>
</ul>
</li>
<li>设备管理
<ul>
<li>缓冲管理</li>
<li>设备分配</li>
<li>设备处理</li>
</ul>
</li>
<li>文件管理
<ul>
<li>文件存储空间的管理</li>
<li>目录管理</li>
<li>文件读/写管理与保护</li>
</ul>
</li>
<li>操作系统与用户的接口
<ul>
<li>用户接口</li>
<li>程序接口</li>
</ul>
</li>
</ol>
<h2 id="4进程的特征ppt17-20book39">4.进程的特征（ppt17-20，book39）</h2>
<ol>
<li>结构特征
<ul>
<li>通常的程序是不能并发执行的。为使程序(含数据)能独立运行，应为之配置一进程控制块，即PCB(Process Control Block)；而由程序段、相关的数据段和PCB三部分便构成了进程实体。</li>
</ul>
</li>
<li>动态性
<ul>
<li>进程的实质是进程实体的一次执行过程，因此，动态性是进程的最基本的特征。</li>
<li>动态性还表现在：“它由创建而产生，由调度而执行，由撤消而消亡”。</li>
</ul>
</li>
<li>并发性
<ul>
<li>这是指多个进程实体同存于内存中，且能在一段时间内同时运行。并发性是进程的重要特征，同时也成为OS的重要特征。引入进程的目的也正是为了使其进程实体能和其它进程实体并发执行；而程序(没有建立PCB)是不能并发执行的。</li>
</ul>
</li>
<li>独立性
<ul>
<li>在传统的OS中，独立性是指进程实体是一个能独立运行、独立分配资源和独立接受调度的基本单位。</li>
</ul>
</li>
<li>异步性
<ul>
<li>这是指进程按各自独立的、 不可预知的速度向前推进，或说进程实体按异步方式运行。</li>
</ul>
</li>
</ol>
<h2 id="5进程三种状态的转化关系book40ppt23">5.进程三种状态的转化关系（book40，ppt23）</h2>
<ol>
<li>进程的三种基本状态
<ul>
<li>就绪状态<br>
当进程已分配到除CPU以外的所有必要资源后，只要再获得CPU，便可立即执行，进程这时的状态称为就绪状态。</li>
<li>执行状态<br>
进程已获得CPU，其程序正在执行。在单处理机系统中，只有一个进程处于执行状态； 在多处理机系统中，则有多个进程处于执行状态。</li>
<li>阻塞状态<br>
正在执行的进程由于发生某事件而暂时无法继续执行时，便放弃处理机而处于暂停状态，亦即进程的执行受到阻塞，把这种暂停状态称为阻塞状态，有时也称为等待状态或封锁状态。</li>
</ul>
</li>
<li>进程状态的转换
<ul>
<li>就绪→执行<br>
处于就绪状态的进程，在调度程序为之分配了处理机之后便可执行，其状态由就绪状态转变为执行状态。</li>
<li>执行→就绪<br>
正在执行的进程（当前进程）如果因分配给它的时间片已完而被剥夺处理机暂停执行时，其状态由执行状态转变为就绪状态。</li>
<li>执行→阻塞<br>
如果因发生某事件,致使当前进程的执行受阻(例如进程访问某临界资源,而该资源正被其它进程访问时),使之无法继续执行,则该进程状态将由执行转变为阻塞。</li>
</ul>
</li>
</ol>
<h2 id="6引起进程终止的事件ppt54-57book50">6.引起进程终止的事件（ppt54-57，book50）</h2>
<ol>
<li>
<p>正常结束<br>
在任何计算机系统中，都应有一个用于表示进程已经运行完成的指示。</p>
</li>
<li>
<p>异常结束<br>
在进程运行期间，由于出现某些错误和故障而迫使进程终止。</p>
<ul>
<li>越界错误</li>
<li>保护错</li>
<li>非法指令</li>
<li>特权指令错</li>
<li>运行超时</li>
<li>等待超时</li>
<li>算术运算错</li>
<li>I/O故障</li>
</ul>
</li>
<li>
<p>外界干预<br>
外界干预并非指在本进程运行中出现了异常事件，而是指进程应外界的请求而终止运行。</p>
<ul>
<li>操作员或操作系统干预</li>
<li>父进程请求</li>
<li>父进程终止</li>
</ul>
</li>
</ol>
<h2 id="7进程同步应遵循的规则ppt70book55">7.进程同步应遵循的规则（ppt70,book55）</h2>
<ol>
<li>空闲让进<br>
当无进程处于临界区时，表明临界资源处于空闲状态，应允许一个请求进入临界区的进程立即进入自己的临界区，以有效地利用临界资源。</li>
<li>忙则等待<br>
当已有进程进入临界区时，表明临界资源正在被访问，因而其它试图进入临界区的进程必须等待，以保证对临界资源的互斥访问。</li>
<li>有限等待<br>
对要求访问临界资源的进程，应保证在有限时间内能进入自己的临界区，以免陷入“死等”状态。</li>
<li>让权等待<br>
当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入“忙等”状态。</li>
</ol>
<h2 id="8管程和进程的区别6点ppt94-95book64">8.管程和进程的区别（6点，ppt94-95，book64）</h2>
<ol>
<li>虽然二者都定义了数据结构，但进程定义的是私有数据结构PCB，管程定义的是公共数据结构，如消息队列等；</li>
<li>二者都存在对各自数据结构上的操作，但进程是由顺序程序执行有关的操作，而管程主要是进行同步操作和初始化操作；</li>
<li>设置进程的目的在于实现系统的并发性，而管程的设置则是解决共享资源的互斥使用问题；</li>
<li>进程通过调用管程中的过程对共享数据结构实行操作，该过程就如通常的子程序一样被调用，因而管程为被动工作方式，进程则为主动工作方式；</li>
<li>进程之间能并发执行，而管程则不能与其调用者并发；</li>
<li>进程具有动态性，由“创建”而诞生，由“撤销”而消亡，而管程则是操作系统中的一个资源管理模块，供进程调用。</li>
</ol>
<h2 id="9线程和进程的比较ppt145-148book82-84">9.线程和进程的比较（ppt145-148，book82-84）</h2>
<table>
<thead>
<tr>
<th></th>
<th>线程</th>
<th>进程</th>
</tr>
</thead>
<tbody>
<tr>
<td>调度</td>
<td>1.在引入线程OS中，线程是作为调度和分派的基本单位，进程是作为资源拥有的基本单位。2.在同一进程中，线程的切换不会引起进程的切换，但从一个进程中的线程切换到另一个进程中的线程时，将会引起进程的切换。</td>
<td>进程在传统OS中是作为拥有资源的基本单位和独立调度、分派的基本单位。</td>
</tr>
<tr>
<td>并发性</td>
<td>在引入线程OS中，不仅进程之间可以并发执行，而且在一个进程中的多个线程之间亦可并发执行，使得操作系统具有更好的并发性，从而能更加有效地提高系统资源的利用率和系统的吞吐量。</td>
<td>在传统OS中进程可以并发执行。</td>
</tr>
<tr>
<td>拥有资源</td>
<td>线程自己不拥有系统资源(也有一点必不可少的资源)，但它可以访问其隶属进程的资源。</td>
<td>进程在OS中拥有资源，是系统中拥有资源的一个基本单位。</td>
</tr>
<tr>
<td>系统开销</td>
<td>线程的系统开销远远小于进程的系统开销，线程之间的同步和通信也比进程简单。</td>
<td>在创建或撤消进程时，系统都要为之创建和回收进程控制块，分配或回收资源，OS所付出的开销明显大于线程创建或撤消时的开销。</td>
</tr>
</tbody>
</table>
<h2 id="10处理及调度的层次ppt7-19book92-93">10.处理及调度的层次（ppt7-19,book92-93）</h2>
<ol>
<li>高级调度/作业调度(接纳调度)的主要功能<br>
根据作业控制块中的信息，审查系统能否满足用户作业的资源需求，以及按照一定的算法，从外存的后备队列中选取某些作业调入内存，并为它们创建进程、分配必要的资源。然后再将新创建的进程插入就绪队列，准备执行。</li>
<li>中级调度/中程调度的功能<br>
引入中级调度的主要目的是为了提高内存利用率和系统吞吐量。为此，应使那些暂时不能运行的进程不再占用宝贵的内存资源，而将它们调至外存上去等待，把此时的进程状态称为就绪驻外存状态或挂起状态。</li>
<li>低级调度/进程调度/短程调度的主要功能<br>
用于决定就绪队列中的哪个进程(或内核级线程，为叙述方便，以后只写进程)应获得处理机，然后再由分派程序执行把处理机分配给该进程的具体操作。
<ul>
<li>保存处理机的现场信息</li>
<li>按某种算法选取进程</li>
<li>把处理器分配给进程</li>
</ul>
</li>
</ol>
<h2 id="11选择调度方式和调度算法的若干准则两级标题两大点ppt30-36">11.选择调度方式和调度算法的若干准则（两级标题两大点，ppt30-36）</h2>
<ol>
<li>面向用户的准则
<ul>
<li>周转时间短</li>
<li>响应时间快</li>
<li>截止时间的保证</li>
<li>优先权准则</li>
</ul>
</li>
<li>面向系统的准则
<ul>
<li>系统吞吐量高</li>
<li>处理机利用率好</li>
<li>各类资源的平衡利用</li>
</ul>
</li>
</ol>
<h2 id="12实时调度的基本条件ppt64-69book105-106">12.实时调度的基本条件（ppt64-69，book105-106）</h2>
<ol>
<li>提供必要的信息
<ul>
<li>就绪时间</li>
<li>开始截止时间和完成截止时间</li>
<li>处理时间</li>
<li>资源要求</li>
<li>优先级</li>
</ul>
</li>
<li>系统处理能力强</li>
<li>采用抢占式调度机制</li>
<li>具有快速切换机制
<ul>
<li>对外部中断的快速响应能力</li>
<li>快速的任务分派能力</li>
</ul>
</li>
</ol>
<h2 id="13产生死锁的必要条件ppt99-100book116">13.产生死锁的必要条件（ppt99-100，book116）</h2>
<ol>
<li>互斥条件<br>
指进程对所分配到的资源进行排它性使用，即在一段时间内某资源只由一个进程占用。如果此时还有其它进程请求该资源，则请求者只能等待，直至占有该资源的进程用毕释放。</li>
<li>请求和保持条件<br>
指进程已经保持了至少一个资源，但又提出了新的资源请求，而该资源又已被其它进程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持不放。</li>
<li>不剥夺条件<br>
指进程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放。</li>
<li>环路等待条件<br>
指在发生死锁时，必然存在一个进程——资源的环形链，即进程集合{P0，P1，P2，…，Pn}中的P0正在等待一个P1占用的资源； P1正在等待P2占用的资源，……，Pn正在等待已被P0占用的资源。</li>
</ol>
<h2 id="14处理死锁的基本方法ppt101-102book116">14.处理死锁的基本方法（ppt101-102，book116）</h2>
<ol>
<li>预防死锁<br>
这是一种较简单和直观的事先预防的方法。该方法是通过设置某些限制条件，去破坏产生死锁的四个必要条件中的一个或几个条件，来预防发生死锁。</li>
<li>避免死锁<br>
该方法同样是属于事先预防的策略，但它并不须事先采取各种限制措施去破坏产生死锁的四个必要条件，而是在资源的动态分配过程中，用某种方法去防止系统进入不安全状态，从而避免发生死锁。</li>
<li>检测死锁<br>
这种方法并不须事先采取任何限制性措施，也不必检查系统是否已经进入不安全区，而是允许系统在运行过程中发生死锁。</li>
<li>解除死锁<br>
这是与检测死锁相配套的一种措施。当检测到系统中已发生死锁时，须将进程从死锁状态中解脱出来。</li>
</ol>
<h2 id="15程序的装入和链接ppt11-17book132-135">15.程序的装入和链接（ppt11-17，book132-135）</h2>
<ol>
<li>程序的装入
<ul>
<li>绝对装入方式</li>
<li>可重定位装入方式</li>
<li>动态运行时装入方式</li>
</ul>
</li>
<li>程序的链接
<ul>
<li>静态链接</li>
<li>装入时动态链接</li>
<li>运行时动态链接</li>
</ul>
</li>
</ol>
<h2 id="16动态分区分配算法和原理ppt36-40book140">16.动态分区分配算法和原理（ppt36-40，book140）</h2>
<p>要求：会做作业，用自己的话描述原理。</p>
<ol>
<li>首次适应算法(First Fit)<br>
FF算法要求空闲分区链以地址递增的次序链接。<br>
在分配内存时，从链首开始顺序查找，直至找到一个大小能满足要求的空闲分区为止；然后再按照作业的大小，从该分区中划出一块内存空间分配给请求者，余下的空闲分区仍留在空闲链中。若从链首直至链尾都不能找到一个能满足要求的分区，则此次内存分配失败，返回。</li>
<li>循环首次适应算法(Next Fit)<br>
在为进程分配内存空间时，不再是每次都从链首开始查找，而是从上次找到的空闲分区的下一个空闲分区开始查找，直至找到一个能满足要求的空闲分区，从中划出一块与请求大小相等的内存空间分配给作业。</li>
<li>最佳适应算法(Best Fit)<br>
该每次为作业分配内存时，总是把能满足要求、又是最小的空闲分区分配给作业，避免“大材小用”。算法要求将所有的空闲分区按其容量以从小到大的顺序形成一空闲分区链。</li>
<li>最坏适应算法(Worst Fit)<br>
扫描整个空闲分区表或链表，总是挑选一个最大的空闲区分割给作业使用，要求将所有的空闲分区按其容量以从大到小的顺序形成一空闲分区链，查找时只要看第一个分区能否满足作业要求。</li>
</ol>
<h2 id="17基本的地址变换机构ppt73-74book150">17.基本的地址变换机构（ppt73-74，book150）</h2>
<p>在执行检索之前，先将页号与页表长度进行比较，如果页号大于或等于页表长度，则表示本次所访问的地址已超越进程的地址空间。于是，这一错误将被系统发现并产生一地址越界中断。<br>
若未出现越界错误，则将页表始址与页号和页表项长度的乘积相加，便得到该表项在页表中的位置，于是可从中得到该页的物理块号，将之装入物理地址寄存器中。与此同时，再将有效地址寄存器中的页内地址送入物理地址寄存器的块内地址字段中。这样便完成了从逻辑地址到物理地址的变换。图4-13示出了分页系统的地址变换机构。</p>
<h2 id="18具有快表的地址变化过程ppt77book151">18.具有快表的地址变化过程（ppt77，book151）</h2>
<p>在CPU给出有效地址后，由地址变换机构自动地将页号P送入高速缓冲寄存器，并将此页号与高速缓存中的所有页号进行比较，若其中有与此相匹配的页号，便表示所要访问的页表项在快表中。于是，可直接从快表中读出该页所对应的物理块号，并送到物理地址寄存器中。</p>
<p>如在块表中未找到对应的页表项，则还须再访问内存中的页表，找到后，把从页表项中读出的物理块号送地址寄存器；同时，再将此页表项存入快表的一个寄存器单元中，亦即，重新修改快表。但如果联想寄存器已满，则OS必须找到一个老的且已被认为不再需要的页表项，将它换出。</p>
<h2 id="19为什么要引入分段存储管理方式ppt87-90book155-156">19.为什么要引入分段存储管理方式（ppt87-90，book155-156）</h2>
<ol>
<li>方便编程<br>
通常，用户把自己的作业按照逻辑关系划分为若干个段，每个段都是从0开始编址，并有自己的名字和长度。因此，希望要访问的逻辑地址是由段名(段号)和段内偏移量(段内地址)决定的。</li>
<li>信息共享<br>
在实现对程序和数据的共享时，是以信息的逻辑单位为基础的。比如，共享某个例程和函数。</li>
<li>信息保护<br>
信息保护同样是对信息的逻辑单位进行保护，因此，分段管理方式能更有效和方便地实现信息保护功能。</li>
<li>动态增长<br>
在实际应用中，往往有些段，特别是数据段，在使用过程中会不断地增长，而事先又无法确切地知道数据段会增长到多大。</li>
<li>动态链接<br>
动态链接是指在作业运行之前，并不把几个目标程序段链接起来。要运行时，先将主程序所对应的目标程序装入内存并启动运行，当运行过程中又需要调用某段时，才将该段(目标程序)调入内存并进行链接。</li>
</ol>
<h2 id="20分段存储管理方式的地址变换过程ppt96book158">20.分段存储管理方式的地址变换过程（ppt96，book158）</h2>
<p>在进行地址变换时，系统将逻辑地址中的段号S与段表长度TL进行比较。若S&gt;TL，表示段号太大，是访问越界，于是产生越界中断信号；若未越界，则根据段表的始址和该段的段号，计算出该段对应段表项的位置，从中读出该段在内存的起始地址，然后，再检查段内地址d是否超过该段的段长SL。若超过，即d&gt;SL，同样发出越界中断信号；若未越界，则将该段的基址d与段内地址相加，即可得到要访问的内存物理地址。</p>
<h2 id="21分段和分页的区别ppt98-99book158">21.分段和分页的区别（ppt98-99，book158）</h2>
<ol>
<li>页是信息的物理单位，分页是为实现离散分配方式，以消减内存的外零头，提高内存的利用率。或者说，分页仅仅是由于系统管理的需要而不是用户的需要。<br>
段则是信息的逻辑单位，它含有一组其意义相对完整的信息。分段的目的是为了能更好地满足用户的需要。</li>
<li>页的大小固定且由系统决定，由系统把逻辑地址划分为页号和页内地址两部分，是由机器硬件实现的，因而在系统中只能有一种大小的页面；而段的长度却不固定，决定于用户所编写的程序，通常由编译程序在对源程序进行编译时，根据信息的性质来划分。</li>
<li>分页的作业地址空间是一维的，即单一的线性地址空间，程序员只需利用一个记忆符，即可表示一个地址；而分段的作业地址空间则是二维的，程序员在标识一个地址时，既需给出段名，又需给出段内地址。</li>
</ol>
<h2 id="22局部性原理及其论点ppt6-7book165">22.局部性原理及其论点（ppt6-7，book165）</h2>
<ul>
<li>
<p>局部性原理</p>
<ul>
<li>程序在执行时将呈现出局部性规律，即在一较短的时间内，程序的执行仅局限于某个部分；相应地，它所访问的存储空间也局限于某个区域。</li>
</ul>
</li>
<li>
<p>论点：</p>
<ol>
<li>程序执行时，除了少部分的转移和过程调用指令外，在大多数情况下仍是顺序执行的。该论点也在后来的许多学者对高级程序设计语言(如FORTRAN语言、PASCAL语言)及C语言规律的研究中被证实。</li>
<li>过程调用将会使程序的执行轨迹由一部分区域转至另一部分区域，但经研究看出，过程调用的深度在大多数情况下都不超过5。这就是说，程序将会在一段时间内都局限在这些过程的范围内运行。</li>
<li>程序中存在许多循环结构，这些虽然只由少数指令构成，但是它们将多次执行。</li>
<li>程序中还包括许多对数据结构的处理，如对数组进行操作，它们往往都局限于很小的范围内。</li>
</ol>
</li>
</ul>
<h2 id="23物理块的分配策略3点ppt27-29">23.物理块的分配策略（3点，ppt27-29）</h2>
<ol>
<li>固定分配局部置换<br>
这是指基于进程的类型(交互型或批处理型等)，或根据程序员、程序管理员的建议，为每个进程分配一定数目的物理块，在整个运行期间都不再改变。</li>
<li>可变分配全局置换<br>
这可能是最易于实现的一种物理块分配和置换策略，已用于若干个OS中。在采用这种策略时，先为系统中的每个进程分配一定数目的物理块，而OS自身也保持一个空闲物理块队列。当某进程发现缺页时，由系统从空闲物理块队列中取出一个物理块分配给该进程，并将欲调入的(缺)页装入其中。</li>
<li>可变分配局部置换<br>
这同样是基于进程的类型或根据程序员的要求，为每个进程分配一定数目的物理块，但当某进程发现缺页时，只允许从该进程在内存的页面中选出一页换出，这样就不会影响其它进程的运行。<br>
如果进程在运行中频繁地发生缺页中断，则系统须再为该进程分配若干附加的物理块，直至该进程的缺页率减少到适当程度为止。</li>
</ol>
<h2 id="24物理块的分配算法ppt30-32book172">24.物理块的分配算法（ppt30-32，book172）</h2>
<ol>
<li>平均分配算法<br>
这是将系统中所有可供分配的物理块平均分配给各个进程。</li>
<li>按比例分配算法<br>
这是根据进程的大小按比例分配物理块的算法。</li>
<li>考虑优先权的分配算法<br>
在实际应用中，为了照顾到重要的、紧迫的作业能尽快地完成，应为它分配较多的内存空间。通常采取的方法是把内存中可供分配的所有物理块分成两部分：<br>
一部分按比例地分配给各进程；另一部分则根据各进程的优先权，适当地增加其相应份额后，分配给各进程。</li>
</ol>
<h2 id="25设备与控制器间的三种信号线ppt11-12book197">25.设备与控制器间的三种信号线（ppt11-12，book197）</h2>
<ol>
<li>数据信号线<br>
这类信号线用于在设备和设备控制器之间传送数据信号。<br>
对输入设备而言，由外界输入的信号经转换器转换后所形成的数据，通常先送入缓冲器中，当数据量达到一定的比特(字符)数后，再从缓冲器通过一组数据信号线传送给设备控制器。</li>
<li>控制信号线<br>
这是作为由设备控制器向I/O设备发送控制信号时的通路。<br>
该信号规定了设备将要执行的操作，如读操作(指由设备向控制器传送数据)或写操作(从控制器接收数据)，或执行磁头移动等操作。</li>
<li>状态信号线<br>
这类信号线用于传送指示设备当前状态的信号。<br>
设备的当前状态有正在读(或写)；设备已读(写)完成，并准备好新的数据传送。</li>
</ol>
<h2 id="26设备控制器的基本功能ppt13-16ppt197-198">26.设备控制器的基本功能（ppt13-16，ppt197-198）</h2>
<ol>
<li>接收和识别命令<br>
CPU可以向控制器发送多种不同的命令，设备控制器应能接收并识别这些命令。为此，在控制器中应具有相应的控制寄存器，用来存放接收的命令和参数，并对所接收的命令进行译码。</li>
<li>数据交换<br>
这是指实现CPU与控制器之间、控制器与设备之间的数据交换。</li>
<li>标识和报告设备的状态<br>
控制器应记下设备的状态供CPU了解。例如，仅当该设备处于发送就绪状态时，CPU才能启动控制器从设备中读出数据。</li>
<li>地址识别<br>
就像内存中的每一个单元都有一个地址一样，系统中的每一个设备也都有一个地址，而设备控制器又必须能够识别它所控制的每个设备的地址。</li>
<li>数据缓冲<br>
由于I/O设备的速率较低而CPU和内存的速率却很高，故在控制器中必须设置一缓冲器。</li>
<li>差错控制<br>
设备控制器还兼管对由I/O设备传送来的数据进行差错检测。</li>
</ol>
<h2 id="27为什么要引入缓冲区ppt50-52book224">27.为什么要引入缓冲区（ppt50-52，book224）</h2>
<ol>
<li>缓和CPU与I/O设备间速度不匹配的矛盾<br>
事实上，凡在数据到达速率与其离去速率不同的地方，都可设置缓冲区，以缓和它们之间速率不匹配的矛盾。</li>
<li>减少对CPU的中断频率，放宽对CPU中断响应时间的限制</li>
<li>提高CPU和I/O设备之间的并行性<br>
缓冲的引入可显著地提高CPU和I/O设备间的并行操作程度，提高系统的吞吐量和设备的利用率。</li>
</ol>
<h2 id="28中断处理程序的处理过程ppt82-85book204-205">28.中断处理程序的处理过程(ppt82-85，book204-205)</h2>
<ol>
<li>唤醒被阻塞的驱动(程序)进程</li>
<li>保护被中断进程的CPU环境</li>
<li>转入相应的设备处理程序</li>
<li>中断处理</li>
<li>恢复被中断进程的现场</li>
</ol>
<h2 id="29spooling系统特点ppt133book222">29.SPOOLing系统特点（ppt133，book222）</h2>
<ol>
<li>提高了I/O的速度。<br>
这里，对数据所进行的I/O操作，已从对低速I/O设备进行的I/O操作，演变为对输入井或输出井中数据的存取，如同脱机输入输出一样，提高了I/O速度，缓和了CPU与低速I/O设备之间速度不匹配的矛盾。</li>
<li>将独占设备改造为共享设备。<br>
因为在SPOOLing系统中，实际上并没为任何进程分配设备，而只是在输入井或输出井中为进程分配一个存储区和建立一张I/O请求表。这样，便把独占设备改造为共享设备。</li>
<li>实现了虚拟设备功能。<br>
宏观上，虽然是多个进程在同时使用一台独占设备，而对于每一个进程而言，他们都会认为自己是独占了一个设备。当然，该设备只是逻辑上的设备。SPOOLing系统实现了将独占设备变换为若干台对应的逻辑设备的功能。</li>
</ol>
<h2 id="30最基本的文件操作ppt21book241">30.最基本的文件操作（ppt21，book241）</h2>
<ol>
<li>创建文件。在创建一个新文件时，系统首先要为新文件分配必要的外存空间，并在文件系统的目录中，为之建立一个目录项。</li>
<li>删除文件。当已不再需要某文件时，可将它从文件系统中删除，清空要删除文件的目录项，并回收存储空间。</li>
<li>读文件。在读一个文件时，须在相应系统调用中给出文件名和应读入的内存目标地址。</li>
<li>写文件。在写一个文件时，须先查找目录，找到指定文件的目录项，再利用目录中的写指针进行写操作。</li>
<li>截断文件。但如果文件名及其属性均无改变时，则可采取另一种所谓的截断文件的方法，此即将原有文件的长度设置为0，或者说是放弃原有的文件内容。</li>
<li>设置文件的读/写位置。设置文件读/写位置的操作，用于设置文件读/写指针的位置，以便每次读/写文件时，不是从其始端而是从所设置的位置开始操作。</li>
</ol>
<h2 id="31文件系统对目录管理的要求ppt46-47book249">31.文件系统对目录管理的要求（ppt46-47，book249）</h2>
<ol>
<li>实现“按名存取”，即用户只须向系统提供所需访问文件的名字，便能快速准确地找到指定文件在外存上的存储位置。这是目录管理中最基本的功能，也是文件系统向用户提供的最基本的服务。</li>
<li>提高对目录的检索速度。通过合理地组织目录结构的方法，可加快对目录的检索速度，从而提高对文件的存取速度。这是在设计一个大、中型文件系统时所追求的主要目标。</li>
<li>文件共享。在多用户系统中，应允许多个用户共享一个文件。这样就须在外存中只保留一份该文件的副本，供不同用户使用，以节省大量的存储空间，并方便用户和提高文件利用率。</li>
<li>允许文件重名。系统应允许不同用户对不同文件采用相同的名字，以便于用户按照自己的习惯给文件命名和使用文件。</li>
</ol>
<h2 id="32影响文件安全性的主要因素ppt88book261">32.影响文件安全性的主要因素（ppt88，book261）</h2>
<ol>
<li>人为因素，即由于人们有意或无意的行为，而使文件系统中的数据遭到破坏或丢失。</li>
<li>系统因素，即由于系统的某部分出现异常情况，而造成对数据的破坏或丢失。特别是作为数据存储介质的磁盘，在出现故障或损坏时，会对文件系统的安全性造成影响；</li>
<li>自然因素，即存放在磁盘上的数据，随着时间的推移将可能发生溢出或逐渐消失。</li>
</ol>
<h2 id="33三级容错技术ppt16-30book287-290">33.三级容错技术（ppt16-30，book287-290）</h2>
<ol>
<li>第一级容错技术SFT-Ⅰ
<ul>
<li>双份目录和双份文件分配表</li>
<li>热修复重定向和写后读校验</li>
</ul>
</li>
<li>第二级容错技术SFT-II
<ul>
<li>磁盘镜像</li>
<li>磁盘双工</li>
</ul>
</li>
<li>基于集群技术的容错功能
<ul>
<li>双机热备份模式</li>
<li>双机互为备份模式</li>
<li>公用磁盘模式</li>
</ul>
</li>
</ol>
<hr>
<h1 id="下载地址">下载地址</h1>
<div id="pdf">
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/OS%E9%87%8D%E7%82%B9.pdf">点击下载《操作系统重点》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.pdf">点击下载《名词解释》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E7%AE%80%E7%AD%94%E9%A2%98.pdf">点击下载《简答题》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E8%AE%A1%E7%AE%97%E9%A2%98.pdf">点击下载《计算题》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E8%AE%A1%E7%AE%97%E9%A2%98%E8%A7%A3%E7%AD%94.pdf">点击下载《计算题解答》PDF</a><br>
</div>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PAT(Advanced)查找元素]]></title>
        <id>https://Just7chambray.github.io/post/pat_adv_lookingfor</id>
        <link href="https://Just7chambray.github.io/post/pat_adv_lookingfor">
        </link>
        <updated>2020-05-26T14:53:45.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1011-world-cup-betting-20分">1011 World Cup Betting (20分)</h2>
<h3 id="question">Question</h3>
<p>With the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa. Similarly, football betting fans were putting their money where their mouths were, by laying all manner of World Cup bets.</p>
<p>Chinese Football Lottery provided a &quot;Triple Winning&quot; game. The rule of winning was simple: first select any three of the games. Then for each selected game, bet on one of the three possible results -- namely W for win, T for tie, and L for lose. There was an odd assigned to each result. The winner's odd would be the product of the three odds times 65%.</p>
<p>For example, 3 games' odds are given as the following:</p>
<pre><code> W    T    L
1.1  2.5  1.7
1.2  3.1  1.6
4.1  1.2  1.1
</code></pre>
<p>To obtain the maximum profit, one must buy <code>W</code> for the 3rd game, <code>T</code> for the 2nd game, and <code>T</code> for the 1st game. If each bet takes 2 yuans, then the maximum profit would be (4.1×3.1×2.5×65%−1)×2=39.31 yuans (accurate up to 2 decimal places).</p>
<h3 id="input-specification">Input Specification</h3>
<p>Each input file contains one test case. Each case contains the betting information of 3 games. Each game occupies a line with three distinct odds corresponding to <code>W</code>, <code>T</code> and <code>L</code>.</p>
<h3 id="output-specification">Output Specification</h3>
<p>For each test case, print in one line the best bet of each game, and the maximum profit accurate up to 2 decimal places. The characters and the number must be separated by one space.</p>
<h3 id="sample-input">Sample Input</h3>
<pre><code>1.1 2.5 1.7
1.2 3.1 1.6
4.1 1.2 1.1
</code></pre>
<h3 id="sample-output1">Sample Output1</h3>
<pre><code>T T W 39.31
</code></pre>
<hr>
<h3 id="analysis">Analysis</h3>
<p>这题题意是给出3场比赛的赢平输的赔率，找出每一场比赛赔率最大的W T L，最后计算出收益。</p>
<h3 id="code">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;
char cmp(double g[]){
	if(g[0]&gt;g[1]){
		if(g[0]&gt;g[2])return 'W';
		else return 'L';
	}else{
		if(g[1]&gt;g[2])return 'T';
		else return 'L';
	}
}
int main() {
	double game[3]={0.0};
	double ans=1.0;
	for(int i=0;i&lt;3;i++){
		for(int j=0;j&lt;3;j++){
			scanf(&quot;%lf&quot;,&amp;game[j]);
		}
		printf(&quot;%c &quot;,cmp(game));
		ans*=max(max(game[0],game[1]),game[2]);
	}
	ans=(ans*0.65-1)*2;
	printf(&quot;%.2f&quot;,ans);
	return 0;
}
</code></pre>
<hr>
<h2 id="1006-sign-in-and-sign-out-25分">1006 Sign In and Sign Out (25分)</h2>
<h3 id="question-2">Question</h3>
<p>At the beginning of every day, the first person who signs in the computer room will unlock the door, and the last one who signs out will lock the door. Given the records of signing in's and out's, you are supposed to find the ones who have unlocked and locked the door on that day.</p>
<h3 id="input-specification-2">Input Specification</h3>
<p>Each input file contains one test case. Each case contains the records for one day. The case starts with a positive integer <em>M</em>, which is the total number of records, followed by <em>M</em> lines, each in the format:</p>
<pre><code>ID_number Sign_in_time Sign_out_time
</code></pre>
<p>where times are given in the format <code>HH:MM:SS</code>, and <code>ID_number</code> is a string with no more than 15 characters.</p>
<h3 id="output-specification-2">Output Specification</h3>
<p>For each test case, output in one line the ID numbers of the persons who have unlocked and locked the door on that day. The two ID numbers must be separated by one space.</p>
<p>Note: It is guaranteed that the records are consistent. That is, the sign in time must be earlier than the sign out time for each person, and there are no two persons sign in or out at the same moment.</p>
<h3 id="sample-input-2">Sample Input</h3>
<pre><code>3
CS301111 15:30:28 17:00:10
SC3021234 08:00:00 11:25:25
CS301133 21:45:00 21:58:40
</code></pre>
<h3 id="sample-output">Sample Output</h3>
<pre><code>SC3021234 CS301133
</code></pre>
<hr>
<h3 id="analysis-2">Analysis</h3>
<p>这题题意是给出n个人的id，sign in时间和 sign out时间，找出sign in时间最早的人和sign out最晚的人的id。一开始写了个结构体，包含id，sign in的时分秒，sign out的时分秒，写下来实在繁琐😓而且在min和max的赋初值上有点问题。因此参考柳神的思路，引入INT_MAX和INT_MIN，在循环里直接做判断。</p>
<h3 id="code-2">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
#include &lt;climits&gt;
using namespace std;

int main() {
	int m,min=INT_MAX,max=INT_MIN;
	string sin,sout;
	scanf(&quot;%d&quot;,&amp;m);
	for(int i=0;i&lt;m;i++){
		string s;
		cin&gt;&gt;s;
		int in_hh,in_mm,in_ss,out_hh,out_mm,out_ss;
		scanf(&quot;%d:%d:%d %d:%d:%d&quot;,&amp;in_hh,&amp;in_mm,&amp;in_ss,&amp;out_hh,&amp;out_mm,&amp;out_ss);
		if((in_ss+in_mm*60+in_hh*3600)&lt;=min){
			min=in_ss+in_mm*60+in_hh*3600;
			sin=s;
		}
		if((out_ss+out_mm*60+out_hh*3600)&gt;=max){
			max=out_ss+out_mm*60+out_hh*3600;
			sout=s;
		}
	}
	cout&lt;&lt;sin&lt;&lt;&quot; &quot;&lt;&lt;sout;
	return 0;
}
</code></pre>
<hr>
<h2 id="1036-boys-vs-girls-25分">1036 Boys vs Girls (25分)</h2>
<h3 id="question-3">Question</h3>
<p>This time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female students.</p>
<h3 id="input-specification-3">Input Specification</h3>
<p>Each input file contains one test case. Each case contains a positive integer <em>N</em>, followed by <em>N</em> lines of student information. Each line contains a student's <code>name</code>, <code>gender</code>, <code>ID</code> and <code>grade</code>, separated by a space, where <code>name</code> and <code>ID</code> are strings of no more than 10 characters with no space, <code>gender</code> is either <code>F</code> (female) or <code>M</code> (male), and <code>grade</code> is an integer between 0 and 100. It is guaranteed that all the grades are distinct.</p>
<h3 id="output-specification-3">Output Specification</h3>
<p>For each test case, output in 3 lines. The first line gives the name and ID of the female student with the highest grade, and the second line gives that of the male student with the lowest grade. The third line gives the difference <em>grade</em>F−<em>grade</em>M. If one such kind of student is missing, output <code>Absent</code> in the corresponding line, and output <code>NA</code> in the third line instead.</p>
<h3 id="sample-input1">Sample Input1</h3>
<pre><code>3
Joe M Math990112 89
Mike M CS991301 100
Mary F EE990830 95
</code></pre>
<h3 id="sample-output1-2">Sample Output1</h3>
<pre><code>Mary EE990830
Joe Math990112
6
</code></pre>
<h3 id="sample-input2">Sample Input2</h3>
<pre><code>1
Jean M AA980920 60
</code></pre>
<h3 id="sample-output2">Sample Output2</h3>
<pre><code>Absent
Jean AA980920
NA
</code></pre>
<hr>
<h3 id="analysis-3">Analysis</h3>
<p>这题题意是给出n个人的名字、性别、id、成绩，找出其中成绩最高的女生和成绩最低的男生，并输出姓名和id，以及两人的成绩差值。如果没有符合要求的男生或者女生，就输出Absent，成绩差值为NA。</p>
<p>这题也属于比较简单的题目，边输入边判断性别和成绩是否满足要求。注意最高成绩和最低成绩 的初值为-1和101。</p>
<h3 id="code-3">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;

int main() {
	int n,high=-1,low=101;
	string fn,fi,mn,mi;
	scanf(&quot;%d&quot;,&amp;n);
	for(int i=0;i&lt;n;i++){
		string name,id;
		char gender;
		int grade;
		cin&gt;&gt;name&gt;&gt;gender&gt;&gt;id&gt;&gt;grade;
		if(gender=='F' &amp;&amp; grade&gt;high){
			fn=name;fi=id;
			high=grade;
		}
		if(gender=='M'&amp;&amp;grade&lt;low){
			mn=name;mi=id;
			low=grade;
		}
	}
	if(high==-1)cout&lt;&lt;&quot;Absent&quot;&lt;&lt;endl;
	else cout&lt;&lt;fn&lt;&lt;&quot; &quot;&lt;&lt;fi&lt;&lt;endl;
	if(low==101)cout&lt;&lt;&quot;Absent&quot;&lt;&lt;endl;
	else cout&lt;&lt;mn&lt;&lt;&quot; &quot;&lt;&lt;mi&lt;&lt;endl;
	if(high==-1||low==101)cout&lt;&lt;&quot;NA&quot;;
	else cout&lt;&lt;high-low;
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PAT(Advanced)模拟篇]]></title>
        <id>https://Just7chambray.github.io/post/pat_adv_simulation</id>
        <link href="https://Just7chambray.github.io/post/pat_adv_simulation">
        </link>
        <updated>2020-05-25T12:33:26.000Z</updated>
        <content type="html"><![CDATA[<h2 id="a1042-shuffling-machine-20分">A1042 Shuffling Machine (20分)</h2>
<h3 id="question">Question</h3>
<p>Shuffling is a procedure used to randomize a deck of playing cards. Because standard shuffling techniques are seen as weak, and in order to avoid &quot;inside jobs&quot; where employees collaborate with gamblers by performing inadequate shuffles, many casinos employ <strong>automatic shuffling machines</strong>. Your task is to simulate a shuffling machine.</p>
<p>The machine shuffles a deck of 54 cards according to a given random order and repeats for a given number of times. It is assumed that the initial status of a card deck is in the following order:</p>
<pre><code>S1, S2, ..., S13,  H1, H2, ..., H13,  C1, C2, ..., C13,  D1, D2, ..., D13,  J1, J2
</code></pre>
<p>where &quot;S&quot; stands for &quot;Spade&quot;, &quot;H&quot; for &quot;Heart&quot;, &quot;C&quot; for &quot;Club&quot;, &quot;D&quot; for &quot;Diamond&quot;, and &quot;J&quot; for &quot;Joker&quot;. A given order is a permutation of distinct integers in [1, 54]. If the number at the <em>i</em>-th position is <em>j</em>, it means to move the card from position <em>i</em> to position <em>j</em>. For example, suppose we only have 5 cards: S3, H5, C1, D13 and J2. Given a shuffling order {4, 2, 5, 3, 1}, the result will be: J2, H5, D13, S3, C1. If we are to repeat the shuffling again, the result will be: C1, H5, S3, J2, D13.</p>
<h3 id="input-specification">Input Specification</h3>
<p>Each input file contains one test case. For each case, the first line contains a positive integer <em>K</em> (≤20) which is the number of repeat times. Then the next line contains the given order. All the numbers in a line are separated by a space.</p>
<h3 id="output-specification">Output Specification</h3>
<p>For each test case, print the shuffling results in one line. All the cards are separated by a space, and there must be no extra space at the end of the line.</p>
<h3 id="sample-input">Sample Input</h3>
<pre><code>2
36 52 37 38 3 39 40 53 54 41 11 12 13 42 43 44 2 4 23 24 25 26 27 6 7 8 48 49 50 51 9 10 14 15 16 5 17 18 19 1 20 21 22 28 29 30 31 32 33 34 35 45 46 47
</code></pre>
<h3 id="sample-output">Sample Output</h3>
<pre><code>S7 C11 C10 C12 S1 H7 H8 H9 D8 D9 S11 S12 S13 D10 D11 D12 S3 S4 S6 S10 H1 H2 C13 D2 D3 D4 H6 H3 D13 J1 J2 C1 C2 C3 C4 D1 S5 H5 H11 H12 C6 C7 C8 C9 S2 S8 S9 H10 D5 D6 D7 H4 H13 C5
</code></pre>
<hr>
<h3 id="analysis">Analysis</h3>
<p>这题题意是将按序排好的54张扑克牌按照新给出的顺序重新排列一定次数。我们可以借助两个数组start[]和end[]来存放操作前和操作后的顺序，再将一次操作后的end[]数组重新赋值给start[]数组，进行下一次操作。执行规定次数操作后，start[]就是最终的结果。</p>
<h3 id="code">Code</h3>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
using namespace std;
const int N=54;
char shcdj[5]={'S','H','C','D','J'};

int main(){
    int start[N+1],end[N+1],next[N+1];
    int k;//repeat times
    scanf(&quot;%d&quot;,&amp;k);
    for(int i=1;i&lt;=N;i++){
        start[i]=i;
        scanf(&quot;%d&quot;, &amp;next[i]);
    }
    for(int i=0;i&lt;k;i++){
        for(int j=1;j&lt;=N;j++){
            end[next[j]]=start[j];
        }
        for(int j=1;j&lt;=N;j++){
            start[j]=end[j];
        }
    }
    for(int i=1;i&lt;=N;i++){
        if(i!=1)printf(&quot; &quot;);
        start[i]--;
        printf(&quot;%c%d&quot;,shcdj[start[i] / 13],start[i]%13+1);
    }
    return 0;
}
</code></pre>
<hr>
<h2 id="a1046-shortest-distance-20分">A1046 Shortest Distance (20分)</h2>
<h3 id="question-2">Question</h3>
<p>The task is really simple: given N exits on a highway which forms a simple cycle, you are supposed to tell the shortest distance between any pair of exits.</p>
<h3 id="input-specification-2">Input Specification</h3>
<p>Each input file contains one test case. For each case, the first line contains an integer N (in [3,10^5]), followed by N integer distances D1 D2 ⋯ DN, where Di is the distance between the i-th and the (i+1)-st exits, and DN  is between the N-th and the 1st exits. All the numbers in a line are separated by a space. The second line gives a positive integer M (≤10^4 ), with M lines follow, each contains a pair of exit numbers, provided that the exits are numbered from 1 to N. It is guaranteed that the total round trip distance is no more than 10^7.</p>
<h3 id="output-specification-2">Output Specification</h3>
<p>For each test case, print your results in <em>M</em> lines, each contains the shortest distance between the corresponding given pair of exits.</p>
<h3 id="sample-input-2">Sample Input</h3>
<pre><code>5 1 2 4 14 9
3
1 3
2 5
4 1
</code></pre>
<h3 id="sample-output-2">Sample Output</h3>
<pre><code>3
10
7
</code></pre>
<hr>
<h3 id="analysis-2">Analysis</h3>
<p>这题题意是给出一个由N个结点组成的闭环，并已知相邻两点的距离，求给出两点之间的最短距离。给出的两点编号存在第一个点编号大于第二个点编号的可能性，加一个判断交换即可。<br>
原本是想用dis[]数组来保存第i个点到第i+1个点的距离，但是后面计算时需要大量循环，因此这里借鉴柳神的思路，用dis[]数组来保存第一个点到第n个点的距离，比较方便，就不用再循环计算！</p>
<h3 id="code-2">Code</h3>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;vector&gt;
using namespace std;
int main(){
	int n,m,sum=0,left,right;
	scanf(&quot;%d&quot;,&amp;n);
	vector&lt;int&gt;dis(n+1);
	for(int i=1;i&lt;=n;i++){
		int tmp;
		scanf(&quot;%d&quot;,&amp;tmp);
		sum+=tmp;
		dis[i]=sum;
	}
	scanf(&quot;%d&quot;,&amp;m);
	for(int i=0;i&lt;m;i++){
		scanf(&quot;%d %d&quot;,&amp;left,&amp;right);
		if(left&gt;right)swap(left,right);
		int tmp=dis[right-1]-dis[left-1];
		printf(&quot;%d\n&quot;,min(tmp,sum-tmp)); 
	}
	return 0;
}
</code></pre>
<hr>
<h2 id="a1065-ab-and-c-64bit-20分">A1065 A+B and C (64bit) (20分)</h2>
<h3 id="question-3">Question</h3>
<p>Given three integers <em>A</em>, <em>B</em> and <em>C</em> in [−2^63, 2^63], you are supposed to tell whether <em>A</em>+<em>B</em>&gt;<em>C</em>.</p>
<h3 id="input-specification-3">Input Specification</h3>
<p>The first line of the input gives the positive number of test cases, <em>T</em> (≤10). Then <em>T</em> test cases follow, each consists of a single line containing three integers <em>A</em>, <em>B</em> and <em>C</em>, separated by single spaces.</p>
<h3 id="output-specification-3">Output Specification</h3>
<p>For each test case, output in one line <code>Case #X: true</code> if <em>A</em>+<em>B</em>&gt;<em>C</em>, or <code>Case #X: false</code> otherwise, where <em>X</em> is the case number (starting from 1).</p>
<h3 id="sample-input-3">Sample Input</h3>
<pre><code>3
1 2 3
2 3 4
9223372036854775807 -9223372036854775808 0
</code></pre>
<h3 id="sample-output-3">Sample Output</h3>
<pre><code>Case #1: false
Case #2: true
Case #3: false
</code></pre>
<hr>
<h3 id="analysis-3">Analysis</h3>
<p>这题题意是给出三个整数并且范围在 [−2^63, 2^63]，对于普通int整型来说，一个整数占4Byte=32bit，取值范围远远小于题目要求，因此这里采用长整型，一个长整型整数占8Byte=64bit。</p>
<p>一开始写的时候没有考虑A+B的范围会溢出，因此只过了一个点的测试。</p>
<p>溢出的情况有两种：</p>
<ol>
<li>A&gt;0,B&gt;0,A+B&lt;0</li>
<li>A&lt;0,B&lt;0,A+B&gt;=0</li>
</ol>
<h3 id="code-3">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;
typedef long long int ll;
int main() {
	ll a,b,c;
	int t;
	scanf(&quot;%d&quot;,&amp;t);
	for(int i=0;i&lt;t;i++){
		scanf(&quot;%lld %lld %lld&quot;,&amp;a,&amp;b,&amp;c);
		ll sum=a+b;
		if(a&gt;0&amp;&amp;b&gt;0&amp;&amp;sum&lt;0)printf(&quot;Case #%d: true\n&quot;,i+1);
		else if(a&lt;0&amp;&amp;b&lt;0&amp;&amp;sum&gt;=0)printf(&quot;Case #%d: false\n&quot;,i+1);
		else if(sum&gt;c)printf(&quot;Case #%d: true\n&quot;,i+1);
		else printf(&quot;Case #%d: false\n&quot;,i+1);
	}
	return 0;
}
</code></pre>
<hr>
<h2 id="a1002-ab-for-polynomials-25分">A1002 A+B for Polynomials (25分)</h2>
<h3 id="question-4">Question</h3>
<p>This time, you are supposed to find A+B where A and B are two polynomials.</p>
<h3 id="input-specification-4">Input Specification</h3>
<p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p>
<p><em>K</em> <em>N</em>1 <em>aN</em>1 <em>N</em>2 <em>aN</em>2 ... <em>NK</em> <em>aNK</em></p>
<p>where <em>K</em> is the number of nonzero terms in the polynomial, <em>Ni</em> and <em>aNi</em> (<em>i</em>=1,2,⋯,<em>K</em>) are the exponents and coefficients, respectively. It is given that 1≤<em>K</em>≤10，0≤<em>NK</em>&lt;⋯&lt;<em>N</em>2&lt;<em>N</em>1≤1000.</p>
<h3 id="output-specification-4">Output Specification</h3>
<p>For each test case you should output the sum of <em>A</em> and <em>B</em> in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p>
<h3 id="sample-input-4">Sample Input</h3>
<pre><code>2 1 2.4 0 3.2
2 2 1.5 1 0.5
</code></pre>
<h3 id="sample-output-4">Sample Output</h3>
<pre><code>3 2 1.5 1 2.9 0 3.2
</code></pre>
<hr>
<h3 id="analysis-4">Analysis</h3>
<p>这题题意是做多项式的加法运算，比较简单，用数组即可搞定，数组下标对应指数，存的数为底数。</p>
<h3 id="code-4">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;
int main() {
	int k,cnt=0;double Num[1001]={0};
	for(int i=0;i&lt;2;i++){
		scanf(&quot;%d&quot;,&amp;k);
		for(int j=0;j&lt;k;j++){
			int exp;double coe;
			scanf(&quot;%d %lf&quot;,&amp;exp,&amp;coe);
			Num[exp]+=coe;
		}
	}
	for(int i=0;i&lt;1001;i++){
		if(Num[i]!=0)cnt++;
	}
	printf(&quot;%d&quot;,cnt);
	for(int i=1000;i&gt;=0;i--){
		if(Num[i]!=0.0)printf(&quot; %d %.1lf&quot;,i,Num[i]);
	}
	return 0;
}
</code></pre>
<hr>
<h2 id="a1009-product-of-polynomials-25分">A1009 Product of Polynomials (25分)</h2>
<h3 id="question-5">Question</h3>
<p>This time, you are supposed to find A×B where A and B are two polynomials.</p>
<h3 id="input-specification-5">Input Specification</h3>
<p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p>
<p><em>K</em> <em>N</em>1 <em>aN</em>1 <em>N</em>2 <em>aN</em>2 ... <em>NK</em> <em>aNK</em></p>
<p>where <em>K</em> is the number of nonzero terms in the polynomial, <em>Ni</em> and <em>aNi</em> (<em>i</em>=1,2,⋯,<em>K</em>) are the exponents and coefficients, respectively. It is given that 1≤<em>K</em>≤10，0≤<em>NK</em>&lt;⋯&lt;<em>N</em>2&lt;<em>N</em>1≤1000.</p>
<h3 id="output-specification-5">Output Specification</h3>
<p>For each test case you should output the product of <em>A</em> and <em>B</em> in one line, with the same format as the input. Notice that there must be <strong>NO</strong> extra space at the end of each line. Please be accurate up to 1 decimal place.</p>
<h3 id="sample-input-5">Sample Input</h3>
<pre><code>2 1 2.4 0 3.2
2 2 1.5 1 0.5
</code></pre>
<h3 id="sample-output-5">Sample Output</h3>
<pre><code>3 3 3.6 2 6.0 1 1.6
</code></pre>
<hr>
<h3 id="analysis-5">Analysis</h3>
<p>这题和上题差不多，稍微有些不一样，是做多项式的乘法运算。</p>
<p>这里借用两个数组arr[]和ans[]，前者存第一行数据，后者边计算边存；同样数组下标对应指数，存的数为底数。注意相乘之后的指数范围高达2000！</p>
<h3 id="code-5">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;
int main() {
	int k1,k2,cnt=0,exp;
	double coe,arr[1001]={0.0},ans[2001]={0.0};
	scanf(&quot;%d&quot;,&amp;k1);
	for(int i=0;i&lt;k1;i++){
		scanf(&quot;%d %lf&quot;,&amp;exp,&amp;coe);
		arr[exp]=coe;
	}
	scanf(&quot;%d&quot;,&amp;k2);
	for(int i=0;i&lt;k2;i++){
		scanf(&quot;%d %lf&quot;,&amp;exp,&amp;coe);
		for(int j=0;j&lt;1001;j++){
			ans[j+exp]+=coe*arr[j];
		}
	}
	for(int i=0;i&lt;2001;i++){
		if(ans[i]!=0.0)cnt++;
	}
	printf(&quot;%d&quot;,cnt);
	for(int i=2000;i&gt;=0;i--){
		if(ans[i]!=0.0)printf(&quot; %d %.1lf&quot;,i,ans[i]);
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vacation in Hangzhou]]></title>
        <id>https://Just7chambray.github.io/post/vacation_in_Hangzhou</id>
        <link href="https://Just7chambray.github.io/post/vacation_in_Hangzhou">
        </link>
        <updated>2020-05-05T01:25:53.000Z</updated>
        <summary type="html"><![CDATA[<p>By Wu&amp;Ts</p>
]]></summary>
        <content type="html"><![CDATA[<p>By Wu&amp;Ts</p>
<!-- more -->
<h2 id="iframe-frameborderno-border0-marginwidth0-marginheight0-width330-height86-srcmusic163comoutchainplayertype2id461347460auto1height66iframe"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=461347460&auto=1&height=66"></iframe></h2>
<h1 id="day1">Day1</h1>
<figure data-type="image" tabindex="1"><img src="https://Just7chambray.github.io/post-images/1588847397636.png" alt=""></figure>
<h2 id="第一站新白鹿">第一站：新白鹿🦌</h2>
<p>从台州到达杭州将近午饭时间，匆匆安置了行李就在陶老板的带领和推荐下去新白鹿餐厅。可能两个人都被饥饿感包围，光顾着品尝和点评，忘记了记录。<br>
两个人点了五个菜——小份蛋黄鸡翅（强推👍，鸡翅酥脆的表面裹上了一层咸蛋黄，内部的鸡肉嫩而多汁）、仔排炒年糕（据陶老板回忆是好吃的，但是这次的蚝油味过重，印象分--）、松露豆腐（小块豆腐外裹了一层粉油炸，并在表面撒上了松露粉，豆腐本身的味道比较淡，感觉搭配一些酱汁可能会更好）、鱼羊鲜（鱼+羊是真的鲜，但其鲜的本质在一定程度上也取决于食材的新鲜与搭配。鱼不够新鲜、羊肉的膻味过重、酸豆角和笋的味道使得汤汁的风味有一点怪怪的，所以不是特别推荐，如果要尝试的话要考虑季节食材因素）、能吃壳的虾（推荐👍，本质上是将大部分的虾壳去掉之后裹粉油炸，味道还是不错的），总体来说是一般水平，可能是这五个菜搭配吃起来有些腻。</p>
<h2 id="第二站宜家">第二站：宜家</h2>
<p>此处省略n字（网红店的通病）……</p>
<h2 id="第三站一品虾神龙虾">第三站：一品虾神龙虾🦞</h2>
<p>在家瘫了一会之后还是被陶老板无情地推出了家门，步行去吃小龙虾，好在这家店的味道真的没有令我们失望。我们点了四斤金汤蒜蓉味的和一小份面条，不得不夸陶老板真会吃！夹一小份面在碗里，然后浇上小龙虾的汤头，再剥几个虾肉搅和搅和，等待一小会面条充分吸收汤汁浓郁的味道之后，一口鲜味随着紧致的肉感和多汁的面条在口腔中迸发。一个字，就是好吃！<br>
<img src="https://Just7chambray.github.io/post-images/1588847456426.jpeg" alt=""></p>
<p>感觉四斤对于我们俩来说还是少了些，后来走一走到家又饿了……这是两个人的部分战绩<br>
<img src="https://Just7chambray.github.io/post-images/1588847498934.jpeg" alt=""><br>
<img src="https://Just7chambray.github.io/post-images/1588847508577.jpeg" alt=""></p>
<hr>
<h1 id="day2">Day2</h1>
<figure data-type="image" tabindex="2"><img src="https://Just7chambray.github.io/post-images/1588847529239.jpeg" alt=""></figure>
<h2 id="第一站河坊街">第一站：河坊街👣</h2>
<p>本以为河坊街会挺热闹的，但实际有些许冷清，可能是时间比较早。河坊街这一带都是石板路、老街、小桥流水人家这种风格，可能会更加吸引北方的孩子。</p>
<p>树影斑驳<br>
<img src="https://Just7chambray.github.io/post-images/1588847550582.jpeg" alt=""><br>
<img src="https://Just7chambray.github.io/post-images/1588847577936.jpeg" alt=""><br>
<img src="https://Just7chambray.github.io/post-images/1588847584288.jpeg" alt=""><br>
<img src="https://Just7chambray.github.io/post-images/1588847590869.jpeg" alt=""></p>
<p>走到鼓楼前，有一处小路通往小山，转角处还有阿婆在卖小时候看的连环画。<br>
<img src="https://Just7chambray.github.io/post-images/1588847601084.jpeg" alt=""></p>
<p>槐花漫天飞<br>
<img src="https://Just7chambray.github.io/post-images/1588847612172.jpeg" alt=""></p>
<p>在附近随便走走了好一会，还感受了杭州本地的生活环境，跑到人家小区里乱晃，这个老小区的阳台也会有绿色的棚棚，门前也会晒着用盐腌渍后的小虾……如果你看到两个奇奇怪怪的人突然停下步伐静止不动，不要投来诧异的目光，那只是两个台州人在努力的辨析杭州方言，听力结束后相视一笑：“听不懂啊！他们讲的好快哦！”<br>
<img src="https://Just7chambray.github.io/post-images/1588847624644.jpeg" alt=""></p>
<h2 id="第二站杭州酒家">第二站：杭州酒家🥢</h2>
<p>继续杭帮菜的打卡之路！</p>
<p>我们去的这家店在延安路，位于一个路口的转角，到达的时候门口就有许多顾客在等待排队，好多还是杭州本地的，听到熟悉又陌生的吴语，默默猜测这家味道应该差不了。</p>
<p>松丝汤包（一开始忘记要米醋了，陶老板没吃两个就觉得有些腻了，剩下就都是我的了:-I）<br>
<img src="https://Just7chambray.github.io/post-images/1588847692270.jpeg" alt=""></p>
<p>水晶虾饺（这家的虾饺皮略微厚了些，但是整个味道还是不错的。by the way, I prefer this one.）<br>
<img src="https://Just7chambray.github.io/post-images/1588847661288.jpeg" alt=""></p>
<p>杭州熏鱼（强推👍，虽然我只吃了两块，但是吃出了奶奶的味道。熏鱼算是浙菜的经典之一吧，用的鱼必须是草鱼或者青鱼，将它切成一公分厚度的鱼段，腌制油炸入味，而且必须是糖醋味的才好吃！）<br>
<img src="https://Just7chambray.github.io/post-images/1588847673282.jpeg" alt=""></p>
<p>重头戏：果木泥烤叫花鸡！（三敲叫花鸡讨个好彩头！说到叫花鸡就会想到金庸的射雕，因此期望也会高一些些。鸡肉的肉质很嫩很烂，鲜味和汁水被荷叶、泥巴锁得死死的。第一口还是挺惊艳的，但多吃了几口后不得不说，腻啊！如果是尝鲜的话也无可厚非了，最后还是被解决完了。）<br>
<img src="https://Just7chambray.github.io/post-images/1588847715168.jpeg" alt=""></p>
<h2 id="第三站apple西湖">第三站：Apple（西湖）🍎</h2>
<p>比起江南风景，还是数码产品更加吸引我。近期入手了新款iPad pro，并且在陶老板几个月的文化输出中，对苹果产品的了解和理解略有提升。iPhoneSE 2的手感简直了，比11都要更胜一筹。再加上感人的尺寸，对手小的女生简直不要太友好。圆点触感的震动反馈也深得我心，要不是单卡无法满足我的需求，可能现在眼前的就不是iPad pro而是可爱的SE了。既然入手了iPad，必然要去体验Magic keyboard2，iPad机身和键盘的磁吸感很强，而且可以帮助纠正位置（完了，我记不起来它的优秀之处了……）因为式磁吸的，所以对iPad四周没有保护；而且要考虑到稳定性，在一定程度上牺牲了便携性，同时也无法做到单手开合，甚至合上之后打开也有点困难（不过也有可能是我的问题）；触控板因为尺寸原因显得十分委屈；最后一点，就是贵！除了这些也没其他什么毛病吧！<br>
不再一一细说其他产品了，我们应该是体验了所有的产品，每一个都细说下去恐怕今晚码不完了。<br>
<img src="https://Just7chambray.github.io/post-images/1588847729765.jpeg" alt=""></p>
<h2 id="第四站一加-oneplus-1">第四站：一加 OnePlus ①➕</h2>
<p>一个“资深”苹果用户和一个新入坑苹果用户，一个曾经的一加手机用户和一个现在仍是的一加手机用户，从Apple店到OnePlus形象服务店，不禁感叹资本的实力差异是多么巨大！一加的这家形象服务店在武林广场的负一楼，人流量少的可怜，不过小众品牌有自家门店就已经很难得了，不能要求太多。值得一提的是，一加的售后服务真的真的很好！！大家快去买一加！！<br>
<img src="https://Just7chambray.github.io/post-images/1588847749217.jpeg" alt=""></p>
<hr>
<h1 id="day3">Day3🛶</h1>
<p><img src="https://Just7chambray.github.io/post-images/1588847786060.png" alt=""><br>
想着到了杭州不游西湖像是白走了一遭，从湖滨银泰这边绕着湖边散步，吹着风，拍拍照，还是十分惬意的。等到饭点了又去打卡杭帮菜——“绿茶”。</p>
<p>这家餐厅的环境很好，颇具江南水乡的风格，小桥、流水、四方桌、船坞、油纸伞……连餐厅工作人员的服饰也颇具江南特色。<br>
<img src="https://Just7chambray.github.io/post-images/1588847829599.jpeg" alt=""><br>
<img src="https://Just7chambray.github.io/post-images/1588847840017.jpeg" alt=""><br>
<img src="https://Just7chambray.github.io/post-images/1588847854585.jpeg" alt=""><br>
菜品与菜色也是浙菜的风格，杭三鲜甚至吃出了台州本地菜的味道，🦐也不错，夸一夸👍（好吧，写了一下午我已经才思枯竭了😢，就这样吧）<br>
<img src="https://Just7chambray.github.io/post-images/1588847863993.jpeg" alt=""></p>
<p>不知道会不会有朋友看到最后，给看到最后的朋友们送上惊喜彩蛋,并郑重感谢陶老板的款待！！！<br>
<img src="https://Just7chambray.github.io/post-images/1588848281619.jpeg" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[『第一周』网络爬虫之规则]]></title>
        <id>https://Just7chambray.github.io/post/web_crawler_1</id>
        <link href="https://Just7chambray.github.io/post/web_crawler_1">
        </link>
        <updated>2020-03-31T07:20:40.000Z</updated>
        <summary type="html"><![CDATA[<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>【第一周】网络爬虫之规则</title><style>
/* webkit printing magic: print all background colors */
html {
	-webkit-print-color-adjust: exact;
}
* {
	box-sizing: border-box;
	-webkit-print-color-adjust: exact;
}
<p>html,<br>
body {<br>
margin: 0;<br>
padding: 0;<br>
}<br>
@media only screen {<br>
body {<br>
margin: 2em auto;<br>
max-width: 900px;<br>
color: rgb(55, 53, 47);<br>
}<br>
}</p>
<p>body {<br>
line-height: 1.5;<br>
white-space: pre-wrap;<br>
}</p>
<p>a,<br>
a.visited {<br>
color: inherit;<br>
text-decoration: underline;<br>
}</p>
<p>.pdf-relative-link-path {<br>
font-size: 80%;<br>
color: #444;<br>
}</p>
<p>h1,<br>
h2,<br>
h3 {<br>
letter-spacing: -0.01em;<br>
line-height: 1.2;<br>
font-weight: 600;<br>
margin-bottom: 0;<br>
}</p>
<p>.page-title {<br>
font-size: 2.5rem;<br>
font-weight: 700;<br>
margin-top: 0;<br>
margin-bottom: 0.75em;<br>
}</p>
<p>h1 {<br>
font-size: 1.875rem;<br>
margin-top: 1.875rem;<br>
}</p>
<p>h2 {<br>
font-size: 1.5rem;<br>
margin-top: 1.5rem;<br>
}</p>
<p>h3 {<br>
font-size: 1.25rem;<br>
margin-top: 1.25rem;<br>
}</p>
<p>.source {<br>
border: 1px solid #ddd;<br>
border-radius: 3px;<br>
padding: 1.5em;<br>
word-break: break-all;<br>
}</p>
<p>.callout {<br>
border-radius: 3px;<br>
padding: 1rem;<br>
}</p>
<p>figure {<br>
margin: 1.25em 0;<br>
page-break-inside: avoid;<br>
}</p>
<p>figcaption {<br>
opacity: 0.5;<br>
font-size: 85%;<br>
margin-top: 0.5em;<br>
}</p>
<p>mark {<br>
background-color: transparent;<br>
}</p>
<p>.indented {<br>
padding-left: 1.5em;<br>
}</p>
<p>hr {<br>
background: transparent;<br>
display: block;<br>
width: 100%;<br>
height: 1px;<br>
visibility: visible;<br>
border: none;<br>
border-bottom: 1px solid rgba(55, 53, 47, 0.09);<br>
}</p>
<p>img {<br>
max-width: 100%;<br>
}</p>
<p>@media only print {<br>
img {<br>
max-height: 100vh;<br>
object-fit: contain;<br>
}<br>
}</p>
<p>@page {<br>
margin: 1in;<br>
}</p>
<p>.collection-content {<br>
font-size: 0.875rem;<br>
}</p>
<p>.column-list {<br>
display: flex;<br>
justify-content: space-between;<br>
}</p>
<p>.column {<br>
padding: 0 1em;<br>
}</p>
<p>.column:first-child {<br>
padding-left: 0;<br>
}</p>
<p>.column:last-child {<br>
padding-right: 0;<br>
}</p>
<p>.table_of_contents-item {<br>
display: block;<br>
font-size: 0.875rem;<br>
line-height: 1.3;<br>
padding: 0.125rem;<br>
}</p>
<p>.table_of_contents-indent-1 {<br>
margin-left: 1.5rem;<br>
}</p>
<p>.table_of_contents-indent-2 {<br>
margin-left: 3rem;<br>
}</p>
<p>.table_of_contents-indent-3 {<br>
margin-left: 4.5rem;<br>
}</p>
<p>.table_of_contents-link {<br>
text-decoration: none;<br>
opacity: 0.7;<br>
border-bottom: 1px solid rgba(55, 53, 47, 0.18);<br>
}</p>
<p>table,<br>
th,<br>
td {<br>
border: 1px solid rgba(55, 53, 47, 0.09);<br>
border-collapse: collapse;<br>
}</p>
<p>table {<br>
border-left: none;<br>
border-right: none;<br>
}</p>
<p>th,<br>
td {<br>
font-weight: normal;<br>
padding: 0.25em 0.5em;<br>
line-height: 1.5;<br>
min-height: 1.5em;<br>
text-align: left;<br>
}</p>
<p>th {<br>
color: rgba(55, 53, 47, 0.6);<br>
}</p>
<p>ol,<br>
ul {<br>
margin: 0;<br>
margin-block-start: 0.6em;<br>
margin-block-end: 0.6em;<br>
}</p>
<p>li &gt; ol:first-child,<br>
li &gt; ul:first-child {<br>
margin-block-start: 0.6em;<br>
}</p>
<p>ul &gt; li {<br>
list-style: disc;<br>
}</p>
<p>ul.to-do-list {<br>
text-indent: -1.7em;<br>
}</p>
<p>ul.to-do-list &gt; li {<br>
list-style: none;<br>
}</p>
<p>.to-do-children-checked {<br>
text-decoration: line-through;<br>
opacity: 0.375;<br>
}</p>
<p>ul.toggle &gt; li {<br>
list-style: none;<br>
}</p>
<p>ul {<br>
padding-inline-start: 1.7em;<br>
}</p>
<p>ul &gt; li {<br>
padding-left: 0.1em;<br>
}</p>
<p>ol {<br>
padding-inline-start: 1.6em;<br>
}</p>
<p>ol &gt; li {<br>
padding-left: 0.2em;<br>
}</p>
<p>.mono ol {<br>
padding-inline-start: 2em;<br>
}</p>
<p>.mono ol &gt; li {<br>
text-indent: -0.4em;<br>
}</p>
<p>.toggle {<br>
padding-inline-start: 0em;<br>
list-style-type: none;<br>
}</p>
<p>/* Indent toggle children */<br>
.toggle &gt; li &gt; details {<br>
padding-left: 1.7em;<br>
}</p>
<p>.toggle &gt; li &gt; details &gt; summary {<br>
margin-left: -1.1em;<br>
}</p>
<p>.selected-value {<br>
display: inline-block;<br>
padding: 0 0.5em;<br>
background: rgba(206, 205, 202, 0.5);<br>
border-radius: 3px;<br>
margin-right: 0.5em;<br>
margin-top: 0.3em;<br>
margin-bottom: 0.3em;<br>
white-space: nowrap;<br>
}</p>
<p>.collection-title {<br>
display: inline-block;<br>
margin-right: 1em;<br>
}</p>
<p>time {<br>
opacity: 0.5;<br>
}</p>
<p>.icon {<br>
display: inline-block;<br>
max-width: 1.2em;<br>
max-height: 1.2em;<br>
text-decoration: none;<br>
vertical-align: text-bottom;<br>
margin-right: 0.5em;<br>
}</p>
<p>img.icon {<br>
border-radius: 3px;<br>
}</p>
<p>.user-icon {<br>
width: 1.5em;<br>
height: 1.5em;<br>
border-radius: 100%;<br>
margin-right: 0.5rem;<br>
}</p>
<p>.user-icon-inner {<br>
font-size: 0.8em;<br>
}</p>
<p>.text-icon {<br>
border: 1px solid #000;<br>
text-align: center;<br>
}</p>
<p>.page-cover-image {<br>
display: block;<br>
object-fit: cover;<br>
width: 100%;<br>
height: 30vh;<br>
}</p>
<p>.page-header-icon {<br>
font-size: 3rem;<br>
margin-bottom: 1rem;<br>
}</p>
<p>.page-header-icon-with-cover {<br>
margin-top: -0.72em;<br>
margin-left: 0.07em;<br>
}</p>
<p>.page-header-icon img {<br>
border-radius: 3px;<br>
}</p>
<p>.link-to-page {<br>
margin: 1em 0;<br>
padding: 0;<br>
border: none;<br>
font-weight: 500;<br>
}</p>
<p>p &gt; .user {<br>
opacity: 0.5;<br>
}</p>
<p>td &gt; .user,<br>
td &gt; time {<br>
white-space: nowrap;<br>
}</p>
<p>input[type=&quot;checkbox&quot;] {<br>
transform: scale(1.5);<br>
margin-right: 0.6em;<br>
vertical-align: middle;<br>
}</p>
<p>p {<br>
margin-top: 0.5em;<br>
margin-bottom: 0.5em;<br>
}</p>
<p>.image {<br>
border: none;<br>
margin: 1.5em 0;<br>
padding: 0;<br>
border-radius: 0;<br>
text-align: center;<br>
}</p>
<p>.code,<br>
code {<br>
background: rgba(135, 131, 120, 0.15);<br>
border-radius: 3px;<br>
padding: 0.2em 0.4em;<br>
border-radius: 3px;<br>
font-size: 85%;<br>
tab-size: 2;<br>
}</p>
<p>code {<br>
color: #eb5757;<br>
}</p>
<p>.code {<br>
padding: 1.5em 1em;<br>
}</p>
<p>.code &gt; code {<br>
background: none;<br>
padding: 0;<br>
font-size: 100%;<br>
color: inherit;<br>
}</p>
<p>blockquote {<br>
font-size: 1.25em;<br>
margin: 1em 0;<br>
padding-left: 1em;<br>
border-left: 3px solid rgb(55, 53, 47);<br>
}</p>
<p>.bookmark {<br>
text-decoration: none;<br>
max-height: 8em;<br>
padding: 0;<br>
display: flex;<br>
width: 100%;<br>
align-items: stretch;<br>
}</p>
<p>.bookmark-title {<br>
font-size: 0.85em;<br>
overflow: hidden;<br>
text-overflow: ellipsis;<br>
height: 1.75em;<br>
white-space: nowrap;<br>
}</p>
<p>.bookmark-text {<br>
display: flex;<br>
flex-direction: column;<br>
}</p>
<p>.bookmark-info {<br>
flex: 4 1 180px;<br>
padding: 12px 14px 14px;<br>
display: flex;<br>
flex-direction: column;<br>
justify-content: space-between;<br>
}</p>
<p>.bookmark-image {<br>
width: 33%;<br>
flex: 1 1 180px;<br>
display: block;<br>
position: relative;<br>
object-fit: cover;<br>
border-radius: 1px;<br>
}</p>
<p>.bookmark-description {<br>
color: rgba(55, 53, 47, 0.6);<br>
font-size: 0.75em;<br>
overflow: hidden;<br>
max-height: 4.5em;<br>
word-break: break-word;<br>
}</p>
<p>.bookmark-href {<br>
font-size: 0.75em;<br>
margin-top: 0.25em;<br>
}</p>
<p>.sans { font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; }<br>
.code { font-family: &quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; }<br>
.serif { font-family: Lyon-Text, Georgia, YuMincho, &quot;Yu Mincho&quot;, &quot;Hiragino Mincho ProN&quot;, &quot;Hiragino Mincho Pro&quot;, &quot;Songti TC&quot;, &quot;Songti SC&quot;, &quot;SimSun&quot;, &quot;Nanum Myeongjo&quot;, NanumMyeongjo, Batang, serif; }<br>
.mono { font-family: iawriter-mono, Nitti, Menlo, Courier, monospace; }<br>
.pdf .sans { font-family: Inter, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC', 'Noto Sans CJK KR'; }</p>
<p>.pdf .code { font-family: Source Code Pro, &quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC', 'Noto Sans Mono CJK KR'; }</p>
<p>.pdf .serif { font-family: PT Serif, Lyon-Text, Georgia, YuMincho, &quot;Yu Mincho&quot;, &quot;Hiragino Mincho ProN&quot;, &quot;Hiragino Mincho Pro&quot;, &quot;Songti TC&quot;, &quot;Songti SC&quot;, &quot;SimSun&quot;, &quot;Nanum Myeongjo&quot;, NanumMyeongjo, Batang, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC', 'Noto Sans CJK KR'; }</p>
<p>.pdf .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC', 'Noto Sans Mono CJK KR'; }</p>
<p>.highlight-default {<br>
}<br>
.highlight-gray {<br>
color: rgb(155,154,151);<br>
}<br>
.highlight-brown {<br>
color: rgb(100,71,58);<br>
}<br>
.highlight-orange {<br>
color: rgb(217,115,13);<br>
}<br>
.highlight-yellow {<br>
color: rgb(223,171,1);<br>
}<br>
.highlight-teal {<br>
color: rgb(15,123,108);<br>
}<br>
.highlight-blue {<br>
color: rgb(11,110,153);<br>
}<br>
.highlight-purple {<br>
color: rgb(105,64,165);<br>
}<br>
.highlight-pink {<br>
color: rgb(173,26,114);<br>
}<br>
.highlight-red {<br>
color: rgb(224,62,62);<br>
}<br>
.highlight-gray_background {<br>
background: rgb(235,236,237);<br>
}<br>
.highlight-brown_background {<br>
background: rgb(233,229,227);<br>
}<br>
.highlight-orange_background {<br>
background: rgb(250,235,221);<br>
}<br>
.highlight-yellow_background {<br>
background: rgb(251,243,219);<br>
}<br>
.highlight-teal_background {<br>
background: rgb(221,237,234);<br>
}<br>
.highlight-blue_background {<br>
background: rgb(221,235,241);<br>
}<br>
.highlight-purple_background {<br>
background: rgb(234,228,242);<br>
}<br>
.highlight-pink_background {<br>
background: rgb(244,223,235);<br>
}<br>
.highlight-red_background {<br>
background: rgb(251,228,228);<br>
}<br>
.block-color-default {<br>
color: inherit;<br>
fill: inherit;<br>
}<br>
.block-color-gray {<br>
color: rgba(55, 53, 47, 0.6);<br>
fill: rgba(55, 53, 47, 0.6);<br>
}<br>
.block-color-brown {<br>
color: rgb(100,71,58);<br>
fill: rgb(100,71,58);<br>
}<br>
.block-color-orange {<br>
color: rgb(217,115,13);<br>
fill: rgb(217,115,13);<br>
}<br>
.block-color-yellow {<br>
color: rgb(223,171,1);<br>
fill: rgb(223,171,1);<br>
}<br>
.block-color-teal {<br>
color: rgb(15,123,108);<br>
fill: rgb(15,123,108);<br>
}<br>
.block-color-blue {<br>
color: rgb(11,110,153);<br>
fill: rgb(11,110,153);<br>
}<br>
.block-color-purple {<br>
color: rgb(105,64,165);<br>
fill: rgb(105,64,165);<br>
}<br>
.block-color-pink {<br>
color: rgb(173,26,114);<br>
fill: rgb(173,26,114);<br>
}<br>
.block-color-red {<br>
color: rgb(224,62,62);<br>
fill: rgb(224,62,62);<br>
}<br>
.block-color-gray_background {<br>
background: rgb(235,236,237);<br>
}<br>
.block-color-brown_background {<br>
background: rgb(233,229,227);<br>
}<br>
.block-color-orange_background {<br>
background: rgb(250,235,221);<br>
}<br>
.block-color-yellow_background {<br>
background: rgb(251,243,219);<br>
}<br>
.block-color-teal_background {<br>
background: rgb(221,237,234);<br>
}<br>
.block-color-blue_background {<br>
background: rgb(221,235,241);<br>
}<br>
.block-color-purple_background {<br>
background: rgb(234,228,242);<br>
}<br>
.block-color-pink_background {<br>
background: rgb(244,223,235);<br>
}<br>
.block-color-red_background {<br>
background: rgb(251,228,228);<br>
}<br>
.select-value-color-default { background-color: rgba(206,205,202,0.5); }<br>
.select-value-color-gray { background-color: rgba(155,154,151, 0.4); }<br>
.select-value-color-brown { background-color: rgba(140,46,0,0.2); }<br>
.select-value-color-orange { background-color: rgba(245,93,0,0.2); }<br>
.select-value-color-yellow { background-color: rgba(233,168,0,0.2); }<br>
.select-value-color-green { background-color: rgba(0,135,107,0.2); }<br>
.select-value-color-blue { background-color: rgba(0,120,223,0.2); }<br>
.select-value-color-purple { background-color: rgba(103,36,222,0.2); }<br>
.select-value-color-pink { background-color: rgba(221,0,129,0.2); }<br>
.select-value-color-red { background-color: rgba(255,0,26,0.2); }</p>
<p>.checkbox {<br>
display: inline-flex;<br>
vertical-align: text-bottom;<br>
width: 16;<br>
height: 16;<br>
background-size: 16px;<br>
margin-left: 2px;<br>
margin-right: 5px;<br>
}</p>
<p>.checkbox-on {<br>
background-image: url(&quot;data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22%2358A9D7%22%2F%3E%0A%3Cpath%20d%3D%22M6.71429%2012.2852L14%204.9995L12.7143%203.71436L6.71429%209.71378L3.28571%206.2831L2%207.57092L6.71429%2012.2852Z%22%20fill%3D%22white%22%2F%3E%0A%3C%2Fsvg%3E&quot;);<br>
}</p>
<p>.checkbox-off {<br>
background-image: url(&quot;data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%220.75%22%20y%3D%220.75%22%20width%3D%2214.5%22%20height%3D%2214.5%22%20fill%3D%22white%22%20stroke%3D%22%2336352F%22%20stroke-width%3D%221.5%22%2F%3E%0A%3C%2Fsvg%3E&quot;);<br>
}</p>
<p></style></head></p>
<body>
	<article id="20bb172b-49b9-4bec-b4d7-b3091cbf92a4" class="page sans">
		<header>
			<h1 class="page-title">【第一周】网络爬虫之规则</h1>
		</header>
		<div class="page-body"><h1 id="a2dc9639-39c7-4217-abba-527a6568116f" class=""><strong>单元1：Requests库入门</strong></h1><h2 id="0e3e2a88-effc-4008-920b-00e016cde78f" class="">安装</h2><pre id="553720b0-c1c5-4de4-8d44-0af3c5778b9f" class="code"><code>win+R cmd
pip install requsets</code></pre>
<p id="c1c4a2f5-1f69-4500-947e-aa7a3cee0a99" class="">测试安装成功</p><pre id="caf032a3-d1b5-47a0-8cec-ff65adc51be9" class="code"><code>import requests</code></pre><h2 id="f208b97d-ef66-4d3f-a2ff-f87e0dff9ec6" class=""><strong>get()方法</strong></h2><pre id="e5733d71-c902-4387-8b4c-74b4cddf56bb" class="code"><code>r = requests.get(url)#获得网页
#返回一个包含服务器资源的response对象
#构造一个向服务器请求资源的request对象</code></pre><p id="61c68d60-0b30-4be2-a541-0ff804a12ec2" class="">完整使用方法：</p><pre id="9ff9725a-b8f7-4f90-8a98-bb9272de1e91" class="code"><code>request.get(url,params=None,**kwargs)
#url:拟获取页面的url链接
#params:Url中的额外参数，字典或字节流格式，可选
#**kwargs:12个控制访问的参数</code></pre><div id="59c5ecc9-a3bd-484f-889f-8e0e98375dde" class="collection-content"><h4 class="collection-title">Response对象的属性</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>属性</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>具体说明</th></tr></thead><tbody><tr id="27ef4ac9-9337-4fae-8d67-704f2022a32a"><td class="cell-title"><a href="https://www.notion.so/r-status_code-27ef4ac993374fae8d67704f2022a32a">r.status_code</a></td><td class="cell-q&#x27;!\">Http请求的返回状态,200表示连接成功，404表示失败</td><td class="cell-P8)5">只有返回200，response其他属性才可用；404或其他某些原因出错将产生异常</td></tr><tr id="9c574611-6eee-4015-a7a7-394917e6940e"><td class="cell-title"><a href="https://www.notion.so/r-text-9c5746116eee4015a7a7394917e6940e">r.text</a></td><td class="cell-q&#x27;!\">Http响应内容的字符串形式,即，url对应的页面内容</td><td class="cell-P8)5"></td></tr><tr id="3db1b968-e1dd-433e-b00c-96623e8a6512"><td class="cell-title"><a href="https://www.notion.so/r-encoding-3db1b968e1dd433eb00c96623e8a6512">r.encoding</a></td><td class="cell-q&#x27;!\">从HTTP header中猜测的响应内容编码方式</td><td class="cell-P8)5">如果header中不存在charset，则认为编码为ISO-8859-1</td></tr><tr id="4822850a-46d4-4e51-b23d-6b1071b7f297"><td class="cell-title"><a href="https://www.notion.so/r-apparent_encoding-4822850a46d44e51b23d6b1071b7f297">r.apparent_encoding</a></td><td class="cell-q&#x27;!\">从内容中分析出的相应内容编码方式（备选编码方式）</td><td class="cell-P8)5">根据网页内容分析出的编码方式，更准确</td></tr><tr id="1ea1b18a-f684-4a94-b845-4b9d5681fa3a"><td class="cell-title"><a href="https://www.notion.so/r-content-1ea1b18af6844a94b8454b9d5681fa3a">r.content</a></td><td class="cell-q&#x27;!\">Http响应内容的二进制形式</td><td class="cell-P8)5"></td></tr></tbody></table></div><p id="aed2a0c8-7a8a-4b68-9cf8-459c0f2bd8b2" class="">
</p><h2 id="2ae66bda-ff9e-4e9a-a721-f9007b5f42b2" class=""><strong>爬取网页的通用代码框架</strong></h2><div id="7c6fc79a-e12f-4598-bced-c58b74b82355" class="collection-content"><h4 class="collection-title">理解requests库的异常</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>异常</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th></tr></thead><tbody><tr id="b6babd28-c362-4354-92a9-b3f2ea1e69e6"><td class="cell-title"><a href="https://www.notion.so/requests-ConnectionError-b6babd28c362435492a9b3f2ea1e69e6">requests.ConnectionError</a></td><td class="cell-nfco">网络连接错误异常，如DNS查询失败，拒绝连接等</td></tr><tr id="b918bb81-cddd-4316-94c9-a24b5f49434b"><td class="cell-title"><a href="https://www.notion.so/requests-HTTPError-b918bb81cddd431694c9a24b5f49434b">requests.HTTPError</a></td><td class="cell-nfco">Http错误异常</td></tr><tr id="2009f7c0-dbd6-4752-914d-bff8c84b36df"><td class="cell-title"><a href="https://www.notion.so/requests-URLRequired-2009f7c0dbd64752914dbff8c84b36df">requests.URLRequired</a></td><td class="cell-nfco">Url缺失异常</td></tr><tr id="b949d882-1281-4e38-84d3-55e6dc38842d"><td class="cell-title"><a href="https://www.notion.so/requests-TooManyRedirects-b949d88212814e3884d355e6dc38842d"> requests.TooManyRedirects</a></td><td class="cell-nfco">超过最大重定向次数，产生重定向异常</td></tr><tr id="c299c673-bf3d-4b97-9b6e-060fd4c1964e"><td class="cell-title"><a href="https://www.notion.so/requests-ConnectTimeout-c299c673bf3d4b979b6e060fd4c1964e"> requests.ConnectTimeout</a></td><td class="cell-nfco">连接远程服务器时超时异常</td></tr><tr id="05617fa0-28de-4c9c-8140-5ae1d7740c5f"><td class="cell-title"><a href="https://www.notion.so/requests-Timeout-05617fa028de4c9c81405ae1d7740c5f"> requests.Timeout</a></td><td class="cell-nfco"> 请求url超时产生超时异常</td></tr><tr id="17b8527a-72f3-44c4-9a8d-ccacdc7551eb"><td class="cell-title"><a href="https://www.notion.so/r-raise_for_status-17b8527a72f344c49a8dccacdc7551eb">r.raise_for_status()</a></td><td class="cell-nfco">如果不是200，产生异常requests.HTTPError</td></tr></tbody></table></div><pre id="bfcc1532-18a1-4d5e-a6a4-7a18a6654ef1" class="code"><code>#有效稳定的代码框架
import requests
<p>def getHTMLText(url):<br>
try:<br>
r = requests.get(url, timeout = 30)<br>
r.raise_for_status()#如果状态不是200，引发HTTPError异常<br>
r.encoding = r.apparent_encoding<br>
return r.text<br>
except:<br>
return &quot;error&quot;</p>
<p>if <strong>name</strong> == &quot;<strong>main</strong>&quot;:<br>
url = &quot;http://www.baidu.com&quot;<br>
print(getHTMLText(url))</code></pre><p id="b0039b9b-fc50-450f-92fb-a41bd2587b15" class=""></p>
</p><h2 id="6d14dd04-8053-41b6-a33c-cbac8760885a" class=""><strong>HTTP协议及Requests库方法</strong></h2><div id="6b982216-7aed-452d-8103-fb08a7e90067" class="collection-content"><h4 class="collection-title">Requests库的7个主要方法</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th></tr></thead><tbody><tr id="c176508e-9c2b-43ea-9511-81703f14710d"><td class="cell-title"><a href="https://www.notion.so/requests-request-c176508e9c2b43ea951181703f14710d">requests.request()</a></td><td class="cell-IBk\">构造一个请求，支撑以下各方法的基础方法</td></tr><tr id="213c954b-b663-4111-a8a2-e13bb6cf5939"><td class="cell-title"><a href="https://www.notion.so/requests-get-213c954bb6634111a8a2e13bb6cf5939">requests.get()</a></td><td class="cell-IBk\">获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr id="a5b8499e-7cca-45c3-b460-801127f397a9"><td class="cell-title"><a href="https://www.notion.so/requests-head-a5b8499e7cca45c3b460801127f397a9">requests.head()</a></td><td class="cell-IBk\">获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr id="79578cc6-5949-4e79-9030-7465012fdbd7"><td class="cell-title"><a href="https://www.notion.so/requests-post-79578cc659494e7990307465012fdbd7">requests.post()</a></td><td class="cell-IBk\">向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr id="ab173097-87e5-4452-86c6-d59861351372"><td class="cell-title"><a href="https://www.notion.so/requests-put-ab17309787e5445286c6d59861351372">requests.put()</a></td><td class="cell-IBk\">向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr id="ce9f0c4c-844a-4c07-b566-3ad0008d680e"><td class="cell-title"><a href="https://www.notion.so/requests-patch-ce9f0c4c844a4c07b5663ad0008d680e">requests.patch()</a></td><td class="cell-IBk\">向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr id="cf64ff4d-9b30-4af5-9a86-9d2ba791a6d8"><td class="cell-title"><a href="https://www.notion.so/requests-delete-cf64ff4d9b304af59a869d2ba791a6d8">requests.delete()</a></td><td class="cell-IBk\">向HTML页面提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table></div><p id="212a60b5-757c-471c-92b3-64f6f1d1062c" class="">
</p><div id="22761afb-708b-4ad9-ad20-c9ee9fa75682" class="collection-content"><h4 class="collection-title">Http协议与request库</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>HTTP协议方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>Requests库方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>功能一致性</th></tr></thead><tbody><tr id="c406bf2d-a8a3-4d98-a53b-8787ebf1a5df"><td class="cell-title"><a href="https://www.notion.so/GET-c406bf2da8a34d98a53b8787ebf1a5df">GET</a></td><td class="cell-w/ZR">requests.get()</td><td class="cell-#X{%">一致</td></tr><tr id="49dc40d3-c091-41b6-b716-6d4440961225"><td class="cell-title"><a href="https://www.notion.so/HEAD-49dc40d3c09141b6b7166d4440961225">HEAD</a></td><td class="cell-w/ZR">requests.head()</td><td class="cell-#X{%">一致</td></tr><tr id="ddb2af93-44fa-45cb-a21c-af2f8886dcfe"><td class="cell-title"><a href="https://www.notion.so/POST-ddb2af9344fa45cba21caf2f8886dcfe">POST</a></td><td class="cell-w/ZR">requests.post()</td><td class="cell-#X{%">一致</td></tr><tr id="2d347f72-8537-444f-9722-c2f6eeb40c88"><td class="cell-title"><a href="https://www.notion.so/PUT-2d347f728537444f9722c2f6eeb40c88">PUT</a></td><td class="cell-w/ZR">requests.put()</td><td class="cell-#X{%">一致</td></tr><tr id="8c95c1ab-c01d-4cf9-a733-d0c739017a2a"><td class="cell-title"><a href="https://www.notion.so/PATCH-8c95c1abc01d4cf9a733d0c739017a2a">PATCH</a></td><td class="cell-w/ZR">requests.patch()</td><td class="cell-#X{%">一致</td></tr><tr id="7c8618df-277a-4e31-9bca-5cf41edba4e7"><td class="cell-title"><a href="https://www.notion.so/DELETE-7c8618df277a4e319bca5cf41edba4e7">DELETE</a></td><td class="cell-w/ZR">requests.delete()</td><td class="cell-#X{%">一致</td></tr></tbody></table></div><h3 id="f968494b-616b-4a59-9089-b832c9dd4494" class="">head()方法</h3><pre id="ef1751d9-2da3-475b-9b8d-7b0db13b34ba" class="code"><code>&gt;&gt;&gt;r=requests.head(&#x27;http://httpbin.org/get&#x27;)
&gt;&gt;&gt;r.headers
{&#x27;Content-Length&#x27;:&#x27;238&#x27;,&#x27;Access-Control-Allow-Origin&#x27;:&#x27;*&#x27;,
&#x27;Access-control-Allow-Credentials&#x27;:&#x27;true&#x27;,
&#x27;Content-Type&#x27;:&#x27;application/json&#x27;,
&#x27;Server&#x27;:‘nginx&#x27;,&#x27;Connection&#x27;:‘keep-alive&#x27;,
&#x27;Date&#x27;:&#x27;Sat,18 Feb 2017 12:07:44GMT&#x27;}
&gt;&gt;&gt;r.text
..</code></pre><h3 id="5cca22d8-35f2-4b3b-aa87-a2d5c190c78f" class="">post()方法</h3><pre id="163df19c-30af-443a-ad5c-75fc0918fc85" class="code"><code>#向URL POST一个字典自动编码为form（表单）
&gt;&gt;&gt;payload={&#x27;key1&#x27;:&#x27;value1&#x27;,&#x27;key2&#x27;:&#x27;value2&#x27;}
&gt;&gt;&gt;r=requests.post(&quot;http://httpbin.org/post&#x27;,data=payload)
&gt;&gt;&gt;print(r.text)
{..
    &quot;form&quot;:{
		    &quot;key2&quot;:&quot;value2&quot;,
				&quot;key1&quot;:&quot;value1&quot;
		},
}
<p>#向URL POST一个字符串自动编码为data<br>
&gt;&gt;&gt;r=requests.post('http://httpbin.org/post',data='ABC')<br>
&gt;&gt;&gt;print(r.text)<br>
{...<br>
&quot;data&quot;:&quot;ABC&quot;<br>
&quot;form&quot;:{},<br>
}</code></pre><h3 id="3b43caa0-d46b-474a-a1bb-bb2d3a24028b" class="">put()方法</h3><pre id="e4dbb950-e558-4cfd-b844-f84d06f9ea65" class="code"><code>&gt;&gt;&gt;payload={'key1':'value1','key2':'value2'} }<br>
&gt;&gt;&gt;r=requests.put('http://httpbin.org/put',data= payload)<br>
&gt;&gt;&gt;print(r.text)<br>
{...<br>
&quot;form&quot;:{<br>
&quot;key2&quot;:&quot;value2&quot;,<br>
&quot;key1&quot;:&quot;value1&quot;<br>
},<br>
}</code></pre><p id="1f26a908-6536-49f1-9691-519dce4e4527" class=""></p>
</p><h2 id="878f0e73-dea4-4ed3-8f92-b74648250046" class=""><strong>Requests库主要方法解析</strong></h2><div id="eedeea94-3a83-4ea5-97ae-bf3065c7316c" class="collection-content"><h4 class="collection-title">Requests库的7个主要方法</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th></tr></thead><tbody><tr id="587d5a71-27bc-4e9c-8b1f-c77d6f55dca3"><td class="cell-title"><a href="https://www.notion.so/requests-request-587d5a7127bc4e9c8b1fc77d6f55dca3">requests.request()</a></td><td class="cell-IBk\">构造一个请求，支撑以下各方法的基础方法</td></tr><tr id="d05c8da9-823c-417d-b1ca-6422f6150a45"><td class="cell-title"><a href="https://www.notion.so/requests-get-d05c8da9823c417db1ca6422f6150a45">requests.get()</a></td><td class="cell-IBk\">获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr id="a4e97704-c5e4-45d1-b13b-2a5380252f13"><td class="cell-title"><a href="https://www.notion.so/requests-head-a4e97704c5e445d1b13b2a5380252f13">requests.head()</a></td><td class="cell-IBk\">获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr id="82e2763a-4cf6-4a7b-809a-511c07e89cf1"><td class="cell-title"><a href="https://www.notion.so/requests-post-82e2763a4cf64a7b809a511c07e89cf1">requests.post()</a></td><td class="cell-IBk\">向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr id="00affac4-017d-4615-8e5d-a9672601fc7d"><td class="cell-title"><a href="https://www.notion.so/requests-put-00affac4017d46158e5da9672601fc7d">requests.put()</a></td><td class="cell-IBk\">向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr id="50fcd5c4-ddb9-4537-a741-4469c746de8c"><td class="cell-title"><a href="https://www.notion.so/requests-patch-50fcd5c4ddb94537a7414469c746de8c">requests.patch()</a></td><td class="cell-IBk\">向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr id="125842fc-625f-4b51-800a-9c0410fb38ef"><td class="cell-title"><a href="https://www.notion.so/requests-delete-125842fc625f4b51800a9c0410fb38ef">requests.delete()</a></td><td class="cell-IBk\">向HTML页面提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table></div><pre id="a293ff64-e4bf-45c2-909a-c266329cf798" class="code"><code>1.
requests.request(method,url,**kwargs)
<p>#method:请求方式，对应get/put/post等7种<br>
#url:拟获取页面的url链接<br>
#**kwargs:控制访问的参数，共13个<br>
#params:字典或字节序列，作为参数增加到url中<br>
#data:字典、字节序列或文件对象，作为request的内容<br>
#json:JSON格式的数据，作为Request的内容<br>
#headers:字典，HTTP定制头<br>
#cookies:字典或CookieJar，Request中的cookie<br>
#auth:元组，支持HTTP认证功能<br>
#files:字典类型，传输文件<br>
#timeout:设定超时时间，单位为s<br>
#防止对爬虫对逆追踪<br>
#proxies:字典类型，设定访问代理服务器，可以增加登录认证<br>
#高级功能<br>
#allow_redirects:True/False，默认True，重定向开关<br>
#stream:True/False,默认True,获取内容立即下载开关<br>
#verify:True/False,默认True，认证SSL证书开关<br>
#cert:本地SSL证书路径<br>
</code></pre><p id="4edb2325-aa50-4e3f-8136-2def57984730" class=""></p>
</p><pre id="e0e444b9-d120-4a3c-b145-e130c5e5a3a2" class="code"><code>2.
requests.get(url,params=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#params:url中的额外参数，字典或字节流格式，可选<br>
#**kwargs:12个控制访问的参数</code></pre><p id="31a44531-4742-435c-8b78-425d1b278556" class=""></p>
</p><pre id="a3ce2a72-d0dd-4467-8c45-b20edeee1efe" class="code"><code>3.
requests.head(url,**kwargs)
<p>#url:拟获取页面的url链接<br>
#**kwargs:13个控制访问的参数</code></pre><p id="d4196327-08c3-45a2-be65-20e164b5ca27" class=""></p>
</p><pre id="36e3f119-915b-4910-8b28-13e567bdb366" class="code"><code>4.
requests.post(url,data=None,json=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#data:字典、字节序列或文件，Request的内容<br>
#json:JSON格式的数据，Request的内容<br>
#**kwargs:11个控制访问的参数</code></pre><p id="9859bab8-8db7-4078-be23-9948883de951" class=""></p>
</p><pre id="196752f2-374c-4152-803f-82c2aafc9ef5" class="code"><code>5.
requests.put(url,data=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#data:字典、字节序列或文件，Request的内容<br>
#**kwargs:12个控制访问的参数</code></pre><p id="4d4d83f2-5503-4e21-9ce0-b8ba79b8cd45" class=""></p>
</p><pre id="3d2355e1-e325-4d6f-a22d-d0899f3370cb" class="code"><code>6.
requests.patch(url,data=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#data:字典、字节序列或文件，Request的内容<br>
#**kwargs:12个控制访问的参数</code></pre><p id="5fe63ebf-80ed-4a66-8b69-587eabc0865c" class=""></p>
</p><pre id="8d016794-e34e-4e00-a358-18ada2353519" class="code"><code>7.
requests.delete(url,**kwargs)
<p>#url:拟获取页面的url链接<br>
#**kwargs:13个控制访问的参数</code></pre><p id="03296821-71ff-46f6-8340-7a6116ed8095" class="">PS：不常用字段放在可选字段中</p><h2 id="02341130-7af1-4ce4-9719-d56ec798475e" class=""><strong>单元小结</strong></h2><p id="6b374a25-8025-4283-b440-f08e6b15ceb6" class="">网络连接有风险，异常处理很重要</p><h1 id="a536b84f-1451-422c-bf17-c948f82376ca" class=""><strong>单元2：网络爬虫的“盗亦有道”</strong></h1><h2 id="147abb13-1ae5-4833-8ba2-c38b6b4101a9" class=""><strong>网络爬虫引发的问题</strong></h2><h3 id="2d651fed-9e6e-4070-848d-ed2b0b932d4e" class="">网络爬虫的限制</h3><ul id="d1ca4eb4-6ed2-4e7c-9b4d-357e4c5a9e5f" class="bulleted-list"><li>来源审查：判断User-Agent进行限制<ul id="980b03fe-acd2-4a08-992c-9cefac28e0b9" class="bulleted-list"><li>检查来访HTTP协议头的User-Agent域，只响应浏览器或友好爬虫的访问。</li></ul></li></ul><ul id="b6708f60-ada9-4eb5-abc9-667197837be0" class="bulleted-list"><li>发布公告：Robots协议<ul id="de74546a-b463-41f3-ae9f-1e548109fb89" class="bulleted-list"><li>告知所有爬虫网站的爬取策略，要求爬虫遵守。</li></ul></li></ul><h2 id="01b16916-2620-4a40-bd7f-95a7ecf26c60" class=""><strong>Robots协议</strong></h2><p id="8303a8f9-f4c0-4ed4-b45e-6b9bab7ba227" class="">以京东（www.jd.com）为例访问其robots协议：<a href="http://www.jd.com/robots.txt">www.jd.com/robots.txt</a></p><figure id="0f9ec6f5-a4f2-48c2-9fc1-ba3ae480c337" class="image"><a href="Untitled/Untitled.png">&lt;img style=&quot;width:776px&quot; src=&quot;F:\7IT\GrideaDocument\images\第一周配图.png</p>
]]></summary>
        <content type="html"><![CDATA[<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>【第一周】网络爬虫之规则</title><style>
/* webkit printing magic: print all background colors */
html {
	-webkit-print-color-adjust: exact;
}
* {
	box-sizing: border-box;
	-webkit-print-color-adjust: exact;
}
<p>html,<br>
body {<br>
margin: 0;<br>
padding: 0;<br>
}<br>
@media only screen {<br>
body {<br>
margin: 2em auto;<br>
max-width: 900px;<br>
color: rgb(55, 53, 47);<br>
}<br>
}</p>
<p>body {<br>
line-height: 1.5;<br>
white-space: pre-wrap;<br>
}</p>
<p>a,<br>
a.visited {<br>
color: inherit;<br>
text-decoration: underline;<br>
}</p>
<p>.pdf-relative-link-path {<br>
font-size: 80%;<br>
color: #444;<br>
}</p>
<p>h1,<br>
h2,<br>
h3 {<br>
letter-spacing: -0.01em;<br>
line-height: 1.2;<br>
font-weight: 600;<br>
margin-bottom: 0;<br>
}</p>
<p>.page-title {<br>
font-size: 2.5rem;<br>
font-weight: 700;<br>
margin-top: 0;<br>
margin-bottom: 0.75em;<br>
}</p>
<p>h1 {<br>
font-size: 1.875rem;<br>
margin-top: 1.875rem;<br>
}</p>
<p>h2 {<br>
font-size: 1.5rem;<br>
margin-top: 1.5rem;<br>
}</p>
<p>h3 {<br>
font-size: 1.25rem;<br>
margin-top: 1.25rem;<br>
}</p>
<p>.source {<br>
border: 1px solid #ddd;<br>
border-radius: 3px;<br>
padding: 1.5em;<br>
word-break: break-all;<br>
}</p>
<p>.callout {<br>
border-radius: 3px;<br>
padding: 1rem;<br>
}</p>
<p>figure {<br>
margin: 1.25em 0;<br>
page-break-inside: avoid;<br>
}</p>
<p>figcaption {<br>
opacity: 0.5;<br>
font-size: 85%;<br>
margin-top: 0.5em;<br>
}</p>
<p>mark {<br>
background-color: transparent;<br>
}</p>
<p>.indented {<br>
padding-left: 1.5em;<br>
}</p>
<p>hr {<br>
background: transparent;<br>
display: block;<br>
width: 100%;<br>
height: 1px;<br>
visibility: visible;<br>
border: none;<br>
border-bottom: 1px solid rgba(55, 53, 47, 0.09);<br>
}</p>
<p>img {<br>
max-width: 100%;<br>
}</p>
<p>@media only print {<br>
img {<br>
max-height: 100vh;<br>
object-fit: contain;<br>
}<br>
}</p>
<p>@page {<br>
margin: 1in;<br>
}</p>
<p>.collection-content {<br>
font-size: 0.875rem;<br>
}</p>
<p>.column-list {<br>
display: flex;<br>
justify-content: space-between;<br>
}</p>
<p>.column {<br>
padding: 0 1em;<br>
}</p>
<p>.column:first-child {<br>
padding-left: 0;<br>
}</p>
<p>.column:last-child {<br>
padding-right: 0;<br>
}</p>
<p>.table_of_contents-item {<br>
display: block;<br>
font-size: 0.875rem;<br>
line-height: 1.3;<br>
padding: 0.125rem;<br>
}</p>
<p>.table_of_contents-indent-1 {<br>
margin-left: 1.5rem;<br>
}</p>
<p>.table_of_contents-indent-2 {<br>
margin-left: 3rem;<br>
}</p>
<p>.table_of_contents-indent-3 {<br>
margin-left: 4.5rem;<br>
}</p>
<p>.table_of_contents-link {<br>
text-decoration: none;<br>
opacity: 0.7;<br>
border-bottom: 1px solid rgba(55, 53, 47, 0.18);<br>
}</p>
<p>table,<br>
th,<br>
td {<br>
border: 1px solid rgba(55, 53, 47, 0.09);<br>
border-collapse: collapse;<br>
}</p>
<p>table {<br>
border-left: none;<br>
border-right: none;<br>
}</p>
<p>th,<br>
td {<br>
font-weight: normal;<br>
padding: 0.25em 0.5em;<br>
line-height: 1.5;<br>
min-height: 1.5em;<br>
text-align: left;<br>
}</p>
<p>th {<br>
color: rgba(55, 53, 47, 0.6);<br>
}</p>
<p>ol,<br>
ul {<br>
margin: 0;<br>
margin-block-start: 0.6em;<br>
margin-block-end: 0.6em;<br>
}</p>
<p>li &gt; ol:first-child,<br>
li &gt; ul:first-child {<br>
margin-block-start: 0.6em;<br>
}</p>
<p>ul &gt; li {<br>
list-style: disc;<br>
}</p>
<p>ul.to-do-list {<br>
text-indent: -1.7em;<br>
}</p>
<p>ul.to-do-list &gt; li {<br>
list-style: none;<br>
}</p>
<p>.to-do-children-checked {<br>
text-decoration: line-through;<br>
opacity: 0.375;<br>
}</p>
<p>ul.toggle &gt; li {<br>
list-style: none;<br>
}</p>
<p>ul {<br>
padding-inline-start: 1.7em;<br>
}</p>
<p>ul &gt; li {<br>
padding-left: 0.1em;<br>
}</p>
<p>ol {<br>
padding-inline-start: 1.6em;<br>
}</p>
<p>ol &gt; li {<br>
padding-left: 0.2em;<br>
}</p>
<p>.mono ol {<br>
padding-inline-start: 2em;<br>
}</p>
<p>.mono ol &gt; li {<br>
text-indent: -0.4em;<br>
}</p>
<p>.toggle {<br>
padding-inline-start: 0em;<br>
list-style-type: none;<br>
}</p>
<p>/* Indent toggle children */<br>
.toggle &gt; li &gt; details {<br>
padding-left: 1.7em;<br>
}</p>
<p>.toggle &gt; li &gt; details &gt; summary {<br>
margin-left: -1.1em;<br>
}</p>
<p>.selected-value {<br>
display: inline-block;<br>
padding: 0 0.5em;<br>
background: rgba(206, 205, 202, 0.5);<br>
border-radius: 3px;<br>
margin-right: 0.5em;<br>
margin-top: 0.3em;<br>
margin-bottom: 0.3em;<br>
white-space: nowrap;<br>
}</p>
<p>.collection-title {<br>
display: inline-block;<br>
margin-right: 1em;<br>
}</p>
<p>time {<br>
opacity: 0.5;<br>
}</p>
<p>.icon {<br>
display: inline-block;<br>
max-width: 1.2em;<br>
max-height: 1.2em;<br>
text-decoration: none;<br>
vertical-align: text-bottom;<br>
margin-right: 0.5em;<br>
}</p>
<p>img.icon {<br>
border-radius: 3px;<br>
}</p>
<p>.user-icon {<br>
width: 1.5em;<br>
height: 1.5em;<br>
border-radius: 100%;<br>
margin-right: 0.5rem;<br>
}</p>
<p>.user-icon-inner {<br>
font-size: 0.8em;<br>
}</p>
<p>.text-icon {<br>
border: 1px solid #000;<br>
text-align: center;<br>
}</p>
<p>.page-cover-image {<br>
display: block;<br>
object-fit: cover;<br>
width: 100%;<br>
height: 30vh;<br>
}</p>
<p>.page-header-icon {<br>
font-size: 3rem;<br>
margin-bottom: 1rem;<br>
}</p>
<p>.page-header-icon-with-cover {<br>
margin-top: -0.72em;<br>
margin-left: 0.07em;<br>
}</p>
<p>.page-header-icon img {<br>
border-radius: 3px;<br>
}</p>
<p>.link-to-page {<br>
margin: 1em 0;<br>
padding: 0;<br>
border: none;<br>
font-weight: 500;<br>
}</p>
<p>p &gt; .user {<br>
opacity: 0.5;<br>
}</p>
<p>td &gt; .user,<br>
td &gt; time {<br>
white-space: nowrap;<br>
}</p>
<p>input[type=&quot;checkbox&quot;] {<br>
transform: scale(1.5);<br>
margin-right: 0.6em;<br>
vertical-align: middle;<br>
}</p>
<p>p {<br>
margin-top: 0.5em;<br>
margin-bottom: 0.5em;<br>
}</p>
<p>.image {<br>
border: none;<br>
margin: 1.5em 0;<br>
padding: 0;<br>
border-radius: 0;<br>
text-align: center;<br>
}</p>
<p>.code,<br>
code {<br>
background: rgba(135, 131, 120, 0.15);<br>
border-radius: 3px;<br>
padding: 0.2em 0.4em;<br>
border-radius: 3px;<br>
font-size: 85%;<br>
tab-size: 2;<br>
}</p>
<p>code {<br>
color: #eb5757;<br>
}</p>
<p>.code {<br>
padding: 1.5em 1em;<br>
}</p>
<p>.code &gt; code {<br>
background: none;<br>
padding: 0;<br>
font-size: 100%;<br>
color: inherit;<br>
}</p>
<p>blockquote {<br>
font-size: 1.25em;<br>
margin: 1em 0;<br>
padding-left: 1em;<br>
border-left: 3px solid rgb(55, 53, 47);<br>
}</p>
<p>.bookmark {<br>
text-decoration: none;<br>
max-height: 8em;<br>
padding: 0;<br>
display: flex;<br>
width: 100%;<br>
align-items: stretch;<br>
}</p>
<p>.bookmark-title {<br>
font-size: 0.85em;<br>
overflow: hidden;<br>
text-overflow: ellipsis;<br>
height: 1.75em;<br>
white-space: nowrap;<br>
}</p>
<p>.bookmark-text {<br>
display: flex;<br>
flex-direction: column;<br>
}</p>
<p>.bookmark-info {<br>
flex: 4 1 180px;<br>
padding: 12px 14px 14px;<br>
display: flex;<br>
flex-direction: column;<br>
justify-content: space-between;<br>
}</p>
<p>.bookmark-image {<br>
width: 33%;<br>
flex: 1 1 180px;<br>
display: block;<br>
position: relative;<br>
object-fit: cover;<br>
border-radius: 1px;<br>
}</p>
<p>.bookmark-description {<br>
color: rgba(55, 53, 47, 0.6);<br>
font-size: 0.75em;<br>
overflow: hidden;<br>
max-height: 4.5em;<br>
word-break: break-word;<br>
}</p>
<p>.bookmark-href {<br>
font-size: 0.75em;<br>
margin-top: 0.25em;<br>
}</p>
<p>.sans { font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; }<br>
.code { font-family: &quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; }<br>
.serif { font-family: Lyon-Text, Georgia, YuMincho, &quot;Yu Mincho&quot;, &quot;Hiragino Mincho ProN&quot;, &quot;Hiragino Mincho Pro&quot;, &quot;Songti TC&quot;, &quot;Songti SC&quot;, &quot;SimSun&quot;, &quot;Nanum Myeongjo&quot;, NanumMyeongjo, Batang, serif; }<br>
.mono { font-family: iawriter-mono, Nitti, Menlo, Courier, monospace; }<br>
.pdf .sans { font-family: Inter, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC', 'Noto Sans CJK KR'; }</p>
<p>.pdf .code { font-family: Source Code Pro, &quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC', 'Noto Sans Mono CJK KR'; }</p>
<p>.pdf .serif { font-family: PT Serif, Lyon-Text, Georgia, YuMincho, &quot;Yu Mincho&quot;, &quot;Hiragino Mincho ProN&quot;, &quot;Hiragino Mincho Pro&quot;, &quot;Songti TC&quot;, &quot;Songti SC&quot;, &quot;SimSun&quot;, &quot;Nanum Myeongjo&quot;, NanumMyeongjo, Batang, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC', 'Noto Sans CJK KR'; }</p>
<p>.pdf .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC', 'Noto Sans Mono CJK KR'; }</p>
<p>.highlight-default {<br>
}<br>
.highlight-gray {<br>
color: rgb(155,154,151);<br>
}<br>
.highlight-brown {<br>
color: rgb(100,71,58);<br>
}<br>
.highlight-orange {<br>
color: rgb(217,115,13);<br>
}<br>
.highlight-yellow {<br>
color: rgb(223,171,1);<br>
}<br>
.highlight-teal {<br>
color: rgb(15,123,108);<br>
}<br>
.highlight-blue {<br>
color: rgb(11,110,153);<br>
}<br>
.highlight-purple {<br>
color: rgb(105,64,165);<br>
}<br>
.highlight-pink {<br>
color: rgb(173,26,114);<br>
}<br>
.highlight-red {<br>
color: rgb(224,62,62);<br>
}<br>
.highlight-gray_background {<br>
background: rgb(235,236,237);<br>
}<br>
.highlight-brown_background {<br>
background: rgb(233,229,227);<br>
}<br>
.highlight-orange_background {<br>
background: rgb(250,235,221);<br>
}<br>
.highlight-yellow_background {<br>
background: rgb(251,243,219);<br>
}<br>
.highlight-teal_background {<br>
background: rgb(221,237,234);<br>
}<br>
.highlight-blue_background {<br>
background: rgb(221,235,241);<br>
}<br>
.highlight-purple_background {<br>
background: rgb(234,228,242);<br>
}<br>
.highlight-pink_background {<br>
background: rgb(244,223,235);<br>
}<br>
.highlight-red_background {<br>
background: rgb(251,228,228);<br>
}<br>
.block-color-default {<br>
color: inherit;<br>
fill: inherit;<br>
}<br>
.block-color-gray {<br>
color: rgba(55, 53, 47, 0.6);<br>
fill: rgba(55, 53, 47, 0.6);<br>
}<br>
.block-color-brown {<br>
color: rgb(100,71,58);<br>
fill: rgb(100,71,58);<br>
}<br>
.block-color-orange {<br>
color: rgb(217,115,13);<br>
fill: rgb(217,115,13);<br>
}<br>
.block-color-yellow {<br>
color: rgb(223,171,1);<br>
fill: rgb(223,171,1);<br>
}<br>
.block-color-teal {<br>
color: rgb(15,123,108);<br>
fill: rgb(15,123,108);<br>
}<br>
.block-color-blue {<br>
color: rgb(11,110,153);<br>
fill: rgb(11,110,153);<br>
}<br>
.block-color-purple {<br>
color: rgb(105,64,165);<br>
fill: rgb(105,64,165);<br>
}<br>
.block-color-pink {<br>
color: rgb(173,26,114);<br>
fill: rgb(173,26,114);<br>
}<br>
.block-color-red {<br>
color: rgb(224,62,62);<br>
fill: rgb(224,62,62);<br>
}<br>
.block-color-gray_background {<br>
background: rgb(235,236,237);<br>
}<br>
.block-color-brown_background {<br>
background: rgb(233,229,227);<br>
}<br>
.block-color-orange_background {<br>
background: rgb(250,235,221);<br>
}<br>
.block-color-yellow_background {<br>
background: rgb(251,243,219);<br>
}<br>
.block-color-teal_background {<br>
background: rgb(221,237,234);<br>
}<br>
.block-color-blue_background {<br>
background: rgb(221,235,241);<br>
}<br>
.block-color-purple_background {<br>
background: rgb(234,228,242);<br>
}<br>
.block-color-pink_background {<br>
background: rgb(244,223,235);<br>
}<br>
.block-color-red_background {<br>
background: rgb(251,228,228);<br>
}<br>
.select-value-color-default { background-color: rgba(206,205,202,0.5); }<br>
.select-value-color-gray { background-color: rgba(155,154,151, 0.4); }<br>
.select-value-color-brown { background-color: rgba(140,46,0,0.2); }<br>
.select-value-color-orange { background-color: rgba(245,93,0,0.2); }<br>
.select-value-color-yellow { background-color: rgba(233,168,0,0.2); }<br>
.select-value-color-green { background-color: rgba(0,135,107,0.2); }<br>
.select-value-color-blue { background-color: rgba(0,120,223,0.2); }<br>
.select-value-color-purple { background-color: rgba(103,36,222,0.2); }<br>
.select-value-color-pink { background-color: rgba(221,0,129,0.2); }<br>
.select-value-color-red { background-color: rgba(255,0,26,0.2); }</p>
<p>.checkbox {<br>
display: inline-flex;<br>
vertical-align: text-bottom;<br>
width: 16;<br>
height: 16;<br>
background-size: 16px;<br>
margin-left: 2px;<br>
margin-right: 5px;<br>
}</p>
<p>.checkbox-on {<br>
background-image: url(&quot;data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22%2358A9D7%22%2F%3E%0A%3Cpath%20d%3D%22M6.71429%2012.2852L14%204.9995L12.7143%203.71436L6.71429%209.71378L3.28571%206.2831L2%207.57092L6.71429%2012.2852Z%22%20fill%3D%22white%22%2F%3E%0A%3C%2Fsvg%3E&quot;);<br>
}</p>
<p>.checkbox-off {<br>
background-image: url(&quot;data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%220.75%22%20y%3D%220.75%22%20width%3D%2214.5%22%20height%3D%2214.5%22%20fill%3D%22white%22%20stroke%3D%22%2336352F%22%20stroke-width%3D%221.5%22%2F%3E%0A%3C%2Fsvg%3E&quot;);<br>
}</p>
<p></style></head></p>
<body>
	<article id="20bb172b-49b9-4bec-b4d7-b3091cbf92a4" class="page sans">
		<header>
			<h1 class="page-title">【第一周】网络爬虫之规则</h1>
		</header>
		<div class="page-body"><h1 id="a2dc9639-39c7-4217-abba-527a6568116f" class=""><strong>单元1：Requests库入门</strong></h1><h2 id="0e3e2a88-effc-4008-920b-00e016cde78f" class="">安装</h2><pre id="553720b0-c1c5-4de4-8d44-0af3c5778b9f" class="code"><code>win+R cmd
pip install requsets</code></pre>
<p id="c1c4a2f5-1f69-4500-947e-aa7a3cee0a99" class="">测试安装成功</p><pre id="caf032a3-d1b5-47a0-8cec-ff65adc51be9" class="code"><code>import requests</code></pre><h2 id="f208b97d-ef66-4d3f-a2ff-f87e0dff9ec6" class=""><strong>get()方法</strong></h2><pre id="e5733d71-c902-4387-8b4c-74b4cddf56bb" class="code"><code>r = requests.get(url)#获得网页
#返回一个包含服务器资源的response对象
#构造一个向服务器请求资源的request对象</code></pre><p id="61c68d60-0b30-4be2-a541-0ff804a12ec2" class="">完整使用方法：</p><pre id="9ff9725a-b8f7-4f90-8a98-bb9272de1e91" class="code"><code>request.get(url,params=None,**kwargs)
#url:拟获取页面的url链接
#params:Url中的额外参数，字典或字节流格式，可选
#**kwargs:12个控制访问的参数</code></pre><div id="59c5ecc9-a3bd-484f-889f-8e0e98375dde" class="collection-content"><h4 class="collection-title">Response对象的属性</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>属性</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>具体说明</th></tr></thead><tbody><tr id="27ef4ac9-9337-4fae-8d67-704f2022a32a"><td class="cell-title"><a href="https://www.notion.so/r-status_code-27ef4ac993374fae8d67704f2022a32a">r.status_code</a></td><td class="cell-q&#x27;!\">Http请求的返回状态,200表示连接成功，404表示失败</td><td class="cell-P8)5">只有返回200，response其他属性才可用；404或其他某些原因出错将产生异常</td></tr><tr id="9c574611-6eee-4015-a7a7-394917e6940e"><td class="cell-title"><a href="https://www.notion.so/r-text-9c5746116eee4015a7a7394917e6940e">r.text</a></td><td class="cell-q&#x27;!\">Http响应内容的字符串形式,即，url对应的页面内容</td><td class="cell-P8)5"></td></tr><tr id="3db1b968-e1dd-433e-b00c-96623e8a6512"><td class="cell-title"><a href="https://www.notion.so/r-encoding-3db1b968e1dd433eb00c96623e8a6512">r.encoding</a></td><td class="cell-q&#x27;!\">从HTTP header中猜测的响应内容编码方式</td><td class="cell-P8)5">如果header中不存在charset，则认为编码为ISO-8859-1</td></tr><tr id="4822850a-46d4-4e51-b23d-6b1071b7f297"><td class="cell-title"><a href="https://www.notion.so/r-apparent_encoding-4822850a46d44e51b23d6b1071b7f297">r.apparent_encoding</a></td><td class="cell-q&#x27;!\">从内容中分析出的相应内容编码方式（备选编码方式）</td><td class="cell-P8)5">根据网页内容分析出的编码方式，更准确</td></tr><tr id="1ea1b18a-f684-4a94-b845-4b9d5681fa3a"><td class="cell-title"><a href="https://www.notion.so/r-content-1ea1b18af6844a94b8454b9d5681fa3a">r.content</a></td><td class="cell-q&#x27;!\">Http响应内容的二进制形式</td><td class="cell-P8)5"></td></tr></tbody></table></div><p id="aed2a0c8-7a8a-4b68-9cf8-459c0f2bd8b2" class="">
</p><h2 id="2ae66bda-ff9e-4e9a-a721-f9007b5f42b2" class=""><strong>爬取网页的通用代码框架</strong></h2><div id="7c6fc79a-e12f-4598-bced-c58b74b82355" class="collection-content"><h4 class="collection-title">理解requests库的异常</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>异常</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th></tr></thead><tbody><tr id="b6babd28-c362-4354-92a9-b3f2ea1e69e6"><td class="cell-title"><a href="https://www.notion.so/requests-ConnectionError-b6babd28c362435492a9b3f2ea1e69e6">requests.ConnectionError</a></td><td class="cell-nfco">网络连接错误异常，如DNS查询失败，拒绝连接等</td></tr><tr id="b918bb81-cddd-4316-94c9-a24b5f49434b"><td class="cell-title"><a href="https://www.notion.so/requests-HTTPError-b918bb81cddd431694c9a24b5f49434b">requests.HTTPError</a></td><td class="cell-nfco">Http错误异常</td></tr><tr id="2009f7c0-dbd6-4752-914d-bff8c84b36df"><td class="cell-title"><a href="https://www.notion.so/requests-URLRequired-2009f7c0dbd64752914dbff8c84b36df">requests.URLRequired</a></td><td class="cell-nfco">Url缺失异常</td></tr><tr id="b949d882-1281-4e38-84d3-55e6dc38842d"><td class="cell-title"><a href="https://www.notion.so/requests-TooManyRedirects-b949d88212814e3884d355e6dc38842d"> requests.TooManyRedirects</a></td><td class="cell-nfco">超过最大重定向次数，产生重定向异常</td></tr><tr id="c299c673-bf3d-4b97-9b6e-060fd4c1964e"><td class="cell-title"><a href="https://www.notion.so/requests-ConnectTimeout-c299c673bf3d4b979b6e060fd4c1964e"> requests.ConnectTimeout</a></td><td class="cell-nfco">连接远程服务器时超时异常</td></tr><tr id="05617fa0-28de-4c9c-8140-5ae1d7740c5f"><td class="cell-title"><a href="https://www.notion.so/requests-Timeout-05617fa028de4c9c81405ae1d7740c5f"> requests.Timeout</a></td><td class="cell-nfco"> 请求url超时产生超时异常</td></tr><tr id="17b8527a-72f3-44c4-9a8d-ccacdc7551eb"><td class="cell-title"><a href="https://www.notion.so/r-raise_for_status-17b8527a72f344c49a8dccacdc7551eb">r.raise_for_status()</a></td><td class="cell-nfco">如果不是200，产生异常requests.HTTPError</td></tr></tbody></table></div><pre id="bfcc1532-18a1-4d5e-a6a4-7a18a6654ef1" class="code"><code>#有效稳定的代码框架
import requests
<p>def getHTMLText(url):<br>
try:<br>
r = requests.get(url, timeout = 30)<br>
r.raise_for_status()#如果状态不是200，引发HTTPError异常<br>
r.encoding = r.apparent_encoding<br>
return r.text<br>
except:<br>
return &quot;error&quot;</p>
<p>if <strong>name</strong> == &quot;<strong>main</strong>&quot;:<br>
url = &quot;http://www.baidu.com&quot;<br>
print(getHTMLText(url))</code></pre><p id="b0039b9b-fc50-450f-92fb-a41bd2587b15" class=""></p>
</p><h2 id="6d14dd04-8053-41b6-a33c-cbac8760885a" class=""><strong>HTTP协议及Requests库方法</strong></h2><div id="6b982216-7aed-452d-8103-fb08a7e90067" class="collection-content"><h4 class="collection-title">Requests库的7个主要方法</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th></tr></thead><tbody><tr id="c176508e-9c2b-43ea-9511-81703f14710d"><td class="cell-title"><a href="https://www.notion.so/requests-request-c176508e9c2b43ea951181703f14710d">requests.request()</a></td><td class="cell-IBk\">构造一个请求，支撑以下各方法的基础方法</td></tr><tr id="213c954b-b663-4111-a8a2-e13bb6cf5939"><td class="cell-title"><a href="https://www.notion.so/requests-get-213c954bb6634111a8a2e13bb6cf5939">requests.get()</a></td><td class="cell-IBk\">获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr id="a5b8499e-7cca-45c3-b460-801127f397a9"><td class="cell-title"><a href="https://www.notion.so/requests-head-a5b8499e7cca45c3b460801127f397a9">requests.head()</a></td><td class="cell-IBk\">获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr id="79578cc6-5949-4e79-9030-7465012fdbd7"><td class="cell-title"><a href="https://www.notion.so/requests-post-79578cc659494e7990307465012fdbd7">requests.post()</a></td><td class="cell-IBk\">向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr id="ab173097-87e5-4452-86c6-d59861351372"><td class="cell-title"><a href="https://www.notion.so/requests-put-ab17309787e5445286c6d59861351372">requests.put()</a></td><td class="cell-IBk\">向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr id="ce9f0c4c-844a-4c07-b566-3ad0008d680e"><td class="cell-title"><a href="https://www.notion.so/requests-patch-ce9f0c4c844a4c07b5663ad0008d680e">requests.patch()</a></td><td class="cell-IBk\">向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr id="cf64ff4d-9b30-4af5-9a86-9d2ba791a6d8"><td class="cell-title"><a href="https://www.notion.so/requests-delete-cf64ff4d9b304af59a869d2ba791a6d8">requests.delete()</a></td><td class="cell-IBk\">向HTML页面提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table></div><p id="212a60b5-757c-471c-92b3-64f6f1d1062c" class="">
</p><div id="22761afb-708b-4ad9-ad20-c9ee9fa75682" class="collection-content"><h4 class="collection-title">Http协议与request库</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>HTTP协议方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>Requests库方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>功能一致性</th></tr></thead><tbody><tr id="c406bf2d-a8a3-4d98-a53b-8787ebf1a5df"><td class="cell-title"><a href="https://www.notion.so/GET-c406bf2da8a34d98a53b8787ebf1a5df">GET</a></td><td class="cell-w/ZR">requests.get()</td><td class="cell-#X{%">一致</td></tr><tr id="49dc40d3-c091-41b6-b716-6d4440961225"><td class="cell-title"><a href="https://www.notion.so/HEAD-49dc40d3c09141b6b7166d4440961225">HEAD</a></td><td class="cell-w/ZR">requests.head()</td><td class="cell-#X{%">一致</td></tr><tr id="ddb2af93-44fa-45cb-a21c-af2f8886dcfe"><td class="cell-title"><a href="https://www.notion.so/POST-ddb2af9344fa45cba21caf2f8886dcfe">POST</a></td><td class="cell-w/ZR">requests.post()</td><td class="cell-#X{%">一致</td></tr><tr id="2d347f72-8537-444f-9722-c2f6eeb40c88"><td class="cell-title"><a href="https://www.notion.so/PUT-2d347f728537444f9722c2f6eeb40c88">PUT</a></td><td class="cell-w/ZR">requests.put()</td><td class="cell-#X{%">一致</td></tr><tr id="8c95c1ab-c01d-4cf9-a733-d0c739017a2a"><td class="cell-title"><a href="https://www.notion.so/PATCH-8c95c1abc01d4cf9a733d0c739017a2a">PATCH</a></td><td class="cell-w/ZR">requests.patch()</td><td class="cell-#X{%">一致</td></tr><tr id="7c8618df-277a-4e31-9bca-5cf41edba4e7"><td class="cell-title"><a href="https://www.notion.so/DELETE-7c8618df277a4e319bca5cf41edba4e7">DELETE</a></td><td class="cell-w/ZR">requests.delete()</td><td class="cell-#X{%">一致</td></tr></tbody></table></div><h3 id="f968494b-616b-4a59-9089-b832c9dd4494" class="">head()方法</h3><pre id="ef1751d9-2da3-475b-9b8d-7b0db13b34ba" class="code"><code>&gt;&gt;&gt;r=requests.head(&#x27;http://httpbin.org/get&#x27;)
&gt;&gt;&gt;r.headers
{&#x27;Content-Length&#x27;:&#x27;238&#x27;,&#x27;Access-Control-Allow-Origin&#x27;:&#x27;*&#x27;,
&#x27;Access-control-Allow-Credentials&#x27;:&#x27;true&#x27;,
&#x27;Content-Type&#x27;:&#x27;application/json&#x27;,
&#x27;Server&#x27;:‘nginx&#x27;,&#x27;Connection&#x27;:‘keep-alive&#x27;,
&#x27;Date&#x27;:&#x27;Sat,18 Feb 2017 12:07:44GMT&#x27;}
&gt;&gt;&gt;r.text
..</code></pre><h3 id="5cca22d8-35f2-4b3b-aa87-a2d5c190c78f" class="">post()方法</h3><pre id="163df19c-30af-443a-ad5c-75fc0918fc85" class="code"><code>#向URL POST一个字典自动编码为form（表单）
&gt;&gt;&gt;payload={&#x27;key1&#x27;:&#x27;value1&#x27;,&#x27;key2&#x27;:&#x27;value2&#x27;}
&gt;&gt;&gt;r=requests.post(&quot;http://httpbin.org/post&#x27;,data=payload)
&gt;&gt;&gt;print(r.text)
{..
    &quot;form&quot;:{
		    &quot;key2&quot;:&quot;value2&quot;,
				&quot;key1&quot;:&quot;value1&quot;
		},
}
<p>#向URL POST一个字符串自动编码为data<br>
&gt;&gt;&gt;r=requests.post('http://httpbin.org/post',data='ABC')<br>
&gt;&gt;&gt;print(r.text)<br>
{...<br>
&quot;data&quot;:&quot;ABC&quot;<br>
&quot;form&quot;:{},<br>
}</code></pre><h3 id="3b43caa0-d46b-474a-a1bb-bb2d3a24028b" class="">put()方法</h3><pre id="e4dbb950-e558-4cfd-b844-f84d06f9ea65" class="code"><code>&gt;&gt;&gt;payload={'key1':'value1','key2':'value2'} }<br>
&gt;&gt;&gt;r=requests.put('http://httpbin.org/put',data= payload)<br>
&gt;&gt;&gt;print(r.text)<br>
{...<br>
&quot;form&quot;:{<br>
&quot;key2&quot;:&quot;value2&quot;,<br>
&quot;key1&quot;:&quot;value1&quot;<br>
},<br>
}</code></pre><p id="1f26a908-6536-49f1-9691-519dce4e4527" class=""></p>
</p><h2 id="878f0e73-dea4-4ed3-8f92-b74648250046" class=""><strong>Requests库主要方法解析</strong></h2><div id="eedeea94-3a83-4ea5-97ae-bf3065c7316c" class="collection-content"><h4 class="collection-title">Requests库的7个主要方法</h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>方法</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>说明</th></tr></thead><tbody><tr id="587d5a71-27bc-4e9c-8b1f-c77d6f55dca3"><td class="cell-title"><a href="https://www.notion.so/requests-request-587d5a7127bc4e9c8b1fc77d6f55dca3">requests.request()</a></td><td class="cell-IBk\">构造一个请求，支撑以下各方法的基础方法</td></tr><tr id="d05c8da9-823c-417d-b1ca-6422f6150a45"><td class="cell-title"><a href="https://www.notion.so/requests-get-d05c8da9823c417db1ca6422f6150a45">requests.get()</a></td><td class="cell-IBk\">获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr id="a4e97704-c5e4-45d1-b13b-2a5380252f13"><td class="cell-title"><a href="https://www.notion.so/requests-head-a4e97704c5e445d1b13b2a5380252f13">requests.head()</a></td><td class="cell-IBk\">获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr id="82e2763a-4cf6-4a7b-809a-511c07e89cf1"><td class="cell-title"><a href="https://www.notion.so/requests-post-82e2763a4cf64a7b809a511c07e89cf1">requests.post()</a></td><td class="cell-IBk\">向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr id="00affac4-017d-4615-8e5d-a9672601fc7d"><td class="cell-title"><a href="https://www.notion.so/requests-put-00affac4017d46158e5da9672601fc7d">requests.put()</a></td><td class="cell-IBk\">向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr id="50fcd5c4-ddb9-4537-a741-4469c746de8c"><td class="cell-title"><a href="https://www.notion.so/requests-patch-50fcd5c4ddb94537a7414469c746de8c">requests.patch()</a></td><td class="cell-IBk\">向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr id="125842fc-625f-4b51-800a-9c0410fb38ef"><td class="cell-title"><a href="https://www.notion.so/requests-delete-125842fc625f4b51800a9c0410fb38ef">requests.delete()</a></td><td class="cell-IBk\">向HTML页面提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table></div><pre id="a293ff64-e4bf-45c2-909a-c266329cf798" class="code"><code>1.
requests.request(method,url,**kwargs)
<p>#method:请求方式，对应get/put/post等7种<br>
#url:拟获取页面的url链接<br>
#**kwargs:控制访问的参数，共13个<br>
#params:字典或字节序列，作为参数增加到url中<br>
#data:字典、字节序列或文件对象，作为request的内容<br>
#json:JSON格式的数据，作为Request的内容<br>
#headers:字典，HTTP定制头<br>
#cookies:字典或CookieJar，Request中的cookie<br>
#auth:元组，支持HTTP认证功能<br>
#files:字典类型，传输文件<br>
#timeout:设定超时时间，单位为s<br>
#防止对爬虫对逆追踪<br>
#proxies:字典类型，设定访问代理服务器，可以增加登录认证<br>
#高级功能<br>
#allow_redirects:True/False，默认True，重定向开关<br>
#stream:True/False,默认True,获取内容立即下载开关<br>
#verify:True/False,默认True，认证SSL证书开关<br>
#cert:本地SSL证书路径<br>
</code></pre><p id="4edb2325-aa50-4e3f-8136-2def57984730" class=""></p>
</p><pre id="e0e444b9-d120-4a3c-b145-e130c5e5a3a2" class="code"><code>2.
requests.get(url,params=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#params:url中的额外参数，字典或字节流格式，可选<br>
#**kwargs:12个控制访问的参数</code></pre><p id="31a44531-4742-435c-8b78-425d1b278556" class=""></p>
</p><pre id="a3ce2a72-d0dd-4467-8c45-b20edeee1efe" class="code"><code>3.
requests.head(url,**kwargs)
<p>#url:拟获取页面的url链接<br>
#**kwargs:13个控制访问的参数</code></pre><p id="d4196327-08c3-45a2-be65-20e164b5ca27" class=""></p>
</p><pre id="36e3f119-915b-4910-8b28-13e567bdb366" class="code"><code>4.
requests.post(url,data=None,json=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#data:字典、字节序列或文件，Request的内容<br>
#json:JSON格式的数据，Request的内容<br>
#**kwargs:11个控制访问的参数</code></pre><p id="9859bab8-8db7-4078-be23-9948883de951" class=""></p>
</p><pre id="196752f2-374c-4152-803f-82c2aafc9ef5" class="code"><code>5.
requests.put(url,data=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#data:字典、字节序列或文件，Request的内容<br>
#**kwargs:12个控制访问的参数</code></pre><p id="4d4d83f2-5503-4e21-9ce0-b8ba79b8cd45" class=""></p>
</p><pre id="3d2355e1-e325-4d6f-a22d-d0899f3370cb" class="code"><code>6.
requests.patch(url,data=None,**kwargs)
<p>#url:拟获取页面的url链接<br>
#data:字典、字节序列或文件，Request的内容<br>
#**kwargs:12个控制访问的参数</code></pre><p id="5fe63ebf-80ed-4a66-8b69-587eabc0865c" class=""></p>
</p><pre id="8d016794-e34e-4e00-a358-18ada2353519" class="code"><code>7.
requests.delete(url,**kwargs)
<p>#url:拟获取页面的url链接<br>
#**kwargs:13个控制访问的参数</code></pre><p id="03296821-71ff-46f6-8340-7a6116ed8095" class="">PS：不常用字段放在可选字段中</p><h2 id="02341130-7af1-4ce4-9719-d56ec798475e" class=""><strong>单元小结</strong></h2><p id="6b374a25-8025-4283-b440-f08e6b15ceb6" class="">网络连接有风险，异常处理很重要</p><h1 id="a536b84f-1451-422c-bf17-c948f82376ca" class=""><strong>单元2：网络爬虫的“盗亦有道”</strong></h1><h2 id="147abb13-1ae5-4833-8ba2-c38b6b4101a9" class=""><strong>网络爬虫引发的问题</strong></h2><h3 id="2d651fed-9e6e-4070-848d-ed2b0b932d4e" class="">网络爬虫的限制</h3><ul id="d1ca4eb4-6ed2-4e7c-9b4d-357e4c5a9e5f" class="bulleted-list"><li>来源审查：判断User-Agent进行限制<ul id="980b03fe-acd2-4a08-992c-9cefac28e0b9" class="bulleted-list"><li>检查来访HTTP协议头的User-Agent域，只响应浏览器或友好爬虫的访问。</li></ul></li></ul><ul id="b6708f60-ada9-4eb5-abc9-667197837be0" class="bulleted-list"><li>发布公告：Robots协议<ul id="de74546a-b463-41f3-ae9f-1e548109fb89" class="bulleted-list"><li>告知所有爬虫网站的爬取策略，要求爬虫遵守。</li></ul></li></ul><h2 id="01b16916-2620-4a40-bd7f-95a7ecf26c60" class=""><strong>Robots协议</strong></h2><p id="8303a8f9-f4c0-4ed4-b45e-6b9bab7ba227" class="">以京东（www.jd.com）为例访问其robots协议：<a href="http://www.jd.com/robots.txt">www.jd.com/robots.txt</a></p><figure id="0f9ec6f5-a4f2-48c2-9fc1-ba3ae480c337" class="image"><a href="Untitled/Untitled.png">&lt;img style=&quot;width:776px&quot; src=&quot;F:\7IT\GrideaDocument\images\第一周配图.png</p>
<!-- more -->
<p>&quot;/&gt;</a></figure><h3 id="b0c643da-19e8-49ea-bf15-fc94a882b7df" class="">Robots协议基本语法</h3><p id="cf45cb4e-6609-49f0-ae6c-eb2937c20ef0" class="">“#” 表示注释，“*”代表所有，“/”代表根目录</p><h2 id="1651d76b-8e98-42a8-bdad-192739400def" class=""><strong>Robots协议的遵守方式</strong></h2><h3 id="89d79c83-78bc-4275-a297-eae648bef9d1" class="">Robots协议的使用</h3><ul id="196dc336-397f-4b39-8465-1b5ca3b39356" class="bulleted-list"><li>网络爬虫：自动或人工识别robots.txt，再进行内容爬取。</li></ul><ul id="cfe6c7ae-1617-4efe-92da-4d095b81489b" class="bulleted-list"><li>约束性：Robots协议是建议但非约束性，网络爬虫可以不遵守，但存在法律风险。</li></ul><h3 id="756e9b0f-117f-43f3-8629-3b31e4e9d8d5" class="">对Robots协议的理解</h3><div id="e246ad3b-4476-4d41-a0ea-3d1b7b6bb3b5" class="collection-content"><h4 class="collection-title"></h4><table class="collection-content"><thead><tr><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesTitle"><path d="M7.73943662,8.6971831 C7.77640845,8.7834507 7.81338028,8.8943662 7.81338028,9.00528169 C7.81338028,9.49823944 7.40669014,9.89260563 6.91373239,9.89260563 C6.53169014,9.89260563 6.19894366,9.64612676 6.08802817,9.30105634 L5.75528169,8.33978873 L2.05809859,8.33978873 L1.72535211,9.30105634 C1.61443662,9.64612676 1.2693662,9.89260563 0.887323944,9.89260563 C0.394366197,9.89260563 0,9.49823944 0,9.00528169 C0,8.8943662 0.0246478873,8.7834507 0.0616197183,8.6971831 L2.46478873,2.48591549 C2.68661972,1.90669014 3.24119718,1.5 3.90669014,1.5 C4.55985915,1.5 5.12676056,1.90669014 5.34859155,2.48591549 L7.73943662,8.6971831 Z M2.60035211,6.82394366 L5.21302817,6.82394366 L3.90669014,3.10211268 L2.60035211,6.82394366 Z M11.3996479,3.70598592 C12.7552817,3.70598592 14,4.24823944 14,5.96126761 L14,9.07922535 C14,9.52288732 13.6549296,9.89260563 13.2112676,9.89260563 C12.8169014,9.89260563 12.471831,9.59683099 12.4225352,9.19014085 C12.028169,9.6584507 11.3257042,9.95422535 10.5492958,9.95422535 C9.60035211,9.95422535 8.47887324,9.31338028 8.47887324,7.98239437 C8.47887324,6.58978873 9.60035211,6.08450704 10.5492958,6.08450704 C11.3380282,6.08450704 12.040493,6.33098592 12.4348592,6.81161972 L12.4348592,5.98591549 C12.4348592,5.38204225 11.9172535,4.98767606 11.1285211,4.98767606 C10.6602113,4.98767606 10.2411972,5.11091549 9.80985915,5.38204225 C9.72359155,5.43133803 9.61267606,5.46830986 9.50176056,5.46830986 C9.18133803,5.46830986 8.91021127,5.1971831 8.91021127,4.86443662 C8.91021127,4.64260563 9.0334507,4.44542254 9.19366197,4.34683099 C9.87147887,3.90316901 10.6232394,3.70598592 11.3996479,3.70598592 Z M11.1778169,8.8943662 C11.6830986,8.8943662 12.1760563,8.72183099 12.4348592,8.37676056 L12.4348592,7.63732394 C12.1760563,7.29225352 11.6830986,7.11971831 11.1778169,7.11971831 C10.5616197,7.11971831 10.056338,7.45246479 10.056338,8.0193662 C10.056338,8.57394366 10.5616197,8.8943662 11.1778169,8.8943662 Z M0.65625,11.125 L13.34375,11.125 C13.7061869,11.125 14,11.4188131 14,11.78125 C14,12.1436869 13.7061869,12.4375 13.34375,12.4375 L0.65625,12.4375 C0.293813133,12.4375 4.43857149e-17,12.1436869 0,11.78125 C-4.43857149e-17,11.4188131 0.293813133,11.125 0.65625,11.125 Z"></path></svg></span>1</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>2</th><th><span class="icon property-icon"><svg viewBox="0 0 14 14" style="width:14px;height:14px;display:block;fill:rgba(55, 53, 47, 0.4);flex-shrink:0;-webkit-backface-visibility:hidden" class="typesText"><path d="M7,4.56818 C7,4.29204 6.77614,4.06818 6.5,4.06818 L0.5,4.06818 C0.223858,4.06818 0,4.29204 0,4.56818 L0,5.61364 C0,5.88978 0.223858,6.11364 0.5,6.11364 L6.5,6.11364 C6.77614,6.11364 7,5.88978 7,5.61364 L7,4.56818 Z M0.5,1 C0.223858,1 0,1.223858 0,1.5 L0,2.54545 C0,2.8216 0.223858,3.04545 0.5,3.04545 L12.5,3.04545 C12.7761,3.04545 13,2.8216 13,2.54545 L13,1.5 C13,1.223858 12.7761,1 12.5,1 L0.5,1 Z M0,8.68182 C0,8.95796 0.223858,9.18182 0.5,9.18182 L11.5,9.18182 C11.7761,9.18182 12,8.95796 12,8.68182 L12,7.63636 C12,7.36022 11.7761,7.13636 11.5,7.13636 L0.5,7.13636 C0.223858,7.13636 0,7.36022 0,7.63636 L0,8.68182 Z M0,11.75 C0,12.0261 0.223858,12.25 0.5,12.25 L9.5,12.25 C9.77614,12.25 10,12.0261 10,11.75 L10,10.70455 C10,10.4284 9.77614,10.20455 9.5,10.20455 L0.5,10.20455 C0.223858,10.20455 0,10.4284 0,10.70455 L0,11.75 Z"></path></svg></span>3</th></tr></thead><tbody><tr id="45ca539f-5fa2-41d6-9032-713b8636e23a"><td class="cell-title"><a href="https://www.notion.so/45ca539f5fa241d69032713b8636e23a">访问量很小：可以遵守</a></td><td class="cell-97}Y">非商业且偶尔：建议遵守</td><td class="cell-&#x27;/&amp;]">必须遵守</td></tr><tr id="fc3493aa-80d9-4a86-8170-32ed90ed72fe"><td class="cell-title"><a href="https://www.notion.so/fc3493aa80d94a86817032ed90ed72fe">访问量较大：建议遵守 </a></td><td class="cell-97}Y">商业利益：必须遵守</td><td class="cell-&#x27;/&amp;]">必须遵守</td></tr><tr id="d87c9872-0049-4af5-8242-3af510efdbbf"><td class="cell-title"><a href="https://www.notion.so/d87c987200494af582423af510efdbbf">爬取网页   玩转网页</a></td><td class="cell-97}Y">爬取网站   爬取系列网站</td><td class="cell-&#x27;/&amp;]">爬取全网</td></tr></tbody></table></div><h1 id="f17c92f3-4b9f-45ae-81d6-c7b7936d8b79" class=""><strong>单元3：Requests库网络爬虫实战（5个实例）</strong></h1><h2 id="93078525-e043-4b9f-83af-d304eebfedf7" class=""><strong>实例1：京东商品页面的爬取</strong></h2><pre id="81ebebd2-d180-4400-a617-0dfee0da85da" class="code"><code>import requests<br>
url = &quot;https://item.jd.com/6449103.html&quot;<br>
try:<br>
r = requests.get(url, timeout = 30)<br>
r.raise_for_status()#如果状态不是200，引发HTTPError异常<br>
r.encoding = r.apparent_encoding print(r.text[:1000])<br>
except:<br>
print(&quot;error&quot;)</code></pre><p id="31114e9c-9c81-4999-8da8-4bcb484b8607" class=""></p>
</p><h2 id="85ac7b80-8313-41a7-9518-c2041b4b8afa" class=""><strong>实例2：亚马逊商品页面的爬取</strong></h2><pre id="7d2374c2-551c-4de1-bcb9-d09d80b473a8" class="code"><code>#初写代码
import requests
url = &quot;https://www.amazon.cn/dp/B07CM2DX6J/ref=sr_1_2?ie=UTF8&amp;qid=1549169407&amp;sr=8-2&amp;keywords=%E7%B4%A2%E5%B0%BC6300%E5%BE%AE%E5%8D%95&quot;
r = requests.get(url)
r.raise_for_status
&#x27;&#x27;&#x27;
out：
&lt;bound method Response.raise_for_status of &lt;Response [503]&gt;&gt;
&#x27;&#x27;&#x27;
#在加上两行代码
r.encoding = r.apparent_encoding
r.request.headers
&#x27;&#x27;&#x27;
out：
{&#x27;User-Agent&#x27;: &#x27;python-requests/2.14.2&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept&#x27;: &#x27;*/*&#x27;, &#x27;Connection&#x27;: &#x27;keep-alive&#x27;}
!!!!!&#x27;User-Agent&#x27;: &#x27;python-requests/2.14.2&#x27;!!!!!
&#x27;&#x27;&#x27;</code></pre><pre id="f7438a68-6789-4bd2-9c5f-8b85b77a443a" class="code"><code>#完整代码
import requests
url = &quot;https://www.amazon.cn/dp/B07CM2DX6J/ref=sr_1_2?ie=UTF8&amp;qid=1549169407&amp;sr=8-2&amp;keywords=%E7%B4%A2%E5%B0%BC6300%E5%BE%AE%E5%8D%95&quot;
try: 
		kv = {&#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;} 
		r = requests.get(url,headers = kv) 
		r.raise_for_status()#如果状态不是200，引发HTTPError异常 
		r.encoding = r.apparent_encoding print(r.text[:2000])
except: 
		print(&quot;error&quot;)</code></pre><p id="caaee5c1-306c-475d-a4d4-9dca71d12c34" class="">
</p><h2 id="2dfb79b7-df05-4898-a7f6-07fda91eb4b2" class=""><strong>实例3：百度/360搜索关键词提交</strong></h2><h3 id="5b2233fe-15e8-4c04-9493-738bbcf56bb9" class="">搜索引擎关键词提交接口</h3><p id="d1464164-6b78-4fb4-b7d1-9ddf9032ac80" class="">百度的关键词接口：<a href="http://www.baidu.com/s?wd=keyword360%E7%9A%84%E5%85%B3%E9%94%AE%E8%AF%8D%E6%8E%A5%E5%8F%A3%EF%BC%9Ahttp://www.so.com/s?q=keyword">http://www.baidu.com/s?wd=keyword</a></p><p id="e80d780c-9102-4a04-9e9e-9895f6c00ba9" class="">360的关键词接口：<a href="http://www.baidu.com/s?wd=keyword360%E7%9A%84%E5%85%B3%E9%94%AE%E8%AF%8D%E6%8E%A5%E5%8F%A3%EF%BC%9Ahttp://www.so.com/s?q=keyword">http://www.so.com/s?q=keyword</a></p><pre id="21c506a5-e1ff-4c96-a455-5478e6634373" class="code"><code>#初写代码
import requests
kv = {&#x27;wd&#x27;:&#x27;python&#x27;}#构造键值对
url = &quot;http://www.baidu.com/s&quot;
r = requests.get(url,params = kv)
r.status_code
#Out[1]:200
r.request.url
#Out[2]:&#x27;http:www.baidu.com/s?wd=python&#x27;
len(r.text)
#Out[3]:430022 #430K左右</code></pre><pre id="bb5f6ba3-9d88-4a54-aa40-4d52c2e71fa7" class="code"><code>#完整代码
import requests
keyword = &quot;Python&quot;
try: 
		kv = {&#x27;wd&#x27;:keyword} 
		url = &quot;http://www.baidu.com/s&quot; 
		r = requests.get(url,params = kv) 
		print(r.request.url) 
		r.raise_for_status() 
		print(len(r.text))
except: 
		print(&quot;error&quot;)</code></pre><h2 id="fd46cb5e-9181-40ed-aa47-1889fdd2ccda" class=""><strong>实例4：网络图片对爬取和存储</strong></h2><pre id="a971cec7-c628-4605-bcbc-c1116d09ff1a" class="code"><code>#初写代码
import requests
path = &quot;F:/7IT/JupyterNotebook/requests小实例/photo/abc.jpg&quot;
url = &quot;http://image.nationalgeographic.com.cn/2017/0211/20170211061910157.jpg&quot;
r = requests.get(url)
r.raise_for_status
#二进制存储
with open(path, &#x27;wb&#x27;) as f: 
		f.write(r.content) 
		f.close()</code></pre><p id="07363b06-b624-494c-b553-8ce22cd6444a" class="">
</p><pre id="5ea4722c-fa93-4ace-a00f-23dafd43db9e" class="code"><code>#完整代码
import requests
import os
url = &quot;http://image.nationalgeographic.com.cn/2017/0211/20170211061910157.jpg&quot;
root = &quot;F://7IT//JupyterNotebook//requests小实例//photo//&quot;
path = root + url.split(&#x27;/&#x27;)[-1]
try: 
		if not os.path.exists(root):#检查路径是否存在 
				os.mkdir(root)#创建目录 
		if not os.path.exists(path): 
				r = requests.get(url) 
				with open(path, &#x27;wb&#x27;) as f: 
						f.write(r.content) 
						f.close() 
						print(&quot;sucessfully save!&quot;) 
		else: print(&quot;file exits&quot;)
except: 
		print(&quot;error&quot;)</code></pre><h2 id="1660480f-5e49-4761-a52b-e1b8a72fc146" class=""><strong>实例5：IP地址归属地的自动查询</strong></h2><pre id="0744f947-04ca-4572-b1fa-f25eecbce7ec" class="code"><code>#初写代码
import requests
url = &quot;http://www.ip138.com/ips138.asp?ip=&quot;
r = requests.get(url + &#x27;202.204.80.112&#x27;)
r.status_code
r.encoding = r.apparent_encoding
r.text[-500:]#检测数据时若无限制，会导致无效，尽量对text有所限制</code></pre><p id="c07e21f2-46d6-427b-a4f4-5af3dff2b54c" class="">
</p><pre id="028c1cbf-c9cd-44b7-8c59-9488433a6411" class="code"><code>#完整代码
import requests
url = &quot;http://www.ip138.com/ips138.asp?ip=&quot;
try: r = requests.get(url + &#x27;202.204.80.112&#x27;) r.raise_for_status() r.encoding = r.apparent_encoding print(r.text[-500:])
except: print(&quot;errror&quot;)</code></pre></div></article></body></html>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[20200322分享]]></title>
        <id>https://Just7chambray.github.io/post/20200322Excerpt</id>
        <link href="https://Just7chambray.github.io/post/20200322Excerpt">
        </link>
        <updated>2020-03-22T02:41:22.000Z</updated>
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=499675131&auto=1&height=66" ></iframe>
<blockquote>
<p>大风吹起来了<br>
吹的云也在飞扬<br>
我的微风啊<br>
震撼全国<br>
在这样的日子里<br>
我回到了故乡<br>
勇猛的将士怎样才能为我所用<br>
镇守四方<br>
今天的快乐不能忘记<br>
人生的乐趣还没有享尽<br>
人欢乐时常常抱怨他来得太晚<br>
但岁月依然流逝<br>
就想飞一样<br>
为什么要自寻烦恼<br>
使我心里忧愁悲伤呢<br>
初春的阳光驱走了寒冬的残风<br>
新春的气息代替了前段时间的寒冷<br>
池塘边长出了嫩绿的草<br>
云中柳树上鸣叫的飞禽<br>
也不一样了<br>
飞来峰上有座高达千寻的宝塔<br>
听说了那里鸡鸣时分可以看到旭日东升。<br>
我不怕飘浮的云遮住我的视线，<br>
只因为如今的我已经站在了最高的地方。</p>
</blockquote>
<p>《大风歌》[汉]刘邦<br>
大风起兮云飞扬，<br>
威加海内兮归故乡，<br>
安得猛士兮守四方。</p>
<p>《秋风辞》(节选) [汉]刘彻<br>
欢乐极兮哀情多，<br>
少壮几时兮耐老何!</p>
<p>《大墙上蒿行》（节选）[魏晋]曹丕<br>
今日乐，不可忘，乐未央。<br>
为乐常苦迟，岁月逝，忽若飞。<br>
何为自苦，使我心悲。</p>
<p>《登池上楼》（节选）[南朝]谢灵运<br>
初景革绪风，新阳故改阴。<br>
池塘生春草，园柳变鸣禽。</p>
<p>《登飞来峰》[宋]王安石<br>
飞来峰上千寻塔，闻说鸡鸣见日升。<br>
不畏浮云遮望眼，自缘身在最高层。</p>
]]></content>
    </entry>
</feed>