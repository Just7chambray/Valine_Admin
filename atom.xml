<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Just7chambray.github.io</id>
    <title>吴言吴语</title>
    <updated>2021-03-26T13:20:41.766Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Just7chambray.github.io"/>
    <link rel="self" href="https://Just7chambray.github.io/atom.xml"/>
    <subtitle>栖迟於一丘，则天下不易其乐。</subtitle>
    <logo>https://Just7chambray.github.io/images/avatar.png</logo>
    <icon>https://Just7chambray.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 吴言吴语</rights>
    <entry>
        <title type="html"><![CDATA[三月随想]]></title>
        <id>https://Just7chambray.github.io/post/202103/</id>
        <link href="https://Just7chambray.github.io/post/202103/">
        </link>
        <updated>2021-03-26T11:30:55.000Z</updated>
        <summary type="html"><![CDATA[<iframe allow="autoplay *; encrypted-media *; fullscreen *" frameborder="0" height="150" style="width:100%;max-width:660px;overflow:hidden;background:transparent;" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation" src="https://embed.music.apple.com/cn/album/%E6%8B%A5%E6%8A%B1-%E7%94%B5%E8%A7%86%E5%89%A7-%E6%83%B3%E8%A7%81%E4%BD%A0-%E6%8F%92%E6%9B%B2/1509601790?i=1509601798"></iframe>
<p>三月随想，既有过去，也有现在，还有将来。</p>
]]></summary>
        <content type="html"><![CDATA[<iframe allow="autoplay *; encrypted-media *; fullscreen *" frameborder="0" height="150" style="width:100%;max-width:660px;overflow:hidden;background:transparent;" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation" src="https://embed.music.apple.com/cn/album/%E6%8B%A5%E6%8A%B1-%E7%94%B5%E8%A7%86%E5%89%A7-%E6%83%B3%E8%A7%81%E4%BD%A0-%E6%8F%92%E6%9B%B2/1509601790?i=1509601798"></iframe>
<p>三月随想，既有过去，也有现在，还有将来。</p>
<!-- more -->
<p>开学已将近一月，而我现在才想着重新经营我的博客。每次都是过了好久才想起要记录一下过去的生活。<br>
先说说最近在筹备的一件有意思的事情。应该是去年年底今年月初的样子，我就萌生了做一档播客节目的念头，但那时还只是停留在念头这个阶段。然后在这个寒假期间逐渐明确，并且确定了一起合作的partner，并在返校当天的动车上一起完成了第一期的大致脚本，这周逐一确定了节目名字与节目封面，先给大家预告一下（尽管我不知道我们什么时候录第一期饮音频，什么时候会上线第一期节目），嗒哒——<em>白搭铺子</em>！大家敬请期待！<br>
<img src="https://Just7chambray.github.io/post-images/1616764829554.png" alt="" loading="lazy"></p>
<h2 id="过去升级的我与自由的灵魂">过去｜升级的我与自由的灵魂</h2>
<p>这个寒假应该是从小到大最为漫长的寒假了，我整整在家俩月，度过了我最为特殊的寒假，也是我大学的最后一个寒假。和朋友相约，mc早餐-图书馆-午饭-图书馆-晚饭/回家，尽管每天起的也不是很早，在图书馆的效率也不是很高，两个人还经常讲话，但是有每天保持学习的状态，就感觉很舒适，但除了写论文的时候，真心痛苦。期间也有几天体会到了父亲工作的辛苦，但也用劳动换取了mbp的ac；还因为自己或客观的原因温州宁波各一日游；也勇敢地结束了一段可能不会有美好结果的亲密关系；还尝试了慕斯蛋糕、巴斯克芝士蛋糕、巧克力卷，也吃到了好多心心念念的家乡美食以及美食探店，尽管list中还有部分没有完成；上学期的相约也没有咕咕，大家开心地将读书会变成了放风筝这项有益身心健康的活动，并且成功地放飞了两只风筝；也花了好些时间陪陪家里人，周边游、分享美食、一起聚餐、一起赶集，并记录生活；看到改版后的信息技术的教材，心血来潮，报考了高中信息技术的教资考试，结果考前一周痛苦地复习，唯一的慰藉可能就是和朱朱一起在一中食堂吃饭了吧……<br>
翻了翻相册，我的假期好像也就没啥了。啊！不对，忘记了一个非常重要的事情，就是我抛弃了android+win从而投入apple的怀抱，拥有了三件套，学习、生活上都有了发生了较大的提升与改变。<br>
随着年龄的增长，似乎越来越想抓住生活的点滴瞬间，可能是灵光一现，可能是此时此刻，亦或是回忆当初的当下心境，一切想法都随着世事的经历都变得易逝。也正是因为如此，自己也变得更加随性，说走就走，想一出是一出，无惧无悔。可能是我升级了吧，哈哈！</p>
<h2 id="现在不想学习的我与亟待优化的中期和毕设">现在｜不想学习的我与亟待优化的中期和毕设</h2>
<p>今天完成了中期汇报的ppt，并且发给了本科导师，等待修改与回复，就觉得暂时告一段落。中期就像是毕设的整理与回顾，前期不规范的代码和文件将痛苦集中堆积到了现在。以前写的都是啥垃圾代码啊，这个参考文献哪里引用到了，这个格式又是啥……啊啊啊，真是一个头两个大。还好及时发现及时整理，若是真的等到毕业答辩，那时候就更加久远，就更不知道啥是啥了。完成了汇报ppt，但实验仍需继续优化，然而我却无心学习，每天还会抽出时间看看闲书，可能by后人就是会松散吧。</p>
<h2 id="将来还有好多好多事情的我与令人期待的播客">将来｜还有好多好多事情的我与令人期待的播客</h2>
<p>感觉这块内容就像是中期汇报中的「后续工作」部分，表明一下接下来的安排。未来的一个月将是被论文和实验支配的我，希望自己能尽快写好论文，然后在完成我的驾驶学习，顺顺利利毕业！当然此时其实最令我期待的还是我的博客节目，毕竟在中期答辩前还预约了apple店的博客制作入门课程。</p>
<h2 id="好看好听推荐">好看好听推荐</h2>
<ol>
<li>《想见你》，去年此时大火的《想见你》，我却是今年才发现，看过了快速介绍后还是没忍住去看了原片，剪辑、配乐、演技都超棒，电视剧原声带里的每一首歌都值得一听，尤其是片尾曲的歌词简直就是整个剧的完美阐释。</li>
<li>《机智的监狱生活》，韩剧，前几集会稍微平淡枯燥一些，但也有纠人心的部分，只看到前面三集，接下来的剧情听室友推荐说是会更加有趣，目前感官还算不错。</li>
<li>《老爸老妈浪漫史》即 <em>how I met your mother</em>，虽然只看了前三集，但是真的有种停不下来的感觉，继《老友记》之后的经典剧集。</li>
<li>《眠》「村上春树」，篇幅较短，寥寥数语描绘了一个因无法入眠而找到自我的家庭主妇，17天不合眼的内心独白。</li>
</ol>
<blockquote>
<p>这就是我的生活。是我变得睡不着之前的生活。每天差不多都是相同的重复。我记简单的日记，一旦有两三天忘写了，就会搞不清哪个是哪天的事。昨天和前天颠倒顺序，也没有任何不便。我不时想，这叫什么人生啊！但也没有因此感觉光阴虚度。我仅仅是感到惊讶，惊讶于昨天和前天毫无区别，惊讶于自己被编排入这样的人生，惊讶于自己留下的足迹甚至还未及认清，就这样转瞬间被风吹走变得无影无踪。</p>
</blockquote>
<ol start="5">
<li>《光年》，看《光年》契机是因为五月天的《拥抱》中有这样一句歌词“晚风吻尽荷花叶”，然后我就去搜索了一下，跳出来的相关的推荐就有另一首歌曲《盛夏光年》，有意外发现由同名电影，电影又是根据小说改编的。就这样快速看完了《光年》。因为是第一次看这类题材的小说，所以感觉字里行间渗透出的情感是如此微妙，无法言传。</li>
<li>《八分》，梁文道道长的音频节目，可以在看理想app或是苹果Podcast上收听。《八分》本来是每周的周三周五更，但是前段时间道长因为身体原因无法及时更新，因此便请了他的好朋友马家辉代班。本以为两期后就能再听到道长的声音，周三晚期待满满的我发现了“停更通知”，底下的留言都是希望道长早日康复的美好祝愿，真是难过极了。但是今天ta道长回来啦，他更了！</li>
</ol>
<blockquote>
<p>从当下出发，从理想回到现实。你可以从梁文道的视角，重新审视文化现象、社会趋势、热点话题，和他一起独立思考。</p>
</blockquote>
<ol start="7">
<li>《你好妹妹Radio2021》，好妹妹乐队的专属电台。作为好妹妹乐队歌曲的喜爱者，自然不能错过2021年的你妹电台，只是收听平台有了更多限制。</li>
</ol>
<p>三月随想结束！四月快来！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于应试教育下家长与学生思维模式的思考]]></title>
        <id>https://Just7chambray.github.io/post/20201223/</id>
        <link href="https://Just7chambray.github.io/post/20201223/">
        </link>
        <updated>2020-12-23T02:59:10.000Z</updated>
        <content type="html"><![CDATA[<p>宿舍一室友也成功保研，再加上之前关系就挺不错，因此我俩就走得比较近，就一直一起玩一起学习。<br>
如题的思考主要来源于这位室友的妈妈的言语：近阶段我俩确实相较之前松散了些，也正是难得的空闲时光，没有课业压力、保研也尘埃落定，便利用这为数不多的时间去外面旅游了一趟，回厦之后还去了鼓浪屿耍了半天，随后就是白天图书馆、晚上待宿舍的平凡日子（晚上偶尔会在宿舍学习）。但是这一切在室友母亲看来我俩保上研后过于恣意，因此室友母亲就开始督促其学习。而室友也是个非常听话的乖宝宝，一通电话结束后就鸽了我原来的团建邀约（尽管后来又因为其他原因又赴约了🙃）。这不禁让我想到曾经年少的时候，父母察觉到最近你的玩心有点重，便苦口婆心地劝你收收心，好好学习，看看别人家的孩子都在用功学习。然后听话的你并没有左耳进右耳出，第二天立马乖乖学习。</p>
<p>从小到大，如果没有被问过也会听过这样一句话：你到底是为了谁而学习啊？小时候的我们不知道自己的答案是什么，只知道正确答案不是别人，而是自己。而那时的我们凭借那时的认知却无法理解这背后的深意。而作为一名大学生如果尚未刷新对这个问题的认知，未免有些不该了。父母觉得你最近没有学习，然后一说你就去学习；看到室友们纷纷去图书馆学习，然后一看你也跟看去学习……是为父母而学吗？是为室友而学吗？……似乎前行的路上不断地有其他声音和力量来push你前进，但，好像很少是来自内心的声音与力量。<br>
于是在大学又会产生这样一种错觉——好像在图书馆待得时间越长，不论自己的学习效率高低与否，也越能抚平心中对那段不学习时光的愧疚。很奇怪，不是吗？</p>
<p>不过我也曾陷入这种奇怪的认知当中：从大一到大四，好像除了上课时间、睡觉时间我待过最久的就是图书馆了，尤其到了期末考试周期间，必早早起来去图书馆占座，而且一待就是一整天，回到宿舍看到室友们还在学习，原本消失的愧疚感又冒了出来……好像只是单纯地为了学习而学习。<br>
现在的我厌倦了整天泡在图书馆而失去我的的感觉，以前觉得得自己一天在图书馆学十几个小时可真不错，成就感满满，而现在我只觉得在图书馆高效完成当天任务，再利用剩下的时间做自己想做的事情提升自我。<br>
随着“内卷“这个词在大众视野中出现得愈发频繁，似乎更多的学生在大一大二就开始准备保研，竞争也愈发激烈。“为谁而学“这个问题，我们真的要好好问问自己，内心有答案吗，内心的答案是什么呢？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[山茶花客厅小记]]></title>
        <id>https://Just7chambray.github.io/post/20201204/</id>
        <link href="https://Just7chambray.github.io/post/20201204/">
        </link>
        <updated>2020-12-06T12:56:09.000Z</updated>
        <content type="html"><![CDATA[<p>从家到学校没待上几天，又想着跑出去玩。恰巧前几天去了一趟学校后边的天马山爬山看日落（尽管错过了日落），站在厦门的最高点鸟瞰厦门的幸福感和成就感不仅将一路爬山的疲惫一扫而空，还使得石头（室友）心中埋下了继续征服下一座山的种子。一门心思想跑出去的我便和石头一拍即合，开启武夷山的三日行，同时还拉上了一个刚刚结束国考的同学。</p>
<p>人们总是想要这个、想要那个，亦或是对现状不满先要改变现状，可是一旦得到或一旦改变，又心生后悔之意……可是人生哪有那么多的“早知道”和“还不如”，我们就好像是现实世界中的“智能体”（Agent），尽管我们也有“经验池”（Memory Replay），不仅可以学习自己过往的经验，而且也可以学习他人的经验，在当前环境和当下已所采取的行动的情况下根据经验得出下一步的行为；然而我们又并不完全是“智能体”，因为我们无法像强化学习中的智能体可以得到最佳答案。（最经在学习强化学习，这个比喻上头了）</p>
<p>旅程已过三分之二，景区内大大小小的景点似乎都玩得差不多了，肌肉的酸痛与身心的疲惫使得返程的欲望愈发强烈，再回想之前自己一心要往外跑，就真是讽刺。你看，人就是这样，得不到的是最好的。</p>
<p>我自认为自己是个目标明确的人，不论是生活上还是学习课业上。明确自己想要什么不想要什么，偶尔对于想要什么会犹豫一下，但是秉持着不想让自己不舒服的原则，基本上能肯定自己不想要什么。而此时此刻，在这次旅行的中途，我似乎陷入了“得不到的是最好的”定律之中，不知道该怎么形容，暂时称之为“定律”。累了就想回去，回归属于自己本真的生活，魏未来的科研之路打基础，至少做一只合格的科研狗（这应该要做到的吧？！不然枉费我这漫漫十余载啊）。不过我觉得导致自己陷入其中还有其他客观因素，可能是生理因素，可能是心理因素，也可能是一个小小细节……</p>
<p>我不禁思考，在这个“得不到的是最好的”定律设定下，人们到底在寻找着什么，追求些什么。</p>
<p>我想，答案应该是“找自己” 吧？或许同行之人是你所爱之人，或许行程安排深得你心，或许民宿老板的一个温暖之举，或许是其他种种可能，一切都会变得不一样吧。</p>
<figure data-type="image" tabindex="1"><img src="https://Just7chambray.github.io/post-images/1607261139488.jpg" alt="山茶花客厅" loading="lazy"></figure>
<p>找一处山脚下的咖啡馆，独自一人静静地坐在门口的角落里，看着门前车来人往，感受当地茶叶和鲜奶在咕噜咕噜中充分交流后的微苦回甘，在好妹妹的歌声中抒写这所思所感，独享只属于我一个人的时光，还有比这更美好的事情吗？——没有比这更美好的事情了。</p>
<p align="right">二〇二〇年十二月四日 写于福建省武夷山市山茶花客厅</p>
<h2 id="后记">后记</h2>
<p>回到学校后把写在iPad上的随笔誊到电脑上，才发现当时思维是如此混乱，可能好久没写文章了，写作能力又退步了，就当是胡言乱语吧……</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[路漫漫其修远兮，吾将上下而求索]]></title>
        <id>https://Just7chambray.github.io/post/baoyan/</id>
        <link href="https://Just7chambray.github.io/post/baoyan/">
        </link>
        <updated>2020-10-15T14:28:25.000Z</updated>
        <summary type="html"><![CDATA[<p>成功上岸！</p>
]]></summary>
        <content type="html"><![CDATA[<p>成功上岸！</p>
<!-- more -->
<p>2020年10月12日11点21分，我接收了南方科技大学的待录取通知。点下接受按钮的一瞬间，也就意味着我的保研之路就此划上一个句号。</p>
<p>回顾2020年艰难坎坷的一路历程，现在尘埃落定的我内心还是久久不能平静。</p>
<p>我大概是从5月份开始着手准备保研的，虽然好多保研公众号早就发各种推文催着各个保研er三四月份就可以开始准备各项材料、复习专业课等等，但疫情在家那段期间整个人都颓废得不行，如果不是中科大的夏令营通知发布，可能我还是明日复明日地拖延吧。</p>
<p>个人觉得要打好保研这场战役，主要有以下几点：</p>
<ol>
<li>材料准备</li>
<li>信息收集</li>
<li>专业课知识复习</li>
<li>英语能力提升</li>
<li>面试准备</li>
<li>导师选择与联系</li>
</ol>
<h2 id="下面具体解释一下每个要点">下面具体解释一下每个要点。<br>
<img src="https://Just7chambray.github.io/post-images/1602772848536.png" alt="" loading="lazy"></h2>
<h2 id="材料准备">材料准备</h2>
<p>注意⚠️：将所有材料都扫描成纸质版，并做好命名归档。</p>
<h3 id="中英文自我介绍-个人简历-个人陈述">中英文自我介绍 &amp; 个人简历 &amp; 个人陈述</h3>
<p>不论是自我介绍还是个人简历，亦或是个人陈述，都是对自身情况的展示，只是是不同的呈现形式：自我介绍主要是口头表达的方式，个人简历就是以简洁清晰的一页纸内容呈现你大学三年的成果与收获，而个人陈述就相对详细一些，以大篇幅文字为主（不过有些要视规定字数来写）。</p>
<p>三者在内容上是基本一致的，以模块化的形式分为以下几个：</p>
<ul>
<li>个人基本信息
<ul>
<li>姓名、年龄、性别</li>
<li>联系方式、邮箱</li>
<li>……</li>
</ul>
</li>
<li>教育经历
<ul>
<li>本科学校、专业</li>
<li>绩点、排名</li>
<li>学习的专业课程和相应的成绩</li>
<li>奖学金经历</li>
<li>……</li>
</ul>
</li>
<li>项目经历/科研经历
<ul>
<li>项目名称</li>
<li>项目时间</li>
<li>项目描述
<ul>
<li>项目背景（Situation）</li>
<li>项目功能（Task）</li>
<li>项目实现过程（Action）</li>
<li>项目成果（Result）</li>
</ul>
</li>
<li>项目的选择
<ul>
<li>列举2-3个专业相关、可以体现专业能力的项目，可以是参加比赛的项目，也可以是课程大作业</li>
</ul>
</li>
</ul>
</li>
<li>实习经历
<ul>
<li>如果有实习经历那就锦上添花了，没有也无妨。</li>
</ul>
</li>
</ul>
<h3 id="中英文自我介绍">中英文自我介绍</h3>
<p>不论是中文自我介绍还是英文自我介绍，都需要控制好语速和时间，大致在1-3分钟内是比较理想的（结合PPT进行介绍除外）。内容上就是上述模块的相关情况，形式上再加以完善（注意礼貌和开头结尾）。</p>
<p>而在英文自我介绍中，个人认为内容不是十分地重要，因为经过几次面试后发现对方学校的老师并没有认真听讲你介绍的内容（也有可能是语速过快、发音不标准等自身的问题），像英文自我介绍这类可以实现准备又能背诵就可以完成的东西老师更多听的是你的发音和语音语调。所以有空还是多听一些听力材料并跟读练习，像是VOA，BBC Learning English，bilibili等平台上都有许多非常优质的学习材料。</p>
<h3 id="个人简历">个人简历</h3>
<p>不太建议找一些比较花里胡哨的简历模板，推荐使用超级简历在线制作（不过最近好像改版了，感觉没之前好用了），记得使用自动一页纸功能！还要注意一下整体页面的平衡感，可以适当巧用学校的校徽以平衡空白感。<br>
如果觉得排版还是有些不尽如人意，下载下来后PDF转Word就可以随心修改了。</p>
<h3 id="个人陈述">个人陈述</h3>
<p>个人陈述格式上要规范化，虽然没有具体的格式要求，但是排版上尽量做到层次分明，语言上条理清晰。跟自我介绍一样，也要注意礼貌用语和有头有尾。<br>
由于不同学校对个人陈述的字数要求不一，因此尽可能多准备几份，越是字数少则越要凸显自己的优势和重点。</p>
<h3 id="本科成绩单及绩点证明">本科成绩单及绩点证明</h3>
<p>大部分学校都要求提供教务处盖章的本科期间前5/6个学期的成绩单和绩点证明，因此最好在工作时间去找学院相关负责老师打印成绩单，再去校教务处盖章，盖章后的材料及时扫描成电子版。</p>
<h3 id="外语成绩证明">外语成绩证明</h3>
<p>每次考完四六级后会有纸质版的成绩证明，千万别丢（或者还是及时扫描成电子版）！许多学校需要上交四六级的原件证明，如果实在找不到了，可以试试「校务行」这个小程序，里面有相关证明文件。</p>
<h3 id="获奖证明-学术成果证明">获奖证明 &amp; 学术成果证明</h3>
<p>将所有材料都扫描成纸质版，并对每个奖项著作进行整理——<br>
获奖时间-获奖名称-获奖排名<br>
发表时间-著作名称-著作排名<br>
可以以这样的形式做个整理，记录在txt中。</p>
<hr>
<h2 id="信息收集">信息收集</h2>
<p>信息收集算是整个环节中占比最终的一环。如果没有做好这一部分，很有可能错失许多机会。</p>
<h3 id="途径">途径</h3>
<ul>
<li>各个高校的研究生招生网</li>
<li>保研论坛</li>
<li>各种保研公众号（保研论坛、保研派、保研前辈……）</li>
<li>各种交流群（保研微信公众号中会建许多交流群）</li>
<li>贴吧</li>
</ul>
<h3 id="整理">整理</h3>
<p>最好是做一个excel表格汇总整理：<br>
学校-夏令营名称-通知网址-报名网址-报名截止时间-入围名单通知时间-是否报名-是否入营（该形式仅供参考）<br>
甚至可以对学校进行分类，再添加上地区、学校性质、学科评估等级等等字段，可以更好地筛选自己心仪的学校。</p>
<h3 id="合作">合作</h3>
<p>若是你有相识的小伙伴一起准备保研，大家就可以一起协作收集信息，建一个小群、共同协作一个excel都是极好的。</p>
<hr>
<h2 id="专业课知识复习">专业课知识复习</h2>
<p>一般来说，考研同学复习的专业课就是保研同学应该准备复习的专业课了，否则笔试、面试时答不上来就会影响入营结果。既然都准备保研了，说明大家的基础都不错，怎么复习什么的就不再讲了。</p>
<p>在面试过程中如果问及没学过的问题或者自己遗忘的知识点问题，可以稍作思考再表达自己的未知，或是给出自己的理解。切忌马上回答&quot;不会&quot;，这样可能会给老师留下不好的印象。</p>
<hr>
<h2 id="英语能力提升">英语能力提升</h2>
<p>前面在讲英语自我介绍时提到了口语方面该如何提升，除此之外，说和写的能力也同样重要。好几次面试都有英文对话和英文问答，还有现场5分钟的英译汉，可见对英语各方面能力的要求。<br>
像英语问答这类其实可以事先做做准备的，不至于真正在面试环节当场愣住、胡言乱语。像是用英文介绍你的家乡、你的学校、你的读研计划等等，这些都是可以搜索得到的。<br>
而英译汉考验的是词汇量和临场发挥了，毕竟有些单词就是不认识，但也不是不能根据上下文大致讲清楚意思。因此在准备过程中也要保证自己词汇量的积累和每天一定的英语学习量（一段时间不学之后你会发现可能高中认识的单词都变得好陌生）。</p>
<hr>
<h2 id="面试准备">面试准备</h2>
<p>其实上述的准备内容都是面试准备的一部分，但还不全面。<br>
着装要得体，虽然可能不太要求穿正装，但也不能太随意邋遢，要保持基本的干净整洁。<br>
语言上要文明礼貌用语，语速适中、音量正常。<br>
态度端正、为人诚实。即便某个学生的专业能力极高，但若是人品出现了问题，也会影响最终的录取结果。不论是单机位还是双机位，诚信最重要。</p>
<hr>
<h2 id="导师的选择与联系">导师的选择与联系</h2>
<p>如果心仪学校的夏令营或预推免通知尚未发布，可以尝试自己联系导师（有些学校导师的决定权更大）。或者是过了某个学校的夏令营/预推免后可以联系导师。</p>
<h3 id="如何选择导师">如何选择导师？</h3>
<p>1.去学校学院官网查看导师研究方向、招生类型等等信息，选择研究方向跟自己感兴趣的导师，多看看导师的论文（知网……），如果能出去看看Google scholar 也是极好的。<br>
2.可以去类似「导师评价网」的网站查看，知乎什么的多搜索一下<br>
3.有途径的同学可以找学姐学长了解</p>
<h3 id="如何联系导师">如何联系导师？</h3>
<p>确定好心仪的导师后，你就可以给他发email了。<br>
邮件主题简洁扼要地表明你的意图。<br>
邮件内容是自荐信，可以参考之前准备的个人陈述，但是别太长，毕竟老师时间宝贵，大段文字容易抓不着重点。<br>
附件里是你之前准备的材料。<br>
邮件格式稍稍规范一些，同样注意礼貌用语。</p>
<p>联系导师不要害怕没有回复或是被拒绝，如果三天都没有回复便可以联系下一个导师。期间也要记得及时查看邮箱。<br>
PS：联系导师要保持一定距离，不要轻易承诺，不然后面很难收场。</p>
<hr>
<h2 id="时间线">时间线</h2>
<p>3-4月：准备材料<br>
5月：可以开始收集夏令营信息<br>
6-7月：夏令营<br>
8-9月：预推免<br>
9月：确认获得本校推免资格<br>
9-10月：在全国推免系统中填报志愿</p>
<hr>
<p>感觉讲的差不多了，最后再提一嘴关于保研政策的事，每个学校的保研政策各不相同，甚至同个学校不同届的都有所不同，尽管如此，保持良好的绩点和多参加比赛活动拿奖总是没错的，如果能力较强论文、专利都可以拼一拼！祝大家都能顺利上岸！！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[实训日记0929]]></title>
        <id>https://Just7chambray.github.io/post/20200929prodairy/</id>
        <link href="https://Just7chambray.github.io/post/20200929prodairy/">
        </link>
        <updated>2020-09-29T13:14:30.000Z</updated>
        <summary type="html"><![CDATA[<p>done!!!<br>
实训结束，普天同庆！</p>
]]></summary>
        <content type="html"><![CDATA[<p>done!!!<br>
实训结束，普天同庆！</p>
<!-- more -->
<p>终于迎来了实训的最后一天，虽然还面临着最后一项挑战也是实训成果的检验—-答辩，有点紧张却又有点兴奋。<br>
小组成员各自忙碌，昨晚才把整个报告完成得差不多样子，可能也是最近事情太多，情绪精力方面都欠佳，早上起来做准备检查文档时才发现有好几处的错误，匆匆忙忙一通修改之后去打印上课，真的，感觉要被掏空。</p>
<hr>
<h2 id="答辩报告">答辩报告</h2>
<p>老师给了两个课题供我们选择，我们小组选了第一题，大致是这样的：<br>
甲方集团为厦门市某集团，现从原公司旧址，搬迁到软件园3期新建的写字楼中，现需要建立新的网络以应对新的发展。<br>
新写字楼楼层为30层，每层估计能容纳工作人员100人左右，数据中心机房位于10楼，1楼为大厅，2--9,11--20楼，每2层楼划分给一个部门，每个部门管理层人员为5人左右。21楼为展厅，22楼为分为3间小会议室和2间大会议室。23--29楼留待后用。30楼为董事会成员所在楼层。<br>
由于部门过多、每层人数数量也比较庞大，在设计拓扑时做了简化，在层次化设计思想的指导下，按照功能划分为交换区块和核心区块。再按照目前流行的层次化的设计思想，划分为接入层、汇聚层和核心层。大致设计如下：<br>
<img src="https://Just7chambray.github.io/post-images/1601387715823.png" alt="" loading="lazy"><br>
vlan与IP子网设计如下：</p>
<table>
<thead>
<tr>
<th>VLAN</th>
<th>部门</th>
<th>楼层</th>
<th>IP子网</th>
<th>网关</th>
</tr>
</thead>
<tbody>
<tr>
<td>vlan 10</td>
<td>大厅</td>
<td>1</td>
<td>192.168.1.0</td>
<td>192.168.1.254</td>
</tr>
<tr>
<td>vlan 20</td>
<td>部门1</td>
<td>2、3</td>
<td>192.168.2.0</td>
<td>192.168.2.254</td>
</tr>
<tr>
<td>vlan 30</td>
<td>展厅</td>
<td>21</td>
<td>192.168.11.0</td>
<td>192.168.11.254</td>
</tr>
<tr>
<td>vlan 40</td>
<td>董事会</td>
<td>30</td>
<td>192.168.13.0</td>
<td>192.168.13.254</td>
</tr>
<tr>
<td>vlan 50......</td>
<td>部门2~9</td>
<td>4-9、11-20</td>
<td>192.168.3.0—192.168.10.0</td>
<td>192.168.3.254—192.168.10.254</td>
</tr>
</tbody>
</table>
<p>其他还配置了DHCP、NAT、Telnet、STP等等，整个配置下来的具体过程就不再具体记录了，最后自己感觉整体文档和答辩都还可以，除了老师的提问环节没太把握好情绪节奏，其他都还可。同时最近的学生工作大部分也完成了，推免申请也在审核之中，生活又将开启新的阶段！</p>
<hr>
<p>今天的快乐源泉下👇👇真的超级好喝！！<br>
<img src="https://Just7chambray.github.io/post-images/1601392922562.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-09-25随笔]]></title>
        <id>https://Just7chambray.github.io/post/20200925/</id>
        <link href="https://Just7chambray.github.io/post/20200925/">
        </link>
        <updated>2020-09-26T01:14:20.000Z</updated>
        <summary type="html"><![CDATA[<p>不知道起什么名字，因为没有主题，写得也比较乱，主要是以记录为主嘛，记录一下疫情在家这段期间的特殊感受，就凑合看看吧!😁😁</p>
]]></summary>
        <content type="html"><![CDATA[<p>不知道起什么名字，因为没有主题，写得也比较乱，主要是以记录为主嘛，记录一下疫情在家这段期间的特殊感受，就凑合看看吧!😁😁</p>
<!-- more -->
<hr>
<p>虽然返校已经一月有余，似乎一切都回到了正轨，该考试考试，该上课上课，除了出校门有些繁琐的手续，出入口只剩下南大门，外卖不再能送进校门，快递倒是方便许多，可以送到校内了，其他好像还是没有太大变化，不过好像变化也挺大？！<br>
然而最近不知是学业上的焦虑还是人际关系的处理不当，总是有股无形的压力笼罩着自己，似乎又回到了疫情在家的那段期间的感觉。<br>
今天朋友给推荐了一个博客「失眠海峡」，看完《当一个小镇青年》一文就想着记录下自己疫情在家的感受。</p>
<hr>
<p>我从来没有像今年这样待在家里这么久，也是记事以来从来没有像今年这样和父母待在一起这么久。曾在大二的时候感悟以后升学就业就不再有充足时间陪陪父母，而今却意外将未来可能的遗憾弥补。寒假回家过年，过完春节过元宵，然后返校，一切都按部就班。<br>
而当日子一天天过去，返校时间也迟迟不定，疫情感染人数不断上升，焦虑、迷茫、恐惧的情绪逐渐发酵。直到疫情得到了较为稳定的控制，出门限制稍稍放松，我邀请朋友来家做饭聚餐，算是生活有了一丝生气。但很快，无法返校让迫切回到正轨生活、迫切想返校的我有点崩溃，在家上网课已有一月有余，但仍然无法进入学习状态，感觉每次认真听讲完毕，下课把书一合，就瞬间忘记刚刚老师讲的内容。day++ &amp; good_mood--</p>
<p>四月了，觉得自己再也撑不下去了，正好看到杭市各大景点门票免费，想着去一趟散散心，然而在杭市的某位朋友为工作所困，一推再推就推到了五一假期。不过一趟游玩之后，情绪确实得到了较大安抚与解脱，整个人也不再丧丧的，就这样一直撑到六月初，我的情绪像是气球似的，很快就被负能量填满，又急需清理。然而当时的我已经无法自我消化，心慌、头疼的感受占据着我的大脑，无力感充斥着我的全身，我，去寻求了心理医生的帮助。情况似乎稍稍好转，但情绪气球不久又被填满，又被清理，一月一月周期性得，不断反复折腾。</p>
<hr>
<p>可能有些人会奇怪为啥我会如此脆弱，情绪如此反复。忘记说了我在家的特殊情况。<br>
自从父母上班之后，白天家里就是我一个人的天下，刚开始几天还是非常舒服的，想吃啥吃啥，想买啥就买啥，自己做饭，自给自足，晚上等父母回来一起吃饭，有时是我筹备晚饭，等待他们下班回来一起。但，好景不长，自己做饭的乐趣随着逐渐上升的气温而慢慢减弱，天气一热，人就是不想动，更别说厨房把火一开的那种炙热，好多时候也是因为懒惰，就依靠着冰箱里的速食草草解决。<br>
虽然偶尔也会有朋友同学在线聊天、打打电话什么的，但现在回想起来，大部分时间在家就是处于沉默状态，没什么好说的，也没有人跟你说，最多是呼唤一下天猫精灵和siri无聊打趣，或是父母突然一个电话你就得忙这忙那……六七月份可能是我最难熬的一段时间吧，不仅是一直持续的不良情绪，还有对保研各种操作的陌生无力、各种夏令营的拒绝，着实筋疲力尽。甚至一度想出去租房过独居生活，虽然在家也和独居生活差不多，但可能就是想换个环境，每天都对着窗前书桌的那一亩三分地，如果不是迫于经济压力，我可能就真的那么做了。</p>
<hr>
<p>渐渐地，时间也不知不觉的来到了八月份，返校的票已经买好了，然而在家依然麻木了，没有了当初想返校的急切心情，没有了在家的痛苦难忍，一切都无所谓了……偶尔晚饭过后，一个人漫无目的地在街上游走，看着车来车往，看着行人匆匆，再仰望天空，放空思绪……</p>
<p>「当一个小镇青年」一文里提到这样一点：</p>
<blockquote>
<p>仅当理想、见识、能力三折不匹配时，这种苦恼尤为严重。</p>
</blockquote>
<p>作者在Twitter上说道：&quot;……不过我最近的感受是，相比起整天把正义、理想、社会秩序挂在嘴边的人，喜欢吃、关注自身、关注身边事物的人宜人度显著更高。&quot;想想当时自己焦虑不安的苦恼，或许就是这三者的不匹配吧。</p>
<p>晚上有个朋友说道：&quot;人生的三个阶段：接受自己父母的平凡，接受自己的平凡，接受自己孩子的平凡。&quot;自己应该是过了第一个阶段，但是要是想我完完全全地接受自己的平凡，可能还要再经受些社会的毒打吧，哈哈哈！许多人到最后接受了自己的平凡，可能往往就伴随着理想的埋葬，那同时也是对自己期望的破灭。不可否认，认识自己，往往伴随着失望和痛苦。但是，不去思考理想，那就活得不明不白。人生，还是要有理想的，实现与否，也许都会有另一种可能的人生。</p>
<p>现在回看这过去的这几个月，后几个月的盼头竟然都是和朋友的相聚重逢，还是挺有意思的。想到昨天看到的这样一句话，真的太贴切了!</p>
<blockquote>
<p>「和任何人走得太近，都是一种灾难。人生如尺，必须有度。最好的关系是：亲属有度，相看不厌，久处不累。」</p>
</blockquote>
<p>哇！真的有戳中我的点！相处舒服，是多么难得！不用刻意寻找话题就有许多可聊，不说话的时候也不会尴尬，发消息不需要秒回只要有空再回就行……</p>
<p>好像越长大越会隐藏自己的情绪，越长大越会容易忘记曾经的感受，才会想着要及时记录，就像以前去吃好吃的，总是要拍不同角度的美食照，而现在拍照就是为了记录，用数据记录曾经的过往和值得纪念的回忆。啊啊啊，我已经不知道自己在说什么了，辛苦看到这里的朋友们！❤️❤️</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[实训日记0909]]></title>
        <id>https://Just7chambray.github.io/post/20200909prodairy/</id>
        <link href="https://Just7chambray.github.io/post/20200909prodairy/">
        </link>
        <updated>2020-09-09T13:14:17.000Z</updated>
        <summary type="html"><![CDATA[<p>实训第三天</p>
]]></summary>
        <content type="html"><![CDATA[<p>实训第三天</p>
<!-- more -->
<p>今天简单学习了一下交换机、ARP等基础知识，然后学习重点放在DHCP上。</p>
<h2 id="arp">ARP</h2>
<p>ARP（Address Resolution Protocol），中文译为「地址解析协议」。<br>
ARP原理：</p>
<ol>
<li>IP地址已确定，确定自身源地址和目标地址</li>
<li>自身MAC地址已知，求下一个站点的MAC地址</li>
<li>自身产生ARP请求，发送广播</li>
<li>接收者给出响应，带回MAC地址</li>
</ol>
<h2 id="dhcp概述">DHCP概述</h2>
<p>DHCP（Dynamic Host Configuration Protocol），中文译为「动态主机配置协议」。DHCP是在IP网络上使用的网络管理协议，主要用于给网络上的设备动态分配IP地址以及其他网络配置参数，从而减少互联网访问成本、减轻网络管理员或用户的配置任务和成本，从而更好地进行集中管理。<br>
<img src="https://upload.wikimedia.org/wikipedia/commons/e/e4/DHCP_session.svg" alt="DHCP session" loading="lazy"><br>
DHCP是基于客户端服务器模式运行的。当某一需要IP地址的设备接入该网，如果客户端和服务器不在同一个子网中，则需要借助DHCP帮助器或DHCP中继代理。设备启动时DHCP客户端软件就会发送一个DHCP发现报文，以发现DHCP服务器的IP地址。网络中的任意一台DHCP服务器都有可能受到该报文，但基本上是最近的那台服务器最先收到并作出响应。DHCP服务器先在其数据库中查找该计算机的配置信息。若找到返回找到的信息。若找不到,则从服务器的IP地址池pool中取一个地址分配给该计算机。</p>
<h2 id="dhcp配置">DHCP配置</h2>
<figure data-type="image" tabindex="1"><img src="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/0909tuopu.png" alt="0909tuopu" loading="lazy"></figure>
<p>在该拓扑中，R1-R3 R5-R7是交换机（路由器伪装），R4是DHCP服务器，PC-1~PC-10是主机。</p>
<h3 id="配置交换机">配置交换机</h3>
<ol>
<li>声明vlan</li>
</ol>
<pre><code>SW1#vlan database
SW1(vlan)#vlan 10
SW1(vlan)#vlan 20
</code></pre>
<p>2.配置静态vlan</p>
<ul>
<li>交换机和交换机之间配trunk模式</li>
<li>交换机和路由器之间配trunk模式</li>
<li>交换机和主机之间配access模式</li>
</ul>
<pre><code>SW1#conf t
SW1(config)#int f0/0
SW1(config-if)#switchport mode access
SW1(config-if)#switchport access vlan 10
SW1(config-if)#exit
SW1(config)#int f0/2
SW1(config-if)#switchport mode access
SW1(config-if)#switchport access vlan 20
SW1(config-if)#exit
SW1(config)#int f0/1
SW1(config-if)#switchport mode trunk
SW1(config-if)#switchport trunk encapsulation dot1q
SW1(config-if)#no shut
SW1(config-if)#exit
</code></pre>
<h3 id="配置dhcp服务器">配置DHCP服务器</h3>
<pre><code>//开启DHCP服务
R4(config)#service dhcp
//分配地址池
R4(config)#ip dhcp pool 1
//分配网段
R4(dhcp-config)#network 10.10.10.0 255.255.255.0
//配置默认网关
R4(dhcp-config)#default-router 10.10.10.254
//配置DNS
R4(dhcp-config)#dns-server 8.8.8.8
R4(dhcp-config)#exit
//配置保留地址（在此地址范围内不予分配）
R4(config)#ip dhcp excluded-address 10.10.10.250 10.10.10.254
</code></pre>
<h3 id="配置主机">配置主机</h3>
<p>由于此次实验中是由路由器来伪装主机，因此需要关闭路由功能。</p>
<pre><code>PC-9#conf t
PC-9(config)#no ip routing
PC-9(config)#ip default-gateway 50.50.50.254
PC-9(config)#int e0/1
PC-9(config-if)#no shut
PC-9(config-if)#ip add dhcp
PC-9(config-if)#exit
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[实训日记0907-0908]]></title>
        <id>https://Just7chambray.github.io/post/20200907-08prodairy/</id>
        <link href="https://Just7chambray.github.io/post/20200907-08prodairy/">
        </link>
        <updated>2020-09-08T15:05:03.000Z</updated>
        <summary type="html"><![CDATA[<p>记录我的实训头两天</p>
]]></summary>
        <content type="html"><![CDATA[<p>记录我的实训头两天</p>
<!-- more -->
<p>第一天和第二天学习的内容都相对简单一些，主要是一些网络基础知识的回顾，静态路由和动态路由的学习实践。</p>
<h2 id="静态路由static-route">静态路由(Static Route)</h2>
<h3 id="概念">概念</h3>
<p>由网络管理人员手工添加到路由表上的路由</p>
<h3 id="基本思想">基本思想</h3>
<p>如果想要路由器知道某个网络，就手工输入这些路径。</p>
<h3 id="适用范围">适用范围</h3>
<p>一般用于网络规模不大、拓扑结构固定的网络中。</p>
<h3 id="特点">特点</h3>
<ul>
<li>简单、高效、可靠</li>
<li>优先级最高，当动态路由与静态路由发生冲突时，以静态路由为准</li>
</ul>
<h3 id="配置">配置</h3>
<pre><code>#######先完成接口的基础配置###########
RouterX# configure terminal
RouterX(config)# interface 接口名
RouterX(config)# ip address IP地址 子网掩码
#######配置静态路由###########
RouterX(config)# ip route 目标网段 子网掩码 下一跳IP地址/本地路由器的出站接口 可选项参数
</code></pre>
<h2 id="默认路由default-route">默认路由(Default Route)</h2>
<h3 id="概念-2">概念</h3>
<p>对IP数据包中的目的地址找不到存在的其他路由时，路由器所选择的路由</p>
<h3 id="配置-2">配置</h3>
<pre><code>######路由器禁用路由功能时设置默认路由#####
RouterX(config)# ip default-gateway IP地址
######路由器启用路由功能时设置默认路由#####
RouterX(config)# ip default-network 网段
######创建到0.0.0.0 0.0.0.0的默认路由#####
RouterX(config)# ip route0.0.0.0 0.0.0.0
</code></pre>
<h2 id="动态路由dynamic-route">动态路由(Dynamic Route)</h2>
<h3 id="概念-3">概念</h3>
<p>使用网络路由协议自动调整拓扑或流量变化的路由</p>
<h3 id="适用范围-2">适用范围</h3>
<p>适用于网络规模大、网络拓扑复杂的结构网络中。</p>
<h3 id="特点-2">特点</h3>
<ul>
<li>实时的适应网络结构的变化</li>
<li>通常作为静态路由的补充</li>
</ul>
<h3 id="动态路由协议">动态路由协议</h3>
<h4 id="概念-4">概念</h4>
<p>在路由器之间使用路由协议来确定远程网络的路径，并在路由表中维护这些网络；确定路径后，路由器可以通过路由协议学习网络条目</p>
<h4 id="协议">协议</h4>
<ul>
<li>OSPF</li>
<li>RIP</li>
<li>EIGRP</li>
<li>BGP</li>
<li>···</li>
</ul>
<h4 id="配置eigrp">配置EIGRP</h4>
<pre><code>RouterX(config)#router eigrp 自治系统编号
RouterX(config-router)#network 直连网段 子网掩码的反码
RouterX(config)#no auto-summary

########信息查看#######
RouterX# show ip eigrp interface  显示EIGRP协议的接口
RouterX# show ip eigrp traffic  检测hello、update这些报文收发情况
RouterX# show ip eigrp neighbor  检测邻居
RouterX# show ip eigrp topology  检测拓扑表的条目
RouterX# show ip route eigrp
RouterX# traceroute IP地址  检测经过的路径
</code></pre>
<h4 id="qa-eigrp邻居起不来">Q&amp;A: EIGRP邻居起不来？</h4>
<ol>
<li>看路由器能否通信</li>
<li>AS是否一致</li>
<li>K值（权重）是否一致</li>
<li>认证PASSWORD</li>
<li>DUAL算法的Query包（用于查询路由信息）发送超过15次</li>
</ol>
<h4 id="配置rip">配置RIP</h4>
<pre><code>RouterX(config)#router rip
RouterX(config-router)#version 2
RouterX(config-router)#no auto-summary
RouterX(config-router)#network 直连网段

########信息查看#######
RouterX# show ip route
RouterX# show ip route rip
RouterX# show ip protocol
RouterX# show ip rip database
RouterX# show running-confiig
RouterX# clear ip route *  刷新路由表
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[操作系统复习]]></title>
        <id>https://Just7chambray.github.io/post/os_review/</id>
        <link href="https://Just7chambray.github.io/post/os_review/">
        </link>
        <updated>2020-05-29T09:24:05.000Z</updated>
        <summary type="html"><![CDATA[<p>名词解释、简答题、计算题</p>
]]></summary>
        <content type="html"><![CDATA[<p>名词解释、简答题、计算题</p>
<!-- more -->
<h1 id="名词解释">名词解释</h1>
<h2 id="1操作系统ppt5">1.操作系统(ppt5)</h2>
<p>操作系统：一组控制和管理计算机硬件和软件资源、合理地对各类作业进行调度，以及方便用户使用的程序的集合。</p>
<h2 id="2分时系统book9">2.分时系统（book9）</h2>
<p>分时系统：在一台主机上连接了多个配有显示器和键盘的终端并由此所组成的系统，该系统允许多个用户同时通过自己的终端，以交互方式使用计算机，共享主机中的资源。</p>
<h2 id="3实时系统ppt44book11">3.实时系统(ppt44，book11)</h2>
<p>实时系统：系统能及时(或即时)响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。</p>
<h2 id="4进程ppt19book39">4.进程（ppt19，book39）</h2>
<p>进程：进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。</p>
<h2 id="5原语ppt46book47">5.原语（ppt46，book47）</h2>
<p>原语:由若干条指令组成的，用于完成一定功能的一个过程。</p>
<h2 id="6临界资源ppt68book53">6.临界资源（ppt68，book53）</h2>
<p>临界资源：一段时间内只允许一个进程访问的资源，如打印机，扫描仪等，诸进程间应采取互斥方式，实现对这种资源的共享。</p>
<h2 id="7临界区ppt68book55">7.临界区（ppt68,book55）</h2>
<p>临界区：在每个进程中访问临界资源的那段代码。</p>
<h2 id="8管程ppt89book63">8.管程（ppt89，book63）</h2>
<p>管程：一个管程定义了一个数据结构和能为并发进程所执行(在该数据结构上)的一组操作，这组操作能同步进程和改变管程中的数据。</p>
<h2 id="9管道ppt124book74">9.管道（ppt124，book74）</h2>
<p>管道：用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件，又名pipe文件。</p>
<h2 id="10周转时间ppt30book93">10.周转时间（ppt30，book93）</h2>
<p>周转时间：是指从作业被提交给系统开始，到作业完成为止的这段时间间隔。</p>
<h2 id="11响应时间ppt33book94">11.响应时间（ppt33，book94）</h2>
<p>响应时间：是从用户通过键盘提交一个请求开始，直至系统首次产生响应为止的时间，或者说，直到屏幕上显示出结果为止的一段时间间隔。</p>
<h2 id="12死锁ppt88">12.死锁（ppt88）</h2>
<p>死锁：是指多个进程在运行过程中因争夺资源而造成的一种僵局，当进程出于这种僵持状态时，若无外力作用，它们将无法再向前推进。</p>
<h2 id="13安全状态ppt109book119">13.安全状态（ppt109，book119）</h2>
<p>安全状态：是指系统能按某种进程顺序(P1，P2，…，Pn)(称〈P1，P2，…，Pn〉序列为安全序列)，来为每个进程Pi分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。如果系统无法找到这样一个安全序列，则称系统处于不安全状态。</p>
<h2 id="14拼接紧凑ppt57book143">14.拼接/紧凑（ppt57，book143）</h2>
<p>拼接/紧凑：通过移动内存中作业的位置，以把原来多个分散的小分区拼接成一个大分区的方法。</p>
<h2 id="15对换ppt61book145">15.对换（ppt61，book145）</h2>
<p>对换：是指把内存中暂时不能运行的进程或者暂时不用的程序和数据调出到外存上，以便腾出足够的内存空间，再把已具备运行条件的进程或进程所需要的程序和数据调入内存。</p>
<h2 id="16页面页ppt66book148">16.页面/页（ppt66，book148）</h2>
<p>页面/页：一个进程的逻辑地址空间分成若干个大小相等的片。</p>
<h2 id="17快表联想寄存器ppt77book151">17.快表/联想寄存器（ppt77，book151）</h2>
<p>快表/联想寄存器：为了提高地址变换速度，可在地址变换机构中增设一个具有并行查寻能力的特殊高速缓冲寄存器。</p>
<h2 id="18虚拟存储器new">18.虚拟存储器（new）</h2>
<p>虚拟存储器 ：具有请求调入功能和置换功能，从逻辑上对内存容量加以扩充的一种存储器系统。</p>
<h2 id="19最小物理块数ppt25book171">19.最小物理块数（ppt25，book171）</h2>
<p>最小物理块数：是指能保证进程正常运行所需的最小物理块数。当系统为进程分配的物理块数少于此值时，进程将无法运行。</p>
<h2 id="20设备独立性ppt102book213">20.设备独立性（ppt102，book213)</h2>
<p>设备独立性/设备无关性: 应用程序独立于具体使用的物理设备。</p>
<h2 id="21设备的安全分配方式和不安全分配方式ppt121-122book217">21.设备的安全分配方式和不安全分配方式（ppt121-122，book217）</h2>
<ol>
<li>安全分配方式<br>
在这种分配方式中，每当进程发出I/O请求后，便进入阻塞状态，直到其I/O操作完成时才被唤醒。在采用这种分配策略时，一旦进程已经获得某种设备(资源)后便阻塞，使该进程不可能再请求任何资源，而在它运行时又不保持任何资源。</li>
<li>不安全分配方式<br>
在这种分配方式中，进程在发出I/O请求后仍继续运行，需要时又发出第二个I/O请求、 第三个I/O请求等。仅当进程所请求的设备已被另一进程占用时，请求进程才进入阻塞状态。</li>
</ol>
<h2 id="22spoolingppt127book220">22.SPOOLing（ppt127，book220）</h2>
<p>SPOOLING/假脱机操作：为了缓和CPU的高速性与I/O设备的低速性间的矛盾引入的脱机输入、脱机输出技术。该技术利用专门的外围控制机，实现数据在低速I/O设备和高速磁盘之间的数据传送，此时外围操作可以与CPU对数据的处理同时进行，这种联机情况下的同时外围操作称作SPOOLING，或称为假脱机操作。</p>
<h2 id="23记录ppt7book238">23.记录（ppt7，book238）</h2>
<p>记录：是一组相关数据项的集合，用于描述一个对象在某方面的属性。</p>
<h2 id="24文件ppt9book238">24.文件（ppt9，book238）</h2>
<p>文件：是指由创建者所定义的、具有文件名的一组相关元素的集合，可分为有结构文件和无结构文件两种。</p>
<h2 id="25索引结点i结点ppt52book251">25.索引结点/i结点（ppt52，book251）</h2>
<p>在有的系统中，如UNIX系统，便采用了把文件名与文件描述信息分开的办法，亦即，使文件描述信息单独形成一个称为索引结点的数据结构，简称为i结点。</p>
<h2 id="26位示图ppt13book280">26.位示图（ppt13，book280）</h2>
<p>位示图：利用二进制的一位来表示磁盘中一个盘块的使用情况，“0”表示对应的盘块空闲，“1”表示已分配。</p>
<h2 id="27事务ppt31book292">27.事务（ppt31，book292）</h2>
<p>事务：是用于访问和修改各种数据项的一个程序单位，它可以被看做是一系列相关的读和写操作。</p>
<h2 id="28磁盘高速缓存book283">28.磁盘高速缓存（book283）</h2>
<p>磁盘高速缓存：是指在内存中为磁盘盘块设置的一个缓冲区，在缓冲区中保存了某些盘块的副本。</p>
<hr>
<h1 id="简答题">简答题</h1>
<h2 id="1实时系统和分时系统的比较ppt50-51book12">1.实时系统和分时系统的比较（ppt50-51，book12）</h2>
<ol>
<li>多路性
<ul>
<li>实时信息处理系统也按分时原则为多个终端用户服务。</li>
<li>实时控制系统的多路性则主要表现在系统周期性地对多路现场信息进行采集，以及对多个对象或多个执行机构进行控制。</li>
<li>分时系统中的多路性则与用户情况有关，时多时少。</li>
</ul>
</li>
<li>独立性
<ul>
<li>实时信息处理系统中的每个终端用户在向实时系统提出服务请求时，是彼此独立地操作，互不干扰；</li>
<li>而实时控制系统中，对信息的采集和对对象的控制也都是彼此互不干扰。</li>
</ul>
</li>
<li>及时性
<ul>
<li>实时信息处理系统对实时性的要求与分时系统类似，都是以人所能接受的等待时间来确定的；</li>
<li>实时控制系统的及时性，则是以控制对象所要求的开始截止时间或完成截止时间来确定的，一般为秒级到毫秒级，甚至有的要低于100微秒。</li>
</ul>
</li>
<li>交互性
<ul>
<li>实时信息处理系统虽然也具有交互性，但这里人与系统的交互仅限于访问系统中某些特定的专用服务程序。</li>
<li>分时系统能向终端用户提供数据处理和资源共享等服务。</li>
</ul>
</li>
</ol>
<h2 id="2操作系统的基本特征ppt72-80book14-17">2.操作系统的基本特征（ppt72-80，book14-17）</h2>
<ol>
<li>并发性
<ul>
<li>并行与并发</li>
<li>引入进程</li>
<li>引入线程</li>
</ul>
</li>
<li>共享性
<ul>
<li>互斥共享方式</li>
<li>同时访问方式</li>
</ul>
</li>
<li>虚拟性
<ul>
<li>时分复用技术</li>
<li>空分复用技术</li>
</ul>
</li>
<li>异步性</li>
</ol>
<h2 id="3操作系统的主要功能ppt81-105book17-22">3.操作系统的主要功能（ppt81-105，book17-22）</h2>
<ol>
<li>处理机管理
<ul>
<li>进程控制</li>
<li>进程同步</li>
<li>进程通信</li>
<li>调度</li>
</ul>
</li>
<li>存储器管理
<ul>
<li>内存分配</li>
<li>内存保护</li>
<li>地址映射</li>
<li>内存扩充</li>
</ul>
</li>
<li>设备管理
<ul>
<li>缓冲管理</li>
<li>设备分配</li>
<li>设备处理</li>
</ul>
</li>
<li>文件管理
<ul>
<li>文件存储空间的管理</li>
<li>目录管理</li>
<li>文件读/写管理与保护</li>
</ul>
</li>
<li>操作系统与用户的接口
<ul>
<li>用户接口</li>
<li>程序接口</li>
</ul>
</li>
</ol>
<h2 id="4进程的特征ppt17-20book39">4.进程的特征（ppt17-20，book39）</h2>
<ol>
<li>结构特征
<ul>
<li>通常的程序是不能并发执行的。为使程序(含数据)能独立运行，应为之配置一进程控制块，即PCB(Process Control Block)；而由程序段、相关的数据段和PCB三部分便构成了进程实体。</li>
</ul>
</li>
<li>动态性
<ul>
<li>进程的实质是进程实体的一次执行过程，因此，动态性是进程的最基本的特征。</li>
<li>动态性还表现在：“它由创建而产生，由调度而执行，由撤消而消亡”。</li>
</ul>
</li>
<li>并发性
<ul>
<li>这是指多个进程实体同存于内存中，且能在一段时间内同时运行。并发性是进程的重要特征，同时也成为OS的重要特征。引入进程的目的也正是为了使其进程实体能和其它进程实体并发执行；而程序(没有建立PCB)是不能并发执行的。</li>
</ul>
</li>
<li>独立性
<ul>
<li>在传统的OS中，独立性是指进程实体是一个能独立运行、独立分配资源和独立接受调度的基本单位。</li>
</ul>
</li>
<li>异步性
<ul>
<li>这是指进程按各自独立的、 不可预知的速度向前推进，或说进程实体按异步方式运行。</li>
</ul>
</li>
</ol>
<h2 id="5进程三种状态的转化关系book40ppt23">5.进程三种状态的转化关系（book40，ppt23）</h2>
<ol>
<li>进程的三种基本状态
<ul>
<li>就绪状态<br>
当进程已分配到除CPU以外的所有必要资源后，只要再获得CPU，便可立即执行，进程这时的状态称为就绪状态。</li>
<li>执行状态<br>
进程已获得CPU，其程序正在执行。在单处理机系统中，只有一个进程处于执行状态； 在多处理机系统中，则有多个进程处于执行状态。</li>
<li>阻塞状态<br>
正在执行的进程由于发生某事件而暂时无法继续执行时，便放弃处理机而处于暂停状态，亦即进程的执行受到阻塞，把这种暂停状态称为阻塞状态，有时也称为等待状态或封锁状态。</li>
</ul>
</li>
<li>进程状态的转换
<ul>
<li>就绪→执行<br>
处于就绪状态的进程，在调度程序为之分配了处理机之后便可执行，其状态由就绪状态转变为执行状态。</li>
<li>执行→就绪<br>
正在执行的进程（当前进程）如果因分配给它的时间片已完而被剥夺处理机暂停执行时，其状态由执行状态转变为就绪状态。</li>
<li>执行→阻塞<br>
如果因发生某事件,致使当前进程的执行受阻(例如进程访问某临界资源,而该资源正被其它进程访问时),使之无法继续执行,则该进程状态将由执行转变为阻塞。</li>
</ul>
</li>
</ol>
<h2 id="6引起进程终止的事件ppt54-57book50">6.引起进程终止的事件（ppt54-57，book50）</h2>
<ol>
<li>
<p>正常结束<br>
在任何计算机系统中，都应有一个用于表示进程已经运行完成的指示。</p>
</li>
<li>
<p>异常结束<br>
在进程运行期间，由于出现某些错误和故障而迫使进程终止。</p>
<ul>
<li>越界错误</li>
<li>保护错</li>
<li>非法指令</li>
<li>特权指令错</li>
<li>运行超时</li>
<li>等待超时</li>
<li>算术运算错</li>
<li>I/O故障</li>
</ul>
</li>
<li>
<p>外界干预<br>
外界干预并非指在本进程运行中出现了异常事件，而是指进程应外界的请求而终止运行。</p>
<ul>
<li>操作员或操作系统干预</li>
<li>父进程请求</li>
<li>父进程终止</li>
</ul>
</li>
</ol>
<h2 id="7进程同步应遵循的规则ppt70book55">7.进程同步应遵循的规则（ppt70,book55）</h2>
<ol>
<li>空闲让进<br>
当无进程处于临界区时，表明临界资源处于空闲状态，应允许一个请求进入临界区的进程立即进入自己的临界区，以有效地利用临界资源。</li>
<li>忙则等待<br>
当已有进程进入临界区时，表明临界资源正在被访问，因而其它试图进入临界区的进程必须等待，以保证对临界资源的互斥访问。</li>
<li>有限等待<br>
对要求访问临界资源的进程，应保证在有限时间内能进入自己的临界区，以免陷入“死等”状态。</li>
<li>让权等待<br>
当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入“忙等”状态。</li>
</ol>
<h2 id="8管程和进程的区别6点ppt94-95book64">8.管程和进程的区别（6点，ppt94-95，book64）</h2>
<ol>
<li>虽然二者都定义了数据结构，但进程定义的是私有数据结构PCB，管程定义的是公共数据结构，如消息队列等；</li>
<li>二者都存在对各自数据结构上的操作，但进程是由顺序程序执行有关的操作，而管程主要是进行同步操作和初始化操作；</li>
<li>设置进程的目的在于实现系统的并发性，而管程的设置则是解决共享资源的互斥使用问题；</li>
<li>进程通过调用管程中的过程对共享数据结构实行操作，该过程就如通常的子程序一样被调用，因而管程为被动工作方式，进程则为主动工作方式；</li>
<li>进程之间能并发执行，而管程则不能与其调用者并发；</li>
<li>进程具有动态性，由“创建”而诞生，由“撤销”而消亡，而管程则是操作系统中的一个资源管理模块，供进程调用。</li>
</ol>
<h2 id="9线程和进程的比较ppt145-148book82-84">9.线程和进程的比较（ppt145-148，book82-84）</h2>
<table>
<thead>
<tr>
<th></th>
<th>线程</th>
<th>进程</th>
</tr>
</thead>
<tbody>
<tr>
<td>调度</td>
<td>1.在引入线程OS中，线程是作为调度和分派的基本单位，进程是作为资源拥有的基本单位。2.在同一进程中，线程的切换不会引起进程的切换，但从一个进程中的线程切换到另一个进程中的线程时，将会引起进程的切换。</td>
<td>进程在传统OS中是作为拥有资源的基本单位和独立调度、分派的基本单位。</td>
</tr>
<tr>
<td>并发性</td>
<td>在引入线程OS中，不仅进程之间可以并发执行，而且在一个进程中的多个线程之间亦可并发执行，使得操作系统具有更好的并发性，从而能更加有效地提高系统资源的利用率和系统的吞吐量。</td>
<td>在传统OS中进程可以并发执行。</td>
</tr>
<tr>
<td>拥有资源</td>
<td>线程自己不拥有系统资源(也有一点必不可少的资源)，但它可以访问其隶属进程的资源。</td>
<td>进程在OS中拥有资源，是系统中拥有资源的一个基本单位。</td>
</tr>
<tr>
<td>系统开销</td>
<td>线程的系统开销远远小于进程的系统开销，线程之间的同步和通信也比进程简单。</td>
<td>在创建或撤消进程时，系统都要为之创建和回收进程控制块，分配或回收资源，OS所付出的开销明显大于线程创建或撤消时的开销。</td>
</tr>
</tbody>
</table>
<h2 id="10处理及调度的层次ppt7-19book92-93">10.处理及调度的层次（ppt7-19,book92-93）</h2>
<ol>
<li>高级调度/作业调度(接纳调度)的主要功能<br>
根据作业控制块中的信息，审查系统能否满足用户作业的资源需求，以及按照一定的算法，从外存的后备队列中选取某些作业调入内存，并为它们创建进程、分配必要的资源。然后再将新创建的进程插入就绪队列，准备执行。</li>
<li>中级调度/中程调度的功能<br>
引入中级调度的主要目的是为了提高内存利用率和系统吞吐量。为此，应使那些暂时不能运行的进程不再占用宝贵的内存资源，而将它们调至外存上去等待，把此时的进程状态称为就绪驻外存状态或挂起状态。</li>
<li>低级调度/进程调度/短程调度的主要功能<br>
用于决定就绪队列中的哪个进程(或内核级线程，为叙述方便，以后只写进程)应获得处理机，然后再由分派程序执行把处理机分配给该进程的具体操作。
<ul>
<li>保存处理机的现场信息</li>
<li>按某种算法选取进程</li>
<li>把处理器分配给进程</li>
</ul>
</li>
</ol>
<h2 id="11选择调度方式和调度算法的若干准则两级标题两大点ppt30-36">11.选择调度方式和调度算法的若干准则（两级标题两大点，ppt30-36）</h2>
<ol>
<li>面向用户的准则
<ul>
<li>周转时间短</li>
<li>响应时间快</li>
<li>截止时间的保证</li>
<li>优先权准则</li>
</ul>
</li>
<li>面向系统的准则
<ul>
<li>系统吞吐量高</li>
<li>处理机利用率好</li>
<li>各类资源的平衡利用</li>
</ul>
</li>
</ol>
<h2 id="12实时调度的基本条件ppt64-69book105-106">12.实时调度的基本条件（ppt64-69，book105-106）</h2>
<ol>
<li>提供必要的信息
<ul>
<li>就绪时间</li>
<li>开始截止时间和完成截止时间</li>
<li>处理时间</li>
<li>资源要求</li>
<li>优先级</li>
</ul>
</li>
<li>系统处理能力强</li>
<li>采用抢占式调度机制</li>
<li>具有快速切换机制
<ul>
<li>对外部中断的快速响应能力</li>
<li>快速的任务分派能力</li>
</ul>
</li>
</ol>
<h2 id="13产生死锁的必要条件ppt99-100book116">13.产生死锁的必要条件（ppt99-100，book116）</h2>
<ol>
<li>互斥条件<br>
指进程对所分配到的资源进行排它性使用，即在一段时间内某资源只由一个进程占用。如果此时还有其它进程请求该资源，则请求者只能等待，直至占有该资源的进程用毕释放。</li>
<li>请求和保持条件<br>
指进程已经保持了至少一个资源，但又提出了新的资源请求，而该资源又已被其它进程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持不放。</li>
<li>不剥夺条件<br>
指进程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放。</li>
<li>环路等待条件<br>
指在发生死锁时，必然存在一个进程——资源的环形链，即进程集合{P0，P1，P2，…，Pn}中的P0正在等待一个P1占用的资源； P1正在等待P2占用的资源，……，Pn正在等待已被P0占用的资源。</li>
</ol>
<h2 id="14处理死锁的基本方法ppt101-102book116">14.处理死锁的基本方法（ppt101-102，book116）</h2>
<ol>
<li>预防死锁<br>
这是一种较简单和直观的事先预防的方法。该方法是通过设置某些限制条件，去破坏产生死锁的四个必要条件中的一个或几个条件，来预防发生死锁。</li>
<li>避免死锁<br>
该方法同样是属于事先预防的策略，但它并不须事先采取各种限制措施去破坏产生死锁的四个必要条件，而是在资源的动态分配过程中，用某种方法去防止系统进入不安全状态，从而避免发生死锁。</li>
<li>检测死锁<br>
这种方法并不须事先采取任何限制性措施，也不必检查系统是否已经进入不安全区，而是允许系统在运行过程中发生死锁。</li>
<li>解除死锁<br>
这是与检测死锁相配套的一种措施。当检测到系统中已发生死锁时，须将进程从死锁状态中解脱出来。</li>
</ol>
<h2 id="15程序的装入和链接ppt11-17book132-135">15.程序的装入和链接（ppt11-17，book132-135）</h2>
<ol>
<li>程序的装入
<ul>
<li>绝对装入方式</li>
<li>可重定位装入方式</li>
<li>动态运行时装入方式</li>
</ul>
</li>
<li>程序的链接
<ul>
<li>静态链接</li>
<li>装入时动态链接</li>
<li>运行时动态链接</li>
</ul>
</li>
</ol>
<h2 id="16动态分区分配算法和原理ppt36-40book140">16.动态分区分配算法和原理（ppt36-40，book140）</h2>
<p>要求：会做作业，用自己的话描述原理。</p>
<ol>
<li>首次适应算法(First Fit)<br>
FF算法要求空闲分区链以地址递增的次序链接。<br>
在分配内存时，从链首开始顺序查找，直至找到一个大小能满足要求的空闲分区为止；然后再按照作业的大小，从该分区中划出一块内存空间分配给请求者，余下的空闲分区仍留在空闲链中。若从链首直至链尾都不能找到一个能满足要求的分区，则此次内存分配失败，返回。</li>
<li>循环首次适应算法(Next Fit)<br>
在为进程分配内存空间时，不再是每次都从链首开始查找，而是从上次找到的空闲分区的下一个空闲分区开始查找，直至找到一个能满足要求的空闲分区，从中划出一块与请求大小相等的内存空间分配给作业。</li>
<li>最佳适应算法(Best Fit)<br>
该每次为作业分配内存时，总是把能满足要求、又是最小的空闲分区分配给作业，避免“大材小用”。算法要求将所有的空闲分区按其容量以从小到大的顺序形成一空闲分区链。</li>
<li>最坏适应算法(Worst Fit)<br>
扫描整个空闲分区表或链表，总是挑选一个最大的空闲区分割给作业使用，要求将所有的空闲分区按其容量以从大到小的顺序形成一空闲分区链，查找时只要看第一个分区能否满足作业要求。</li>
</ol>
<h2 id="17基本的地址变换机构ppt73-74book150">17.基本的地址变换机构（ppt73-74，book150）</h2>
<p>在执行检索之前，先将页号与页表长度进行比较，如果页号大于或等于页表长度，则表示本次所访问的地址已超越进程的地址空间。于是，这一错误将被系统发现并产生一地址越界中断。<br>
若未出现越界错误，则将页表始址与页号和页表项长度的乘积相加，便得到该表项在页表中的位置，于是可从中得到该页的物理块号，将之装入物理地址寄存器中。与此同时，再将有效地址寄存器中的页内地址送入物理地址寄存器的块内地址字段中。这样便完成了从逻辑地址到物理地址的变换。图4-13示出了分页系统的地址变换机构。</p>
<h2 id="18具有快表的地址变化过程ppt77book151">18.具有快表的地址变化过程（ppt77，book151）</h2>
<p>在CPU给出有效地址后，由地址变换机构自动地将页号P送入高速缓冲寄存器，并将此页号与高速缓存中的所有页号进行比较，若其中有与此相匹配的页号，便表示所要访问的页表项在快表中。于是，可直接从快表中读出该页所对应的物理块号，并送到物理地址寄存器中。</p>
<p>如在块表中未找到对应的页表项，则还须再访问内存中的页表，找到后，把从页表项中读出的物理块号送地址寄存器；同时，再将此页表项存入快表的一个寄存器单元中，亦即，重新修改快表。但如果联想寄存器已满，则OS必须找到一个老的且已被认为不再需要的页表项，将它换出。</p>
<h2 id="19为什么要引入分段存储管理方式ppt87-90book155-156">19.为什么要引入分段存储管理方式（ppt87-90，book155-156）</h2>
<ol>
<li>方便编程<br>
通常，用户把自己的作业按照逻辑关系划分为若干个段，每个段都是从0开始编址，并有自己的名字和长度。因此，希望要访问的逻辑地址是由段名(段号)和段内偏移量(段内地址)决定的。</li>
<li>信息共享<br>
在实现对程序和数据的共享时，是以信息的逻辑单位为基础的。比如，共享某个例程和函数。</li>
<li>信息保护<br>
信息保护同样是对信息的逻辑单位进行保护，因此，分段管理方式能更有效和方便地实现信息保护功能。</li>
<li>动态增长<br>
在实际应用中，往往有些段，特别是数据段，在使用过程中会不断地增长，而事先又无法确切地知道数据段会增长到多大。</li>
<li>动态链接<br>
动态链接是指在作业运行之前，并不把几个目标程序段链接起来。要运行时，先将主程序所对应的目标程序装入内存并启动运行，当运行过程中又需要调用某段时，才将该段(目标程序)调入内存并进行链接。</li>
</ol>
<h2 id="20分段存储管理方式的地址变换过程ppt96book158">20.分段存储管理方式的地址变换过程（ppt96，book158）</h2>
<p>在进行地址变换时，系统将逻辑地址中的段号S与段表长度TL进行比较。若S&gt;TL，表示段号太大，是访问越界，于是产生越界中断信号；若未越界，则根据段表的始址和该段的段号，计算出该段对应段表项的位置，从中读出该段在内存的起始地址，然后，再检查段内地址d是否超过该段的段长SL。若超过，即d&gt;SL，同样发出越界中断信号；若未越界，则将该段的基址d与段内地址相加，即可得到要访问的内存物理地址。</p>
<h2 id="21分段和分页的区别ppt98-99book158">21.分段和分页的区别（ppt98-99，book158）</h2>
<ol>
<li>页是信息的物理单位，分页是为实现离散分配方式，以消减内存的外零头，提高内存的利用率。或者说，分页仅仅是由于系统管理的需要而不是用户的需要。<br>
段则是信息的逻辑单位，它含有一组其意义相对完整的信息。分段的目的是为了能更好地满足用户的需要。</li>
<li>页的大小固定且由系统决定，由系统把逻辑地址划分为页号和页内地址两部分，是由机器硬件实现的，因而在系统中只能有一种大小的页面；而段的长度却不固定，决定于用户所编写的程序，通常由编译程序在对源程序进行编译时，根据信息的性质来划分。</li>
<li>分页的作业地址空间是一维的，即单一的线性地址空间，程序员只需利用一个记忆符，即可表示一个地址；而分段的作业地址空间则是二维的，程序员在标识一个地址时，既需给出段名，又需给出段内地址。</li>
</ol>
<h2 id="22局部性原理及其论点ppt6-7book165">22.局部性原理及其论点（ppt6-7，book165）</h2>
<ul>
<li>
<p>局部性原理</p>
<ul>
<li>程序在执行时将呈现出局部性规律，即在一较短的时间内，程序的执行仅局限于某个部分；相应地，它所访问的存储空间也局限于某个区域。</li>
</ul>
</li>
<li>
<p>论点：</p>
<ol>
<li>程序执行时，除了少部分的转移和过程调用指令外，在大多数情况下仍是顺序执行的。该论点也在后来的许多学者对高级程序设计语言(如FORTRAN语言、PASCAL语言)及C语言规律的研究中被证实。</li>
<li>过程调用将会使程序的执行轨迹由一部分区域转至另一部分区域，但经研究看出，过程调用的深度在大多数情况下都不超过5。这就是说，程序将会在一段时间内都局限在这些过程的范围内运行。</li>
<li>程序中存在许多循环结构，这些虽然只由少数指令构成，但是它们将多次执行。</li>
<li>程序中还包括许多对数据结构的处理，如对数组进行操作，它们往往都局限于很小的范围内。</li>
</ol>
</li>
</ul>
<h2 id="23物理块的分配策略3点ppt27-29">23.物理块的分配策略（3点，ppt27-29）</h2>
<ol>
<li>固定分配局部置换<br>
这是指基于进程的类型(交互型或批处理型等)，或根据程序员、程序管理员的建议，为每个进程分配一定数目的物理块，在整个运行期间都不再改变。</li>
<li>可变分配全局置换<br>
这可能是最易于实现的一种物理块分配和置换策略，已用于若干个OS中。在采用这种策略时，先为系统中的每个进程分配一定数目的物理块，而OS自身也保持一个空闲物理块队列。当某进程发现缺页时，由系统从空闲物理块队列中取出一个物理块分配给该进程，并将欲调入的(缺)页装入其中。</li>
<li>可变分配局部置换<br>
这同样是基于进程的类型或根据程序员的要求，为每个进程分配一定数目的物理块，但当某进程发现缺页时，只允许从该进程在内存的页面中选出一页换出，这样就不会影响其它进程的运行。<br>
如果进程在运行中频繁地发生缺页中断，则系统须再为该进程分配若干附加的物理块，直至该进程的缺页率减少到适当程度为止。</li>
</ol>
<h2 id="24物理块的分配算法ppt30-32book172">24.物理块的分配算法（ppt30-32，book172）</h2>
<ol>
<li>平均分配算法<br>
这是将系统中所有可供分配的物理块平均分配给各个进程。</li>
<li>按比例分配算法<br>
这是根据进程的大小按比例分配物理块的算法。</li>
<li>考虑优先权的分配算法<br>
在实际应用中，为了照顾到重要的、紧迫的作业能尽快地完成，应为它分配较多的内存空间。通常采取的方法是把内存中可供分配的所有物理块分成两部分：<br>
一部分按比例地分配给各进程；另一部分则根据各进程的优先权，适当地增加其相应份额后，分配给各进程。</li>
</ol>
<h2 id="25设备与控制器间的三种信号线ppt11-12book197">25.设备与控制器间的三种信号线（ppt11-12，book197）</h2>
<ol>
<li>数据信号线<br>
这类信号线用于在设备和设备控制器之间传送数据信号。<br>
对输入设备而言，由外界输入的信号经转换器转换后所形成的数据，通常先送入缓冲器中，当数据量达到一定的比特(字符)数后，再从缓冲器通过一组数据信号线传送给设备控制器。</li>
<li>控制信号线<br>
这是作为由设备控制器向I/O设备发送控制信号时的通路。<br>
该信号规定了设备将要执行的操作，如读操作(指由设备向控制器传送数据)或写操作(从控制器接收数据)，或执行磁头移动等操作。</li>
<li>状态信号线<br>
这类信号线用于传送指示设备当前状态的信号。<br>
设备的当前状态有正在读(或写)；设备已读(写)完成，并准备好新的数据传送。</li>
</ol>
<h2 id="26设备控制器的基本功能ppt13-16ppt197-198">26.设备控制器的基本功能（ppt13-16，ppt197-198）</h2>
<ol>
<li>接收和识别命令<br>
CPU可以向控制器发送多种不同的命令，设备控制器应能接收并识别这些命令。为此，在控制器中应具有相应的控制寄存器，用来存放接收的命令和参数，并对所接收的命令进行译码。</li>
<li>数据交换<br>
这是指实现CPU与控制器之间、控制器与设备之间的数据交换。</li>
<li>标识和报告设备的状态<br>
控制器应记下设备的状态供CPU了解。例如，仅当该设备处于发送就绪状态时，CPU才能启动控制器从设备中读出数据。</li>
<li>地址识别<br>
就像内存中的每一个单元都有一个地址一样，系统中的每一个设备也都有一个地址，而设备控制器又必须能够识别它所控制的每个设备的地址。</li>
<li>数据缓冲<br>
由于I/O设备的速率较低而CPU和内存的速率却很高，故在控制器中必须设置一缓冲器。</li>
<li>差错控制<br>
设备控制器还兼管对由I/O设备传送来的数据进行差错检测。</li>
</ol>
<h2 id="27为什么要引入缓冲区ppt50-52book224">27.为什么要引入缓冲区（ppt50-52，book224）</h2>
<ol>
<li>缓和CPU与I/O设备间速度不匹配的矛盾<br>
事实上，凡在数据到达速率与其离去速率不同的地方，都可设置缓冲区，以缓和它们之间速率不匹配的矛盾。</li>
<li>减少对CPU的中断频率，放宽对CPU中断响应时间的限制</li>
<li>提高CPU和I/O设备之间的并行性<br>
缓冲的引入可显著地提高CPU和I/O设备间的并行操作程度，提高系统的吞吐量和设备的利用率。</li>
</ol>
<h2 id="28中断处理程序的处理过程ppt82-85book204-205">28.中断处理程序的处理过程(ppt82-85，book204-205)</h2>
<ol>
<li>唤醒被阻塞的驱动(程序)进程</li>
<li>保护被中断进程的CPU环境</li>
<li>转入相应的设备处理程序</li>
<li>中断处理</li>
<li>恢复被中断进程的现场</li>
</ol>
<h2 id="29spooling系统特点ppt133book222">29.SPOOLing系统特点（ppt133，book222）</h2>
<ol>
<li>提高了I/O的速度。<br>
这里，对数据所进行的I/O操作，已从对低速I/O设备进行的I/O操作，演变为对输入井或输出井中数据的存取，如同脱机输入输出一样，提高了I/O速度，缓和了CPU与低速I/O设备之间速度不匹配的矛盾。</li>
<li>将独占设备改造为共享设备。<br>
因为在SPOOLing系统中，实际上并没为任何进程分配设备，而只是在输入井或输出井中为进程分配一个存储区和建立一张I/O请求表。这样，便把独占设备改造为共享设备。</li>
<li>实现了虚拟设备功能。<br>
宏观上，虽然是多个进程在同时使用一台独占设备，而对于每一个进程而言，他们都会认为自己是独占了一个设备。当然，该设备只是逻辑上的设备。SPOOLing系统实现了将独占设备变换为若干台对应的逻辑设备的功能。</li>
</ol>
<h2 id="30最基本的文件操作ppt21book241">30.最基本的文件操作（ppt21，book241）</h2>
<ol>
<li>创建文件。在创建一个新文件时，系统首先要为新文件分配必要的外存空间，并在文件系统的目录中，为之建立一个目录项。</li>
<li>删除文件。当已不再需要某文件时，可将它从文件系统中删除，清空要删除文件的目录项，并回收存储空间。</li>
<li>读文件。在读一个文件时，须在相应系统调用中给出文件名和应读入的内存目标地址。</li>
<li>写文件。在写一个文件时，须先查找目录，找到指定文件的目录项，再利用目录中的写指针进行写操作。</li>
<li>截断文件。但如果文件名及其属性均无改变时，则可采取另一种所谓的截断文件的方法，此即将原有文件的长度设置为0，或者说是放弃原有的文件内容。</li>
<li>设置文件的读/写位置。设置文件读/写位置的操作，用于设置文件读/写指针的位置，以便每次读/写文件时，不是从其始端而是从所设置的位置开始操作。</li>
</ol>
<h2 id="31文件系统对目录管理的要求ppt46-47book249">31.文件系统对目录管理的要求（ppt46-47，book249）</h2>
<ol>
<li>实现“按名存取”，即用户只须向系统提供所需访问文件的名字，便能快速准确地找到指定文件在外存上的存储位置。这是目录管理中最基本的功能，也是文件系统向用户提供的最基本的服务。</li>
<li>提高对目录的检索速度。通过合理地组织目录结构的方法，可加快对目录的检索速度，从而提高对文件的存取速度。这是在设计一个大、中型文件系统时所追求的主要目标。</li>
<li>文件共享。在多用户系统中，应允许多个用户共享一个文件。这样就须在外存中只保留一份该文件的副本，供不同用户使用，以节省大量的存储空间，并方便用户和提高文件利用率。</li>
<li>允许文件重名。系统应允许不同用户对不同文件采用相同的名字，以便于用户按照自己的习惯给文件命名和使用文件。</li>
</ol>
<h2 id="32影响文件安全性的主要因素ppt88book261">32.影响文件安全性的主要因素（ppt88，book261）</h2>
<ol>
<li>人为因素，即由于人们有意或无意的行为，而使文件系统中的数据遭到破坏或丢失。</li>
<li>系统因素，即由于系统的某部分出现异常情况，而造成对数据的破坏或丢失。特别是作为数据存储介质的磁盘，在出现故障或损坏时，会对文件系统的安全性造成影响；</li>
<li>自然因素，即存放在磁盘上的数据，随着时间的推移将可能发生溢出或逐渐消失。</li>
</ol>
<h2 id="33三级容错技术ppt16-30book287-290">33.三级容错技术（ppt16-30，book287-290）</h2>
<ol>
<li>第一级容错技术SFT-Ⅰ
<ul>
<li>双份目录和双份文件分配表</li>
<li>热修复重定向和写后读校验</li>
</ul>
</li>
<li>第二级容错技术SFT-II
<ul>
<li>磁盘镜像</li>
<li>磁盘双工</li>
</ul>
</li>
<li>基于集群技术的容错功能
<ul>
<li>双机热备份模式</li>
<li>双机互为备份模式</li>
<li>公用磁盘模式</li>
</ul>
</li>
</ol>
<hr>
<h1 id="下载地址">下载地址</h1>
<div id="pdf">
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/OS%E9%87%8D%E7%82%B9.pdf">点击下载《操作系统重点》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.pdf">点击下载《名词解释》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E7%AE%80%E7%AD%94%E9%A2%98.pdf">点击下载《简答题》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E8%AE%A1%E7%AE%97%E9%A2%98.pdf">点击下载《计算题》PDF</a><br>
    <a href="https://jc-gridea.oss-cn-shanghai.aliyuncs.com/images/os/%E8%AE%A1%E7%AE%97%E9%A2%98%E8%A7%A3%E7%AD%94.pdf">点击下载《计算题解答》PDF</a><br>
</div>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PAT(Advanced)查找元素]]></title>
        <id>https://Just7chambray.github.io/post/pat_adv_lookingfor/</id>
        <link href="https://Just7chambray.github.io/post/pat_adv_lookingfor/">
        </link>
        <updated>2020-05-26T14:53:45.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1011-world-cup-betting-20分">1011 World Cup Betting (20分)</h2>
<h3 id="question">Question</h3>
<p>With the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa. Similarly, football betting fans were putting their money where their mouths were, by laying all manner of World Cup bets.</p>
<p>Chinese Football Lottery provided a &quot;Triple Winning&quot; game. The rule of winning was simple: first select any three of the games. Then for each selected game, bet on one of the three possible results -- namely W for win, T for tie, and L for lose. There was an odd assigned to each result. The winner's odd would be the product of the three odds times 65%.</p>
<p>For example, 3 games' odds are given as the following:</p>
<pre><code> W    T    L
1.1  2.5  1.7
1.2  3.1  1.6
4.1  1.2  1.1
</code></pre>
<p>To obtain the maximum profit, one must buy <code>W</code> for the 3rd game, <code>T</code> for the 2nd game, and <code>T</code> for the 1st game. If each bet takes 2 yuans, then the maximum profit would be (4.1×3.1×2.5×65%−1)×2=39.31 yuans (accurate up to 2 decimal places).</p>
<h3 id="input-specification">Input Specification</h3>
<p>Each input file contains one test case. Each case contains the betting information of 3 games. Each game occupies a line with three distinct odds corresponding to <code>W</code>, <code>T</code> and <code>L</code>.</p>
<h3 id="output-specification">Output Specification</h3>
<p>For each test case, print in one line the best bet of each game, and the maximum profit accurate up to 2 decimal places. The characters and the number must be separated by one space.</p>
<h3 id="sample-input">Sample Input</h3>
<pre><code>1.1 2.5 1.7
1.2 3.1 1.6
4.1 1.2 1.1
</code></pre>
<h3 id="sample-output1">Sample Output1</h3>
<pre><code>T T W 39.31
</code></pre>
<hr>
<h3 id="analysis">Analysis</h3>
<p>这题题意是给出3场比赛的赢平输的赔率，找出每一场比赛赔率最大的W T L，最后计算出收益。</p>
<h3 id="code">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;
char cmp(double g[]){
	if(g[0]&gt;g[1]){
		if(g[0]&gt;g[2])return 'W';
		else return 'L';
	}else{
		if(g[1]&gt;g[2])return 'T';
		else return 'L';
	}
}
int main() {
	double game[3]={0.0};
	double ans=1.0;
	for(int i=0;i&lt;3;i++){
		for(int j=0;j&lt;3;j++){
			scanf(&quot;%lf&quot;,&amp;game[j]);
		}
		printf(&quot;%c &quot;,cmp(game));
		ans*=max(max(game[0],game[1]),game[2]);
	}
	ans=(ans*0.65-1)*2;
	printf(&quot;%.2f&quot;,ans);
	return 0;
}
</code></pre>
<hr>
<h2 id="1006-sign-in-and-sign-out-25分">1006 Sign In and Sign Out (25分)</h2>
<h3 id="question-2">Question</h3>
<p>At the beginning of every day, the first person who signs in the computer room will unlock the door, and the last one who signs out will lock the door. Given the records of signing in's and out's, you are supposed to find the ones who have unlocked and locked the door on that day.</p>
<h3 id="input-specification-2">Input Specification</h3>
<p>Each input file contains one test case. Each case contains the records for one day. The case starts with a positive integer <em>M</em>, which is the total number of records, followed by <em>M</em> lines, each in the format:</p>
<pre><code>ID_number Sign_in_time Sign_out_time
</code></pre>
<p>where times are given in the format <code>HH:MM:SS</code>, and <code>ID_number</code> is a string with no more than 15 characters.</p>
<h3 id="output-specification-2">Output Specification</h3>
<p>For each test case, output in one line the ID numbers of the persons who have unlocked and locked the door on that day. The two ID numbers must be separated by one space.</p>
<p>Note: It is guaranteed that the records are consistent. That is, the sign in time must be earlier than the sign out time for each person, and there are no two persons sign in or out at the same moment.</p>
<h3 id="sample-input-2">Sample Input</h3>
<pre><code>3
CS301111 15:30:28 17:00:10
SC3021234 08:00:00 11:25:25
CS301133 21:45:00 21:58:40
</code></pre>
<h3 id="sample-output">Sample Output</h3>
<pre><code>SC3021234 CS301133
</code></pre>
<hr>
<h3 id="analysis-2">Analysis</h3>
<p>这题题意是给出n个人的id，sign in时间和 sign out时间，找出sign in时间最早的人和sign out最晚的人的id。一开始写了个结构体，包含id，sign in的时分秒，sign out的时分秒，写下来实在繁琐😓而且在min和max的赋初值上有点问题。因此参考柳神的思路，引入INT_MAX和INT_MIN，在循环里直接做判断。</p>
<h3 id="code-2">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
#include &lt;climits&gt;
using namespace std;

int main() {
	int m,min=INT_MAX,max=INT_MIN;
	string sin,sout;
	scanf(&quot;%d&quot;,&amp;m);
	for(int i=0;i&lt;m;i++){
		string s;
		cin&gt;&gt;s;
		int in_hh,in_mm,in_ss,out_hh,out_mm,out_ss;
		scanf(&quot;%d:%d:%d %d:%d:%d&quot;,&amp;in_hh,&amp;in_mm,&amp;in_ss,&amp;out_hh,&amp;out_mm,&amp;out_ss);
		if((in_ss+in_mm*60+in_hh*3600)&lt;=min){
			min=in_ss+in_mm*60+in_hh*3600;
			sin=s;
		}
		if((out_ss+out_mm*60+out_hh*3600)&gt;=max){
			max=out_ss+out_mm*60+out_hh*3600;
			sout=s;
		}
	}
	cout&lt;&lt;sin&lt;&lt;&quot; &quot;&lt;&lt;sout;
	return 0;
}
</code></pre>
<hr>
<h2 id="1036-boys-vs-girls-25分">1036 Boys vs Girls (25分)</h2>
<h3 id="question-3">Question</h3>
<p>This time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female students.</p>
<h3 id="input-specification-3">Input Specification</h3>
<p>Each input file contains one test case. Each case contains a positive integer <em>N</em>, followed by <em>N</em> lines of student information. Each line contains a student's <code>name</code>, <code>gender</code>, <code>ID</code> and <code>grade</code>, separated by a space, where <code>name</code> and <code>ID</code> are strings of no more than 10 characters with no space, <code>gender</code> is either <code>F</code> (female) or <code>M</code> (male), and <code>grade</code> is an integer between 0 and 100. It is guaranteed that all the grades are distinct.</p>
<h3 id="output-specification-3">Output Specification</h3>
<p>For each test case, output in 3 lines. The first line gives the name and ID of the female student with the highest grade, and the second line gives that of the male student with the lowest grade. The third line gives the difference <em>grade</em>F−<em>grade</em>M. If one such kind of student is missing, output <code>Absent</code> in the corresponding line, and output <code>NA</code> in the third line instead.</p>
<h3 id="sample-input1">Sample Input1</h3>
<pre><code>3
Joe M Math990112 89
Mike M CS991301 100
Mary F EE990830 95
</code></pre>
<h3 id="sample-output1-2">Sample Output1</h3>
<pre><code>Mary EE990830
Joe Math990112
6
</code></pre>
<h3 id="sample-input2">Sample Input2</h3>
<pre><code>1
Jean M AA980920 60
</code></pre>
<h3 id="sample-output2">Sample Output2</h3>
<pre><code>Absent
Jean AA980920
NA
</code></pre>
<hr>
<h3 id="analysis-3">Analysis</h3>
<p>这题题意是给出n个人的名字、性别、id、成绩，找出其中成绩最高的女生和成绩最低的男生，并输出姓名和id，以及两人的成绩差值。如果没有符合要求的男生或者女生，就输出Absent，成绩差值为NA。</p>
<p>这题也属于比较简单的题目，边输入边判断性别和成绩是否满足要求。注意最高成绩和最低成绩 的初值为-1和101。</p>
<h3 id="code-3">Code</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;

int main() {
	int n,high=-1,low=101;
	string fn,fi,mn,mi;
	scanf(&quot;%d&quot;,&amp;n);
	for(int i=0;i&lt;n;i++){
		string name,id;
		char gender;
		int grade;
		cin&gt;&gt;name&gt;&gt;gender&gt;&gt;id&gt;&gt;grade;
		if(gender=='F' &amp;&amp; grade&gt;high){
			fn=name;fi=id;
			high=grade;
		}
		if(gender=='M'&amp;&amp;grade&lt;low){
			mn=name;mi=id;
			low=grade;
		}
	}
	if(high==-1)cout&lt;&lt;&quot;Absent&quot;&lt;&lt;endl;
	else cout&lt;&lt;fn&lt;&lt;&quot; &quot;&lt;&lt;fi&lt;&lt;endl;
	if(low==101)cout&lt;&lt;&quot;Absent&quot;&lt;&lt;endl;
	else cout&lt;&lt;mn&lt;&lt;&quot; &quot;&lt;&lt;mi&lt;&lt;endl;
	if(high==-1||low==101)cout&lt;&lt;&quot;NA&quot;;
	else cout&lt;&lt;high-low;
	return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>